ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"pb_decode.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.buf_read,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	buf_read:
  26              	.LVL0:
  27              	.LFB0:
  28              		.file 1 "Src/pb_decode.c"
   1:Src/pb_decode.c **** /* pb_decode.c -- decode a protobuf using minimal resources
   2:Src/pb_decode.c ****  *
   3:Src/pb_decode.c ****  * 2011 Petteri Aimonen <jpa@kapsi.fi>
   4:Src/pb_decode.c ****  */
   5:Src/pb_decode.c **** 
   6:Src/pb_decode.c **** /* Use the GCC warn_unused_result attribute to check that all return values
   7:Src/pb_decode.c ****  * are propagated correctly. On other compilers and gcc before 3.4.0 just
   8:Src/pb_decode.c ****  * ignore the annotation.
   9:Src/pb_decode.c ****  */
  10:Src/pb_decode.c **** #if !defined(__GNUC__) || ( __GNUC__ < 3) || (__GNUC__ == 3 && __GNUC_MINOR__ < 4)
  11:Src/pb_decode.c ****     #define checkreturn
  12:Src/pb_decode.c **** #else
  13:Src/pb_decode.c ****     #define checkreturn __attribute__((warn_unused_result))
  14:Src/pb_decode.c **** #endif
  15:Src/pb_decode.c **** 
  16:Src/pb_decode.c **** #include "pb.h"
  17:Src/pb_decode.c **** #include "pb_decode.h"
  18:Src/pb_decode.c **** #include "pb_common.h"
  19:Src/pb_decode.c **** 
  20:Src/pb_decode.c **** /**************************************
  21:Src/pb_decode.c ****  * Declarations internal to this file *
  22:Src/pb_decode.c ****  **************************************/
  23:Src/pb_decode.c **** 
  24:Src/pb_decode.c **** typedef bool (*pb_decoder_t)(pb_istream_t *stream, const pb_field_t *field, void *dest) checkreturn
  25:Src/pb_decode.c **** 
  26:Src/pb_decode.c **** static bool checkreturn buf_read(pb_istream_t *stream, pb_byte_t *buf, size_t count);
  27:Src/pb_decode.c **** static bool checkreturn read_raw_value(pb_istream_t *stream, pb_wire_type_t wire_type, pb_byte_t *b
  28:Src/pb_decode.c **** static bool checkreturn decode_static_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_fiel
  29:Src/pb_decode.c **** static bool checkreturn decode_callback_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_fi
  30:Src/pb_decode.c **** static bool checkreturn decode_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_field_iter_
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 2


  31:Src/pb_decode.c **** static void iter_from_extension(pb_field_iter_t *iter, pb_extension_t *extension);
  32:Src/pb_decode.c **** static bool checkreturn default_extension_decoder(pb_istream_t *stream, pb_extension_t *extension, 
  33:Src/pb_decode.c **** static bool checkreturn decode_extension(pb_istream_t *stream, uint32_t tag, pb_wire_type_t wire_ty
  34:Src/pb_decode.c **** static bool checkreturn find_extension_field(pb_field_iter_t *iter);
  35:Src/pb_decode.c **** static void pb_field_set_to_default(pb_field_iter_t *iter);
  36:Src/pb_decode.c **** static void pb_message_set_to_defaults(const pb_field_t fields[], void *dest_struct);
  37:Src/pb_decode.c **** static bool checkreturn pb_dec_varint(pb_istream_t *stream, const pb_field_t *field, void *dest);
  38:Src/pb_decode.c **** static bool checkreturn pb_decode_varint32_eof(pb_istream_t *stream, uint32_t *dest, bool *eof);
  39:Src/pb_decode.c **** static bool checkreturn pb_dec_uvarint(pb_istream_t *stream, const pb_field_t *field, void *dest);
  40:Src/pb_decode.c **** static bool checkreturn pb_dec_svarint(pb_istream_t *stream, const pb_field_t *field, void *dest);
  41:Src/pb_decode.c **** static bool checkreturn pb_dec_fixed32(pb_istream_t *stream, const pb_field_t *field, void *dest);
  42:Src/pb_decode.c **** static bool checkreturn pb_dec_fixed64(pb_istream_t *stream, const pb_field_t *field, void *dest);
  43:Src/pb_decode.c **** static bool checkreturn pb_dec_bytes(pb_istream_t *stream, const pb_field_t *field, void *dest);
  44:Src/pb_decode.c **** static bool checkreturn pb_dec_string(pb_istream_t *stream, const pb_field_t *field, void *dest);
  45:Src/pb_decode.c **** static bool checkreturn pb_dec_submessage(pb_istream_t *stream, const pb_field_t *field, void *dest
  46:Src/pb_decode.c **** static bool checkreturn pb_dec_fixed_length_bytes(pb_istream_t *stream, const pb_field_t *field, vo
  47:Src/pb_decode.c **** static bool checkreturn pb_skip_varint(pb_istream_t *stream);
  48:Src/pb_decode.c **** static bool checkreturn pb_skip_string(pb_istream_t *stream);
  49:Src/pb_decode.c **** 
  50:Src/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
  51:Src/pb_decode.c **** static bool checkreturn allocate_field(pb_istream_t *stream, void *pData, size_t data_size, size_t 
  52:Src/pb_decode.c **** static bool checkreturn pb_release_union_field(pb_istream_t *stream, pb_field_iter_t *iter);
  53:Src/pb_decode.c **** static void pb_release_single_field(const pb_field_iter_t *iter);
  54:Src/pb_decode.c **** #endif
  55:Src/pb_decode.c **** 
  56:Src/pb_decode.c **** #ifdef PB_WITHOUT_64BIT
  57:Src/pb_decode.c **** #define pb_int64_t int32_t
  58:Src/pb_decode.c **** #define pb_uint64_t uint32_t
  59:Src/pb_decode.c **** #else
  60:Src/pb_decode.c **** #define pb_int64_t int64_t
  61:Src/pb_decode.c **** #define pb_uint64_t uint64_t
  62:Src/pb_decode.c **** #endif
  63:Src/pb_decode.c **** 
  64:Src/pb_decode.c **** /* --- Function pointers to field decoders ---
  65:Src/pb_decode.c ****  * Order in the array must match pb_action_t LTYPE numbering.
  66:Src/pb_decode.c ****  */
  67:Src/pb_decode.c **** static const pb_decoder_t PB_DECODERS[PB_LTYPES_COUNT] = {
  68:Src/pb_decode.c ****     &pb_dec_varint,
  69:Src/pb_decode.c ****     &pb_dec_uvarint,
  70:Src/pb_decode.c ****     &pb_dec_svarint,
  71:Src/pb_decode.c ****     &pb_dec_fixed32,
  72:Src/pb_decode.c ****     &pb_dec_fixed64,
  73:Src/pb_decode.c ****     
  74:Src/pb_decode.c ****     &pb_dec_bytes,
  75:Src/pb_decode.c ****     &pb_dec_string,
  76:Src/pb_decode.c ****     &pb_dec_submessage,
  77:Src/pb_decode.c ****     NULL, /* extensions */
  78:Src/pb_decode.c ****     &pb_dec_fixed_length_bytes
  79:Src/pb_decode.c **** };
  80:Src/pb_decode.c **** 
  81:Src/pb_decode.c **** /*******************************
  82:Src/pb_decode.c ****  * pb_istream_t implementation *
  83:Src/pb_decode.c ****  *******************************/
  84:Src/pb_decode.c **** 
  85:Src/pb_decode.c **** static bool checkreturn buf_read(pb_istream_t *stream, pb_byte_t *buf, size_t count)
  86:Src/pb_decode.c **** {
  29              		.loc 1 86 1 view -0
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 3


  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 1 86 1 is_stmt 0 view .LVU1
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
  87:Src/pb_decode.c ****     size_t i;
  39              		.loc 1 87 5 is_stmt 1 view .LVU2
  88:Src/pb_decode.c ****     const pb_byte_t *source = (const pb_byte_t*)stream->state;
  40              		.loc 1 88 5 view .LVU3
  41              		.loc 1 88 22 is_stmt 0 view .LVU4
  42 0002 4468     		ldr	r4, [r0, #4]
  43              	.LVL1:
  89:Src/pb_decode.c ****     stream->state = (pb_byte_t*)stream->state + count;
  44              		.loc 1 89 5 is_stmt 1 view .LVU5
  45              		.loc 1 89 47 is_stmt 0 view .LVU6
  46 0004 A318     		adds	r3, r4, r2
  47              		.loc 1 89 19 view .LVU7
  48 0006 4360     		str	r3, [r0, #4]
  90:Src/pb_decode.c ****     
  91:Src/pb_decode.c ****     if (buf != NULL)
  49              		.loc 1 91 5 is_stmt 1 view .LVU8
  50              		.loc 1 91 8 is_stmt 0 view .LVU9
  51 0008 39B1     		cbz	r1, .L3
  52 000a 0846     		mov	r0, r1
  53              	.LVL2:
  92:Src/pb_decode.c ****     {
  93:Src/pb_decode.c ****         for (i = 0; i < count; i++)
  54              		.loc 1 93 16 view .LVU10
  55 000c 0023     		movs	r3, #0
  56              	.LVL3:
  57              	.L2:
  58              		.loc 1 93 9 discriminator 1 view .LVU11
  59 000e 9342     		cmp	r3, r2
  60 0010 03D2     		bcs	.L3
  94:Src/pb_decode.c ****             buf[i] = source[i];
  61              		.loc 1 94 13 is_stmt 1 discriminator 3 view .LVU12
  62              		.loc 1 94 28 is_stmt 0 discriminator 3 view .LVU13
  63 0012 E15C     		ldrb	r1, [r4, r3]	@ zero_extendqisi2
  64              		.loc 1 94 20 discriminator 3 view .LVU14
  65 0014 C154     		strb	r1, [r0, r3]
  93:Src/pb_decode.c ****             buf[i] = source[i];
  66              		.loc 1 93 33 discriminator 3 view .LVU15
  67 0016 0133     		adds	r3, r3, #1
  68              	.LVL4:
  93:Src/pb_decode.c ****             buf[i] = source[i];
  69              		.loc 1 93 33 discriminator 3 view .LVU16
  70 0018 F9E7     		b	.L2
  71              	.LVL5:
  72              	.L3:
  95:Src/pb_decode.c ****     }
  96:Src/pb_decode.c ****     
  97:Src/pb_decode.c ****     return true;
  73              		.loc 1 97 5 is_stmt 1 view .LVU17
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 4


  98:Src/pb_decode.c **** }
  74              		.loc 1 98 1 is_stmt 0 view .LVU18
  75 001a 0120     		movs	r0, #1
  76 001c 5DF8044B 		ldr	r4, [sp], #4
  77              	.LCFI1:
  78              		.cfi_restore 4
  79              		.cfi_def_cfa_offset 0
  80              	.LVL6:
  81              		.loc 1 98 1 view .LVU19
  82 0020 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE0:
  86              		.section	.text.pb_readbyte,"ax",%progbits
  87              		.align	1
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	pb_readbyte:
  94              	.LVL7:
  95              	.LFB2:
  99:Src/pb_decode.c **** 
 100:Src/pb_decode.c **** bool checkreturn pb_read(pb_istream_t *stream, pb_byte_t *buf, size_t count)
 101:Src/pb_decode.c **** {
 102:Src/pb_decode.c **** #ifndef PB_BUFFER_ONLY
 103:Src/pb_decode.c **** 	if (buf == NULL && stream->callback != buf_read)
 104:Src/pb_decode.c **** 	{
 105:Src/pb_decode.c **** 		/* Skip input bytes */
 106:Src/pb_decode.c **** 		pb_byte_t tmp[16];
 107:Src/pb_decode.c **** 		while (count > 16)
 108:Src/pb_decode.c **** 		{
 109:Src/pb_decode.c **** 			if (!pb_read(stream, tmp, 16))
 110:Src/pb_decode.c **** 				return false;
 111:Src/pb_decode.c **** 			
 112:Src/pb_decode.c **** 			count -= 16;
 113:Src/pb_decode.c **** 		}
 114:Src/pb_decode.c **** 		
 115:Src/pb_decode.c **** 		return pb_read(stream, tmp, count);
 116:Src/pb_decode.c **** 	}
 117:Src/pb_decode.c **** #endif
 118:Src/pb_decode.c **** 
 119:Src/pb_decode.c ****     if (stream->bytes_left < count)
 120:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "end-of-stream");
 121:Src/pb_decode.c ****     
 122:Src/pb_decode.c **** #ifndef PB_BUFFER_ONLY
 123:Src/pb_decode.c ****     if (!stream->callback(stream, buf, count))
 124:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 125:Src/pb_decode.c **** #else
 126:Src/pb_decode.c ****     if (!buf_read(stream, buf, count))
 127:Src/pb_decode.c ****         return false;
 128:Src/pb_decode.c **** #endif
 129:Src/pb_decode.c ****     
 130:Src/pb_decode.c ****     stream->bytes_left -= count;
 131:Src/pb_decode.c ****     return true;
 132:Src/pb_decode.c **** }
 133:Src/pb_decode.c **** 
 134:Src/pb_decode.c **** /* Read a single byte from input stream. buf may not be NULL.
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 5


 135:Src/pb_decode.c ****  * This is an optimization for the varint decoding. */
 136:Src/pb_decode.c **** static bool checkreturn pb_readbyte(pb_istream_t *stream, pb_byte_t *buf)
 137:Src/pb_decode.c **** {
  96              		.loc 1 137 1 is_stmt 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 138:Src/pb_decode.c ****     if (stream->bytes_left == 0)
 100              		.loc 1 138 5 view .LVU21
 101              		.loc 1 138 15 is_stmt 0 view .LVU22
 102 0000 8368     		ldr	r3, [r0, #8]
 103              		.loc 1 138 8 view .LVU23
 104 0002 5BB1     		cbz	r3, .L16
 137:Src/pb_decode.c ****     if (stream->bytes_left == 0)
 105              		.loc 1 137 1 view .LVU24
 106 0004 10B5     		push	{r4, lr}
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 111 0006 0446     		mov	r4, r0
 139:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "end-of-stream");
 140:Src/pb_decode.c **** 
 141:Src/pb_decode.c **** #ifndef PB_BUFFER_ONLY
 142:Src/pb_decode.c ****     if (!stream->callback(stream, buf, 1))
 112              		.loc 1 142 5 is_stmt 1 view .LVU25
 113              		.loc 1 142 16 is_stmt 0 view .LVU26
 114 0008 0368     		ldr	r3, [r0]
 115              		.loc 1 142 10 view .LVU27
 116 000a 0122     		movs	r2, #1
 117 000c 9847     		blx	r3
 118              	.LVL8:
 119              		.loc 1 142 8 view .LVU28
 120 000e 0346     		mov	r3, r0
 121 0010 60B1     		cbz	r0, .L17
 143:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 144:Src/pb_decode.c **** #else
 145:Src/pb_decode.c ****     *buf = *(const pb_byte_t*)stream->state;
 146:Src/pb_decode.c ****     stream->state = (pb_byte_t*)stream->state + 1;
 147:Src/pb_decode.c **** #endif
 148:Src/pb_decode.c **** 
 149:Src/pb_decode.c ****     stream->bytes_left--;
 122              		.loc 1 149 5 is_stmt 1 view .LVU29
 123              		.loc 1 149 11 is_stmt 0 view .LVU30
 124 0012 A268     		ldr	r2, [r4, #8]
 125              		.loc 1 149 23 view .LVU31
 126 0014 013A     		subs	r2, r2, #1
 127 0016 A260     		str	r2, [r4, #8]
 150:Src/pb_decode.c ****     
 151:Src/pb_decode.c ****     return true;    
 128              		.loc 1 151 5 is_stmt 1 view .LVU32
 129              	.L10:
 152:Src/pb_decode.c **** }
 130              		.loc 1 152 1 is_stmt 0 view .LVU33
 131 0018 1846     		mov	r0, r3
 132 001a 10BD     		pop	{r4, pc}
 133              	.LVL9:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 6


 134              	.L16:
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 0
 137              		.cfi_restore 4
 138              		.cfi_restore 14
 139:Src/pb_decode.c **** 
 139              		.loc 1 139 9 is_stmt 1 view .LVU34
 140 001c C368     		ldr	r3, [r0, #12]
 141 001e 1BB1     		cbz	r3, .L18
 142              	.L9:
 139:Src/pb_decode.c **** 
 143              		.loc 1 139 9 is_stmt 0 discriminator 4 view .LVU35
 144 0020 C360     		str	r3, [r0, #12]
 145 0022 0023     		movs	r3, #0
 146              		.loc 1 152 1 discriminator 4 view .LVU36
 147 0024 1846     		mov	r0, r3
 148              	.LVL10:
 149              		.loc 1 152 1 discriminator 4 view .LVU37
 150 0026 7047     		bx	lr
 151              	.LVL11:
 152              	.L18:
 139:Src/pb_decode.c **** 
 153              		.loc 1 139 9 view .LVU38
 154 0028 034B     		ldr	r3, .L20
 155 002a F9E7     		b	.L9
 156              	.LVL12:
 157              	.L17:
 158              	.LCFI4:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 143:Src/pb_decode.c **** #else
 162              		.loc 1 143 9 is_stmt 1 view .LVU39
 163 002c E268     		ldr	r2, [r4, #12]
 164 002e 0AB1     		cbz	r2, .L19
 165              	.L12:
 143:Src/pb_decode.c **** #else
 166              		.loc 1 143 9 is_stmt 0 discriminator 4 view .LVU40
 167 0030 E260     		str	r2, [r4, #12]
 168 0032 F1E7     		b	.L10
 169              	.L19:
 143:Src/pb_decode.c **** #else
 170              		.loc 1 143 9 view .LVU41
 171 0034 014A     		ldr	r2, .L20+4
 172 0036 FBE7     		b	.L12
 173              	.L21:
 174              		.align	2
 175              	.L20:
 176 0038 00000000 		.word	.LC0
 177 003c 10000000 		.word	.LC1
 178              		.cfi_endproc
 179              	.LFE2:
 181              		.section	.text.pb_decode_varint32_eof,"ax",%progbits
 182              		.align	1
 183              		.syntax unified
 184              		.thumb
 185              		.thumb_func
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 7


 186              		.fpu fpv4-sp-d16
 188              	pb_decode_varint32_eof:
 189              	.LVL13:
 190              	.LFB4:
 153:Src/pb_decode.c **** 
 154:Src/pb_decode.c **** pb_istream_t pb_istream_from_buffer(const pb_byte_t *buf, size_t bufsize)
 155:Src/pb_decode.c **** {
 156:Src/pb_decode.c ****     pb_istream_t stream;
 157:Src/pb_decode.c ****     /* Cast away the const from buf without a compiler error.  We are
 158:Src/pb_decode.c ****      * careful to use it only in a const manner in the callbacks.
 159:Src/pb_decode.c ****      */
 160:Src/pb_decode.c ****     union {
 161:Src/pb_decode.c ****         void *state;
 162:Src/pb_decode.c ****         const void *c_state;
 163:Src/pb_decode.c ****     } state;
 164:Src/pb_decode.c **** #ifdef PB_BUFFER_ONLY
 165:Src/pb_decode.c ****     stream.callback = NULL;
 166:Src/pb_decode.c **** #else
 167:Src/pb_decode.c ****     stream.callback = &buf_read;
 168:Src/pb_decode.c **** #endif
 169:Src/pb_decode.c ****     state.c_state = buf;
 170:Src/pb_decode.c ****     stream.state = state.state;
 171:Src/pb_decode.c ****     stream.bytes_left = bufsize;
 172:Src/pb_decode.c **** #ifndef PB_NO_ERRMSG
 173:Src/pb_decode.c ****     stream.errmsg = NULL;
 174:Src/pb_decode.c **** #endif
 175:Src/pb_decode.c ****     return stream;
 176:Src/pb_decode.c **** }
 177:Src/pb_decode.c **** 
 178:Src/pb_decode.c **** /********************
 179:Src/pb_decode.c ****  * Helper functions *
 180:Src/pb_decode.c ****  ********************/
 181:Src/pb_decode.c **** 
 182:Src/pb_decode.c **** static bool checkreturn pb_decode_varint32_eof(pb_istream_t *stream, uint32_t *dest, bool *eof)
 183:Src/pb_decode.c **** {
 191              		.loc 1 183 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 8
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		.loc 1 183 1 is_stmt 0 view .LVU43
 196 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 197              	.LCFI5:
 198              		.cfi_def_cfa_offset 24
 199              		.cfi_offset 4, -24
 200              		.cfi_offset 5, -20
 201              		.cfi_offset 6, -16
 202              		.cfi_offset 7, -12
 203              		.cfi_offset 8, -8
 204              		.cfi_offset 14, -4
 205 0004 82B0     		sub	sp, sp, #8
 206              	.LCFI6:
 207              		.cfi_def_cfa_offset 32
 208 0006 0646     		mov	r6, r0
 209 0008 8846     		mov	r8, r1
 210 000a 1446     		mov	r4, r2
 184:Src/pb_decode.c ****     pb_byte_t byte;
 211              		.loc 1 184 5 is_stmt 1 view .LVU44
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 8


 185:Src/pb_decode.c ****     uint32_t result;
 212              		.loc 1 185 5 view .LVU45
 186:Src/pb_decode.c ****     
 187:Src/pb_decode.c ****     if (!pb_readbyte(stream, &byte))
 213              		.loc 1 187 5 view .LVU46
 214              		.loc 1 187 10 is_stmt 0 view .LVU47
 215 000c 0DF10701 		add	r1, sp, #7
 216              	.LVL14:
 217              		.loc 1 187 10 view .LVU48
 218 0010 FFF7FEFF 		bl	pb_readbyte
 219              	.LVL15:
 220              		.loc 1 187 8 view .LVU49
 221 0014 0746     		mov	r7, r0
 222 0016 50B1     		cbz	r0, .L38
 188:Src/pb_decode.c ****     {
 189:Src/pb_decode.c ****         if (stream->bytes_left == 0)
 190:Src/pb_decode.c ****         {
 191:Src/pb_decode.c ****             if (eof)
 192:Src/pb_decode.c ****             {
 193:Src/pb_decode.c ****                 *eof = true;
 194:Src/pb_decode.c ****             }
 195:Src/pb_decode.c ****         }
 196:Src/pb_decode.c **** 
 197:Src/pb_decode.c ****         return false;
 198:Src/pb_decode.c ****     }
 199:Src/pb_decode.c ****     
 200:Src/pb_decode.c ****     if ((byte & 0x80) == 0)
 223              		.loc 1 200 5 is_stmt 1 view .LVU50
 224              		.loc 1 200 23 is_stmt 0 view .LVU51
 225 0018 9DF80750 		ldrb	r5, [sp, #7]	@ zero_extendqisi2
 226              		.loc 1 200 8 view .LVU52
 227 001c 15F0800F 		tst	r5, #128
 228 0020 0DD1     		bne	.L39
 229              	.LVL16:
 230              	.L27:
 201:Src/pb_decode.c ****     {
 202:Src/pb_decode.c ****         /* Quick case, 1 byte value */
 203:Src/pb_decode.c ****         result = byte;
 204:Src/pb_decode.c ****     }
 205:Src/pb_decode.c ****     else
 206:Src/pb_decode.c ****     {
 207:Src/pb_decode.c ****         /* Multibyte case */
 208:Src/pb_decode.c ****         uint_fast8_t bitpos = 7;
 209:Src/pb_decode.c ****         result = byte & 0x7F;
 210:Src/pb_decode.c ****         
 211:Src/pb_decode.c ****         do
 212:Src/pb_decode.c ****         {
 213:Src/pb_decode.c ****             if (!pb_readbyte(stream, &byte))
 214:Src/pb_decode.c ****                 return false;
 215:Src/pb_decode.c ****             
 216:Src/pb_decode.c ****             if (bitpos >= 32)
 217:Src/pb_decode.c ****             {
 218:Src/pb_decode.c ****                 /* Note: The varint could have trailing 0x80 bytes, or 0xFF for negative. */
 219:Src/pb_decode.c ****                 uint8_t sign_extension = (bitpos < 63) ? 0xFF : 0x01;
 220:Src/pb_decode.c ****                 
 221:Src/pb_decode.c ****                 if ((byte & 0x7F) != 0x00 && ((result >> 31) == 0 || byte != sign_extension))
 222:Src/pb_decode.c ****                 {
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 9


 223:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "varint overflow");
 224:Src/pb_decode.c ****                 }
 225:Src/pb_decode.c ****             }
 226:Src/pb_decode.c ****             else
 227:Src/pb_decode.c ****             {
 228:Src/pb_decode.c ****                 result |= (uint32_t)(byte & 0x7F) << bitpos;
 229:Src/pb_decode.c ****             }
 230:Src/pb_decode.c ****             bitpos = (uint_fast8_t)(bitpos + 7);
 231:Src/pb_decode.c ****         } while (byte & 0x80);
 232:Src/pb_decode.c ****         
 233:Src/pb_decode.c ****         if (bitpos == 35 && (byte & 0x70) != 0)
 234:Src/pb_decode.c ****         {
 235:Src/pb_decode.c ****             /* The last byte was at bitpos=28, so only bottom 4 bits fit. */
 236:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "varint overflow");
 237:Src/pb_decode.c ****         }
 238:Src/pb_decode.c ****    }
 239:Src/pb_decode.c ****    
 240:Src/pb_decode.c ****    *dest = result;
 231              		.loc 1 240 4 is_stmt 1 view .LVU53
 232              		.loc 1 240 10 is_stmt 0 view .LVU54
 233 0022 C8F80050 		str	r5, [r8]
 241:Src/pb_decode.c ****    return true;
 234              		.loc 1 241 4 is_stmt 1 view .LVU55
 235              	.LVL17:
 236              	.L25:
 242:Src/pb_decode.c **** }
 237              		.loc 1 242 1 is_stmt 0 view .LVU56
 238 0026 3846     		mov	r0, r7
 239 0028 02B0     		add	sp, sp, #8
 240              	.LCFI7:
 241              		.cfi_remember_state
 242              		.cfi_def_cfa_offset 24
 243              		@ sp needed
 244 002a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 245              	.LVL18:
 246              	.L38:
 247              	.LCFI8:
 248              		.cfi_restore_state
 189:Src/pb_decode.c ****         {
 249              		.loc 1 189 9 is_stmt 1 view .LVU57
 189:Src/pb_decode.c ****         {
 250              		.loc 1 189 19 is_stmt 0 view .LVU58
 251 002e B368     		ldr	r3, [r6, #8]
 189:Src/pb_decode.c ****         {
 252              		.loc 1 189 12 view .LVU59
 253 0030 002B     		cmp	r3, #0
 254 0032 F8D1     		bne	.L25
 191:Src/pb_decode.c ****             {
 255              		.loc 1 191 13 is_stmt 1 view .LVU60
 191:Src/pb_decode.c ****             {
 256              		.loc 1 191 16 is_stmt 0 view .LVU61
 257 0034 002C     		cmp	r4, #0
 258 0036 F6D0     		beq	.L25
 193:Src/pb_decode.c ****             }
 259              		.loc 1 193 17 is_stmt 1 view .LVU62
 193:Src/pb_decode.c ****             }
 260              		.loc 1 193 22 is_stmt 0 view .LVU63
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 10


 261 0038 0123     		movs	r3, #1
 262 003a 2370     		strb	r3, [r4]
 197:Src/pb_decode.c ****     }
 263              		.loc 1 197 9 is_stmt 1 view .LVU64
 197:Src/pb_decode.c ****     }
 264              		.loc 1 197 16 is_stmt 0 view .LVU65
 265 003c F3E7     		b	.L25
 266              	.L39:
 267              	.LBB2:
 208:Src/pb_decode.c ****         result = byte & 0x7F;
 268              		.loc 1 208 9 is_stmt 1 view .LVU66
 269              	.LVL19:
 209:Src/pb_decode.c ****         
 270              		.loc 1 209 9 view .LVU67
 209:Src/pb_decode.c ****         
 271              		.loc 1 209 16 is_stmt 0 view .LVU68
 272 003e 05F07F05 		and	r5, r5, #127
 273              	.LVL20:
 208:Src/pb_decode.c ****         result = byte & 0x7F;
 274              		.loc 1 208 22 view .LVU69
 275 0042 0724     		movs	r4, #7
 276              	.LVL21:
 208:Src/pb_decode.c ****         result = byte & 0x7F;
 277              		.loc 1 208 22 view .LVU70
 278 0044 0FE0     		b	.L33
 279              	.LVL22:
 280              	.L36:
 281              	.LBB3:
 219:Src/pb_decode.c ****                 
 282              		.loc 1 219 25 view .LVU71
 283 0046 0122     		movs	r2, #1
 284 0048 18E0     		b	.L29
 285              	.LVL23:
 286              	.L41:
 223:Src/pb_decode.c ****                 }
 287              		.loc 1 223 21 view .LVU72
 288 004a 1B4B     		ldr	r3, .L43
 289 004c 22E0     		b	.L32
 290              	.LVL24:
 291              	.L28:
 223:Src/pb_decode.c ****                 }
 292              		.loc 1 223 21 view .LVU73
 293              	.LBE3:
 228:Src/pb_decode.c ****             }
 294              		.loc 1 228 17 is_stmt 1 view .LVU74
 228:Src/pb_decode.c ****             }
 295              		.loc 1 228 43 is_stmt 0 view .LVU75
 296 004e 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 228:Src/pb_decode.c ****             }
 297              		.loc 1 228 27 view .LVU76
 298 0052 03F07F03 		and	r3, r3, #127
 228:Src/pb_decode.c ****             }
 299              		.loc 1 228 51 view .LVU77
 300 0056 A340     		lsls	r3, r3, r4
 228:Src/pb_decode.c ****             }
 301              		.loc 1 228 24 view .LVU78
 302 0058 1D43     		orrs	r5, r5, r3
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 11


 303              	.LVL25:
 304              	.L30:
 230:Src/pb_decode.c ****         } while (byte & 0x80);
 305              		.loc 1 230 13 is_stmt 1 view .LVU79
 230:Src/pb_decode.c ****         } while (byte & 0x80);
 306              		.loc 1 230 20 is_stmt 0 view .LVU80
 307 005a 0734     		adds	r4, r4, #7
 308              	.LVL26:
 231:Src/pb_decode.c ****         
 309              		.loc 1 231 18 view .LVU81
 310 005c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 231:Src/pb_decode.c ****         
 311              		.loc 1 231 9 view .LVU82
 312 0060 13F0800F 		tst	r3, #128
 313 0064 19D0     		beq	.L40
 314              	.LVL27:
 315              	.L33:
 211:Src/pb_decode.c ****         {
 316              		.loc 1 211 9 is_stmt 1 view .LVU83
 213:Src/pb_decode.c ****                 return false;
 317              		.loc 1 213 13 view .LVU84
 213:Src/pb_decode.c ****                 return false;
 318              		.loc 1 213 18 is_stmt 0 view .LVU85
 319 0066 0DF10701 		add	r1, sp, #7
 320 006a 3046     		mov	r0, r6
 321 006c FFF7FEFF 		bl	pb_readbyte
 322              	.LVL28:
 213:Src/pb_decode.c ****                 return false;
 323              		.loc 1 213 16 view .LVU86
 324 0070 F8B1     		cbz	r0, .L35
 216:Src/pb_decode.c ****             {
 325              		.loc 1 216 13 is_stmt 1 view .LVU87
 216:Src/pb_decode.c ****             {
 326              		.loc 1 216 16 is_stmt 0 view .LVU88
 327 0072 1F2C     		cmp	r4, #31
 328 0074 EBD9     		bls	.L28
 329              	.LBB4:
 219:Src/pb_decode.c ****                 
 330              		.loc 1 219 17 is_stmt 1 view .LVU89
 219:Src/pb_decode.c ****                 
 331              		.loc 1 219 25 is_stmt 0 view .LVU90
 332 0076 3E2C     		cmp	r4, #62
 333 0078 E5D8     		bhi	.L36
 334 007a FF22     		movs	r2, #255
 335              	.L29:
 336              	.LVL29:
 221:Src/pb_decode.c ****                 {
 337              		.loc 1 221 17 is_stmt 1 discriminator 4 view .LVU91
 221:Src/pb_decode.c ****                 {
 338              		.loc 1 221 27 is_stmt 0 discriminator 4 view .LVU92
 339 007c 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 221:Src/pb_decode.c ****                 {
 340              		.loc 1 221 20 discriminator 4 view .LVU93
 341 0080 13F07F0F 		tst	r3, #127
 342 0084 E9D0     		beq	.L30
 221:Src/pb_decode.c ****                 {
 343              		.loc 1 221 43 discriminator 1 view .LVU94
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 12


 344 0086 002D     		cmp	r5, #0
 345 0088 01DA     		bge	.L31
 221:Src/pb_decode.c ****                 {
 346              		.loc 1 221 67 discriminator 2 view .LVU95
 347 008a 9342     		cmp	r3, r2
 348 008c E5D0     		beq	.L30
 349              	.L31:
 223:Src/pb_decode.c ****                 }
 350              		.loc 1 223 21 is_stmt 1 view .LVU96
 351 008e F368     		ldr	r3, [r6, #12]
 352 0090 002B     		cmp	r3, #0
 353 0092 DAD0     		beq	.L41
 354              	.L32:
 223:Src/pb_decode.c ****                 }
 355              		.loc 1 223 21 is_stmt 0 discriminator 4 view .LVU97
 356 0094 F360     		str	r3, [r6, #12]
 357 0096 0027     		movs	r7, #0
 358 0098 C5E7     		b	.L25
 359              	.LVL30:
 360              	.L40:
 223:Src/pb_decode.c ****                 }
 361              		.loc 1 223 21 discriminator 4 view .LVU98
 362              	.LBE4:
 233:Src/pb_decode.c ****         {
 363              		.loc 1 233 9 is_stmt 1 view .LVU99
 233:Src/pb_decode.c ****         {
 364              		.loc 1 233 12 is_stmt 0 view .LVU100
 365 009a 232C     		cmp	r4, #35
 366 009c C1D1     		bne	.L27
 233:Src/pb_decode.c ****         {
 367              		.loc 1 233 26 discriminator 1 view .LVU101
 368 009e 13F0700F 		tst	r3, #112
 369 00a2 BED0     		beq	.L27
 236:Src/pb_decode.c ****         }
 370              		.loc 1 236 13 is_stmt 1 view .LVU102
 371 00a4 F368     		ldr	r3, [r6, #12]
 372 00a6 13B1     		cbz	r3, .L42
 373              	.L34:
 236:Src/pb_decode.c ****         }
 374              		.loc 1 236 13 is_stmt 0 discriminator 4 view .LVU103
 375 00a8 F360     		str	r3, [r6, #12]
 376 00aa 0027     		movs	r7, #0
 377 00ac BBE7     		b	.L25
 378              	.L42:
 236:Src/pb_decode.c ****         }
 379              		.loc 1 236 13 view .LVU104
 380 00ae 024B     		ldr	r3, .L43
 381 00b0 FAE7     		b	.L34
 382              	.L35:
 214:Src/pb_decode.c ****             
 383              		.loc 1 214 24 view .LVU105
 384 00b2 0746     		mov	r7, r0
 385 00b4 B7E7     		b	.L25
 386              	.L44:
 387 00b6 00BF     		.align	2
 388              	.L43:
 389 00b8 00000000 		.word	.LC2
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 13


 390              	.LBE2:
 391              		.cfi_endproc
 392              	.LFE4:
 394              		.section	.text.decode_pointer_field,"ax",%progbits
 395              		.align	1
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu fpv4-sp-d16
 401              	decode_pointer_field:
 402              	.LVL31:
 403              	.LFB15:
 243:Src/pb_decode.c **** 
 244:Src/pb_decode.c **** bool checkreturn pb_decode_varint32(pb_istream_t *stream, uint32_t *dest)
 245:Src/pb_decode.c **** {
 246:Src/pb_decode.c ****     return pb_decode_varint32_eof(stream, dest, NULL);
 247:Src/pb_decode.c **** }
 248:Src/pb_decode.c **** 
 249:Src/pb_decode.c **** #ifndef PB_WITHOUT_64BIT
 250:Src/pb_decode.c **** bool checkreturn pb_decode_varint(pb_istream_t *stream, uint64_t *dest)
 251:Src/pb_decode.c **** {
 252:Src/pb_decode.c ****     pb_byte_t byte;
 253:Src/pb_decode.c ****     uint_fast8_t bitpos = 0;
 254:Src/pb_decode.c ****     uint64_t result = 0;
 255:Src/pb_decode.c ****     
 256:Src/pb_decode.c ****     do
 257:Src/pb_decode.c ****     {
 258:Src/pb_decode.c ****         if (bitpos >= 64)
 259:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "varint overflow");
 260:Src/pb_decode.c ****         
 261:Src/pb_decode.c ****         if (!pb_readbyte(stream, &byte))
 262:Src/pb_decode.c ****             return false;
 263:Src/pb_decode.c **** 
 264:Src/pb_decode.c ****         result |= (uint64_t)(byte & 0x7F) << bitpos;
 265:Src/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 266:Src/pb_decode.c ****     } while (byte & 0x80);
 267:Src/pb_decode.c ****     
 268:Src/pb_decode.c ****     *dest = result;
 269:Src/pb_decode.c ****     return true;
 270:Src/pb_decode.c **** }
 271:Src/pb_decode.c **** #endif
 272:Src/pb_decode.c **** 
 273:Src/pb_decode.c **** bool checkreturn pb_skip_varint(pb_istream_t *stream)
 274:Src/pb_decode.c **** {
 275:Src/pb_decode.c ****     pb_byte_t byte;
 276:Src/pb_decode.c ****     do
 277:Src/pb_decode.c ****     {
 278:Src/pb_decode.c ****         if (!pb_read(stream, &byte, 1))
 279:Src/pb_decode.c ****             return false;
 280:Src/pb_decode.c ****     } while (byte & 0x80);
 281:Src/pb_decode.c ****     return true;
 282:Src/pb_decode.c **** }
 283:Src/pb_decode.c **** 
 284:Src/pb_decode.c **** bool checkreturn pb_skip_string(pb_istream_t *stream)
 285:Src/pb_decode.c **** {
 286:Src/pb_decode.c ****     uint32_t length;
 287:Src/pb_decode.c ****     if (!pb_decode_varint32(stream, &length))
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 14


 288:Src/pb_decode.c ****         return false;
 289:Src/pb_decode.c ****     
 290:Src/pb_decode.c ****     return pb_read(stream, NULL, length);
 291:Src/pb_decode.c **** }
 292:Src/pb_decode.c **** 
 293:Src/pb_decode.c **** bool checkreturn pb_decode_tag(pb_istream_t *stream, pb_wire_type_t *wire_type, uint32_t *tag, bool
 294:Src/pb_decode.c **** {
 295:Src/pb_decode.c ****     uint32_t temp;
 296:Src/pb_decode.c ****     *eof = false;
 297:Src/pb_decode.c ****     *wire_type = (pb_wire_type_t) 0;
 298:Src/pb_decode.c ****     *tag = 0;
 299:Src/pb_decode.c ****     
 300:Src/pb_decode.c ****     if (!pb_decode_varint32_eof(stream, &temp, eof))
 301:Src/pb_decode.c ****     {
 302:Src/pb_decode.c ****         return false;
 303:Src/pb_decode.c ****     }
 304:Src/pb_decode.c ****     
 305:Src/pb_decode.c ****     if (temp == 0)
 306:Src/pb_decode.c ****     {
 307:Src/pb_decode.c ****         *eof = true; /* Special feature: allow 0-terminated messages. */
 308:Src/pb_decode.c ****         return false;
 309:Src/pb_decode.c ****     }
 310:Src/pb_decode.c ****     
 311:Src/pb_decode.c ****     *tag = temp >> 3;
 312:Src/pb_decode.c ****     *wire_type = (pb_wire_type_t)(temp & 7);
 313:Src/pb_decode.c ****     return true;
 314:Src/pb_decode.c **** }
 315:Src/pb_decode.c **** 
 316:Src/pb_decode.c **** bool checkreturn pb_skip_field(pb_istream_t *stream, pb_wire_type_t wire_type)
 317:Src/pb_decode.c **** {
 318:Src/pb_decode.c ****     switch (wire_type)
 319:Src/pb_decode.c ****     {
 320:Src/pb_decode.c ****         case PB_WT_VARINT: return pb_skip_varint(stream);
 321:Src/pb_decode.c ****         case PB_WT_64BIT: return pb_read(stream, NULL, 8);
 322:Src/pb_decode.c ****         case PB_WT_STRING: return pb_skip_string(stream);
 323:Src/pb_decode.c ****         case PB_WT_32BIT: return pb_read(stream, NULL, 4);
 324:Src/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 325:Src/pb_decode.c ****     }
 326:Src/pb_decode.c **** }
 327:Src/pb_decode.c **** 
 328:Src/pb_decode.c **** /* Read a raw value to buffer, for the purpose of passing it to callback as
 329:Src/pb_decode.c ****  * a substream. Size is maximum size on call, and actual size on return.
 330:Src/pb_decode.c ****  */
 331:Src/pb_decode.c **** static bool checkreturn read_raw_value(pb_istream_t *stream, pb_wire_type_t wire_type, pb_byte_t *b
 332:Src/pb_decode.c **** {
 333:Src/pb_decode.c ****     size_t max_size = *size;
 334:Src/pb_decode.c ****     switch (wire_type)
 335:Src/pb_decode.c ****     {
 336:Src/pb_decode.c ****         case PB_WT_VARINT:
 337:Src/pb_decode.c ****             *size = 0;
 338:Src/pb_decode.c ****             do
 339:Src/pb_decode.c ****             {
 340:Src/pb_decode.c ****                 (*size)++;
 341:Src/pb_decode.c ****                 if (*size > max_size) return false;
 342:Src/pb_decode.c ****                 if (!pb_read(stream, buf, 1)) return false;
 343:Src/pb_decode.c ****             } while (*buf++ & 0x80);
 344:Src/pb_decode.c ****             return true;
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 15


 345:Src/pb_decode.c ****             
 346:Src/pb_decode.c ****         case PB_WT_64BIT:
 347:Src/pb_decode.c ****             *size = 8;
 348:Src/pb_decode.c ****             return pb_read(stream, buf, 8);
 349:Src/pb_decode.c ****         
 350:Src/pb_decode.c ****         case PB_WT_32BIT:
 351:Src/pb_decode.c ****             *size = 4;
 352:Src/pb_decode.c ****             return pb_read(stream, buf, 4);
 353:Src/pb_decode.c ****         
 354:Src/pb_decode.c ****         case PB_WT_STRING:
 355:Src/pb_decode.c ****             /* Calling read_raw_value with a PB_WT_STRING is an error.
 356:Src/pb_decode.c ****              * Explicitly handle this case and fallthrough to default to avoid
 357:Src/pb_decode.c ****              * compiler warnings.
 358:Src/pb_decode.c ****              */
 359:Src/pb_decode.c **** 
 360:Src/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 361:Src/pb_decode.c ****     }
 362:Src/pb_decode.c **** }
 363:Src/pb_decode.c **** 
 364:Src/pb_decode.c **** /* Decode string length from stream and return a substream with limited length.
 365:Src/pb_decode.c ****  * Remember to close the substream using pb_close_string_substream().
 366:Src/pb_decode.c ****  */
 367:Src/pb_decode.c **** bool checkreturn pb_make_string_substream(pb_istream_t *stream, pb_istream_t *substream)
 368:Src/pb_decode.c **** {
 369:Src/pb_decode.c ****     uint32_t size;
 370:Src/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
 371:Src/pb_decode.c ****         return false;
 372:Src/pb_decode.c ****     
 373:Src/pb_decode.c ****     *substream = *stream;
 374:Src/pb_decode.c ****     if (substream->bytes_left < size)
 375:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "parent stream too short");
 376:Src/pb_decode.c ****     
 377:Src/pb_decode.c ****     substream->bytes_left = size;
 378:Src/pb_decode.c ****     stream->bytes_left -= size;
 379:Src/pb_decode.c ****     return true;
 380:Src/pb_decode.c **** }
 381:Src/pb_decode.c **** 
 382:Src/pb_decode.c **** bool checkreturn pb_close_string_substream(pb_istream_t *stream, pb_istream_t *substream)
 383:Src/pb_decode.c **** {
 384:Src/pb_decode.c ****     if (substream->bytes_left) {
 385:Src/pb_decode.c ****         if (!pb_read(substream, NULL, substream->bytes_left))
 386:Src/pb_decode.c ****             return false;
 387:Src/pb_decode.c ****     }
 388:Src/pb_decode.c **** 
 389:Src/pb_decode.c ****     stream->state = substream->state;
 390:Src/pb_decode.c **** 
 391:Src/pb_decode.c **** #ifndef PB_NO_ERRMSG
 392:Src/pb_decode.c ****     stream->errmsg = substream->errmsg;
 393:Src/pb_decode.c **** #endif
 394:Src/pb_decode.c ****     return true;
 395:Src/pb_decode.c **** }
 396:Src/pb_decode.c **** 
 397:Src/pb_decode.c **** /*************************
 398:Src/pb_decode.c ****  * Decode a single field *
 399:Src/pb_decode.c ****  *************************/
 400:Src/pb_decode.c **** 
 401:Src/pb_decode.c **** static bool checkreturn decode_static_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_fiel
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 16


 402:Src/pb_decode.c **** {
 403:Src/pb_decode.c ****     pb_type_t type;
 404:Src/pb_decode.c ****     pb_decoder_t func;
 405:Src/pb_decode.c ****     
 406:Src/pb_decode.c ****     type = iter->pos->type;
 407:Src/pb_decode.c ****     func = PB_DECODERS[PB_LTYPE(type)];
 408:Src/pb_decode.c **** 
 409:Src/pb_decode.c ****     switch (PB_HTYPE(type))
 410:Src/pb_decode.c ****     {
 411:Src/pb_decode.c ****         case PB_HTYPE_REQUIRED:
 412:Src/pb_decode.c ****             return func(stream, iter->pos, iter->pData);
 413:Src/pb_decode.c ****             
 414:Src/pb_decode.c ****         case PB_HTYPE_OPTIONAL:
 415:Src/pb_decode.c ****             if (iter->pSize != iter->pData)
 416:Src/pb_decode.c ****                 *(bool*)iter->pSize = true;
 417:Src/pb_decode.c ****             return func(stream, iter->pos, iter->pData);
 418:Src/pb_decode.c ****     
 419:Src/pb_decode.c ****         case PB_HTYPE_REPEATED:
 420:Src/pb_decode.c ****             if (wire_type == PB_WT_STRING
 421:Src/pb_decode.c ****                 && PB_LTYPE(type) <= PB_LTYPE_LAST_PACKABLE)
 422:Src/pb_decode.c ****             {
 423:Src/pb_decode.c ****                 /* Packed array */
 424:Src/pb_decode.c ****                 bool status = true;
 425:Src/pb_decode.c ****                 pb_size_t *size = (pb_size_t*)iter->pSize;
 426:Src/pb_decode.c **** 
 427:Src/pb_decode.c ****                 pb_istream_t substream;
 428:Src/pb_decode.c ****                 if (!pb_make_string_substream(stream, &substream))
 429:Src/pb_decode.c ****                     return false;
 430:Src/pb_decode.c **** 
 431:Src/pb_decode.c ****                 while (substream.bytes_left > 0 && *size < iter->pos->array_size)
 432:Src/pb_decode.c ****                 {
 433:Src/pb_decode.c ****                     void *pItem = (char*)iter->pData + iter->pos->data_size * (*size);
 434:Src/pb_decode.c ****                     if (!func(&substream, iter->pos, pItem))
 435:Src/pb_decode.c ****                     {
 436:Src/pb_decode.c ****                         status = false;
 437:Src/pb_decode.c ****                         break;
 438:Src/pb_decode.c ****                     }
 439:Src/pb_decode.c ****                     (*size)++;
 440:Src/pb_decode.c ****                 }
 441:Src/pb_decode.c **** 
 442:Src/pb_decode.c ****                 if (substream.bytes_left != 0)
 443:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 444:Src/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 445:Src/pb_decode.c ****                     return false;
 446:Src/pb_decode.c **** 
 447:Src/pb_decode.c ****                 return status;
 448:Src/pb_decode.c ****             }
 449:Src/pb_decode.c ****             else
 450:Src/pb_decode.c ****             {
 451:Src/pb_decode.c ****                 /* Repeated field */
 452:Src/pb_decode.c ****                 pb_size_t *size = (pb_size_t*)iter->pSize;
 453:Src/pb_decode.c ****                 char *pItem = (char*)iter->pData + iter->pos->data_size * (*size);
 454:Src/pb_decode.c **** 
 455:Src/pb_decode.c ****                 if ((*size)++ >= iter->pos->array_size)
 456:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 457:Src/pb_decode.c **** 
 458:Src/pb_decode.c ****                 return func(stream, iter->pos, pItem);
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 17


 459:Src/pb_decode.c ****             }
 460:Src/pb_decode.c **** 
 461:Src/pb_decode.c ****         case PB_HTYPE_ONEOF:
 462:Src/pb_decode.c ****             *(pb_size_t*)iter->pSize = iter->pos->tag;
 463:Src/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
 464:Src/pb_decode.c ****             {
 465:Src/pb_decode.c ****                 /* We memset to zero so that any callbacks are set to NULL.
 466:Src/pb_decode.c ****                  * Then set any default values. */
 467:Src/pb_decode.c ****                 memset(iter->pData, 0, iter->pos->data_size);
 468:Src/pb_decode.c ****                 pb_message_set_to_defaults((const pb_field_t*)iter->pos->ptr, iter->pData);
 469:Src/pb_decode.c ****             }
 470:Src/pb_decode.c ****             return func(stream, iter->pos, iter->pData);
 471:Src/pb_decode.c **** 
 472:Src/pb_decode.c ****         default:
 473:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "invalid field type");
 474:Src/pb_decode.c ****     }
 475:Src/pb_decode.c **** }
 476:Src/pb_decode.c **** 
 477:Src/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
 478:Src/pb_decode.c **** /* Allocate storage for the field and store the pointer at iter->pData.
 479:Src/pb_decode.c ****  * array_size is the number of entries to reserve in an array.
 480:Src/pb_decode.c ****  * Zero size is not allowed, use pb_free() for releasing.
 481:Src/pb_decode.c ****  */
 482:Src/pb_decode.c **** static bool checkreturn allocate_field(pb_istream_t *stream, void *pData, size_t data_size, size_t 
 483:Src/pb_decode.c **** {    
 484:Src/pb_decode.c ****     void *ptr = *(void**)pData;
 485:Src/pb_decode.c ****     
 486:Src/pb_decode.c ****     if (data_size == 0 || array_size == 0)
 487:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid size");
 488:Src/pb_decode.c ****     
 489:Src/pb_decode.c ****     /* Check for multiplication overflows.
 490:Src/pb_decode.c ****      * This code avoids the costly division if the sizes are small enough.
 491:Src/pb_decode.c ****      * Multiplication is safe as long as only half of bits are set
 492:Src/pb_decode.c ****      * in either multiplicand.
 493:Src/pb_decode.c ****      */
 494:Src/pb_decode.c ****     {
 495:Src/pb_decode.c ****         const size_t check_limit = (size_t)1 << (sizeof(size_t) * 4);
 496:Src/pb_decode.c ****         if (data_size >= check_limit || array_size >= check_limit)
 497:Src/pb_decode.c ****         {
 498:Src/pb_decode.c ****             const size_t size_max = (size_t)-1;
 499:Src/pb_decode.c ****             if (size_max / array_size < data_size)
 500:Src/pb_decode.c ****             {
 501:Src/pb_decode.c ****                 PB_RETURN_ERROR(stream, "size too large");
 502:Src/pb_decode.c ****             }
 503:Src/pb_decode.c ****         }
 504:Src/pb_decode.c ****     }
 505:Src/pb_decode.c ****     
 506:Src/pb_decode.c ****     /* Allocate new or expand previous allocation */
 507:Src/pb_decode.c ****     /* Note: on failure the old pointer will remain in the structure,
 508:Src/pb_decode.c ****      * the message must be freed by caller also on error return. */
 509:Src/pb_decode.c ****     ptr = pb_realloc(ptr, array_size * data_size);
 510:Src/pb_decode.c ****     if (ptr == NULL)
 511:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "realloc failed");
 512:Src/pb_decode.c ****     
 513:Src/pb_decode.c ****     *(void**)pData = ptr;
 514:Src/pb_decode.c ****     return true;
 515:Src/pb_decode.c **** }
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 18


 516:Src/pb_decode.c **** 
 517:Src/pb_decode.c **** /* Clear a newly allocated item in case it contains a pointer, or is a submessage. */
 518:Src/pb_decode.c **** static void initialize_pointer_field(void *pItem, pb_field_iter_t *iter)
 519:Src/pb_decode.c **** {
 520:Src/pb_decode.c ****     if (PB_LTYPE(iter->pos->type) == PB_LTYPE_STRING ||
 521:Src/pb_decode.c ****         PB_LTYPE(iter->pos->type) == PB_LTYPE_BYTES)
 522:Src/pb_decode.c ****     {
 523:Src/pb_decode.c ****         *(void**)pItem = NULL;
 524:Src/pb_decode.c ****     }
 525:Src/pb_decode.c ****     else if (PB_LTYPE(iter->pos->type) == PB_LTYPE_SUBMESSAGE)
 526:Src/pb_decode.c ****     {
 527:Src/pb_decode.c ****         /* We memset to zero so that any callbacks are set to NULL.
 528:Src/pb_decode.c ****          * Then set any default values. */
 529:Src/pb_decode.c ****         memset(pItem, 0, iter->pos->data_size);
 530:Src/pb_decode.c ****         pb_message_set_to_defaults((const pb_field_t *) iter->pos->ptr, pItem);
 531:Src/pb_decode.c ****     }
 532:Src/pb_decode.c **** }
 533:Src/pb_decode.c **** #endif
 534:Src/pb_decode.c **** 
 535:Src/pb_decode.c **** static bool checkreturn decode_pointer_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_fie
 536:Src/pb_decode.c **** {
 404              		.loc 1 536 1 is_stmt 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 537:Src/pb_decode.c **** #ifndef PB_ENABLE_MALLOC
 538:Src/pb_decode.c ****     PB_UNUSED(wire_type);
 409              		.loc 1 538 5 view .LVU107
 539:Src/pb_decode.c ****     PB_UNUSED(iter);
 410              		.loc 1 539 5 view .LVU108
 540:Src/pb_decode.c ****     PB_RETURN_ERROR(stream, "no malloc support");
 411              		.loc 1 540 5 view .LVU109
 412 0000 C368     		ldr	r3, [r0, #12]
 413 0002 13B1     		cbz	r3, .L47
 414              	.L46:
 415              		.loc 1 540 5 is_stmt 0 discriminator 4 view .LVU110
 416 0004 C360     		str	r3, [r0, #12]
 541:Src/pb_decode.c **** #else
 542:Src/pb_decode.c ****     pb_type_t type;
 543:Src/pb_decode.c ****     pb_decoder_t func;
 544:Src/pb_decode.c ****     
 545:Src/pb_decode.c ****     type = iter->pos->type;
 546:Src/pb_decode.c ****     func = PB_DECODERS[PB_LTYPE(type)];
 547:Src/pb_decode.c ****     
 548:Src/pb_decode.c ****     switch (PB_HTYPE(type))
 549:Src/pb_decode.c ****     {
 550:Src/pb_decode.c ****         case PB_HTYPE_REQUIRED:
 551:Src/pb_decode.c ****         case PB_HTYPE_OPTIONAL:
 552:Src/pb_decode.c ****         case PB_HTYPE_ONEOF:
 553:Src/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE &&
 554:Src/pb_decode.c ****                 *(void**)iter->pData != NULL)
 555:Src/pb_decode.c ****             {
 556:Src/pb_decode.c ****                 /* Duplicate field, have to release the old allocation first. */
 557:Src/pb_decode.c ****                 pb_release_single_field(iter);
 558:Src/pb_decode.c ****             }
 559:Src/pb_decode.c ****         
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 19


 560:Src/pb_decode.c ****             if (PB_HTYPE(type) == PB_HTYPE_ONEOF)
 561:Src/pb_decode.c ****             {
 562:Src/pb_decode.c ****                 *(pb_size_t*)iter->pSize = iter->pos->tag;
 563:Src/pb_decode.c ****             }
 564:Src/pb_decode.c **** 
 565:Src/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_STRING ||
 566:Src/pb_decode.c ****                 PB_LTYPE(type) == PB_LTYPE_BYTES)
 567:Src/pb_decode.c ****             {
 568:Src/pb_decode.c ****                 return func(stream, iter->pos, iter->pData);
 569:Src/pb_decode.c ****             }
 570:Src/pb_decode.c ****             else
 571:Src/pb_decode.c ****             {
 572:Src/pb_decode.c ****                 if (!allocate_field(stream, iter->pData, iter->pos->data_size, 1))
 573:Src/pb_decode.c ****                     return false;
 574:Src/pb_decode.c ****                 
 575:Src/pb_decode.c ****                 initialize_pointer_field(*(void**)iter->pData, iter);
 576:Src/pb_decode.c ****                 return func(stream, iter->pos, *(void**)iter->pData);
 577:Src/pb_decode.c ****             }
 578:Src/pb_decode.c ****     
 579:Src/pb_decode.c ****         case PB_HTYPE_REPEATED:
 580:Src/pb_decode.c ****             if (wire_type == PB_WT_STRING
 581:Src/pb_decode.c ****                 && PB_LTYPE(type) <= PB_LTYPE_LAST_PACKABLE)
 582:Src/pb_decode.c ****             {
 583:Src/pb_decode.c ****                 /* Packed array, multiple items come in at once. */
 584:Src/pb_decode.c ****                 bool status = true;
 585:Src/pb_decode.c ****                 pb_size_t *size = (pb_size_t*)iter->pSize;
 586:Src/pb_decode.c ****                 size_t allocated_size = *size;
 587:Src/pb_decode.c ****                 void *pItem;
 588:Src/pb_decode.c ****                 pb_istream_t substream;
 589:Src/pb_decode.c ****                 
 590:Src/pb_decode.c ****                 if (!pb_make_string_substream(stream, &substream))
 591:Src/pb_decode.c ****                     return false;
 592:Src/pb_decode.c ****                 
 593:Src/pb_decode.c ****                 while (substream.bytes_left)
 594:Src/pb_decode.c ****                 {
 595:Src/pb_decode.c ****                     if ((size_t)*size + 1 > allocated_size)
 596:Src/pb_decode.c ****                     {
 597:Src/pb_decode.c ****                         /* Allocate more storage. This tries to guess the
 598:Src/pb_decode.c ****                          * number of remaining entries. Round the division
 599:Src/pb_decode.c ****                          * upwards. */
 600:Src/pb_decode.c ****                         allocated_size += (substream.bytes_left - 1) / iter->pos->data_size + 1;
 601:Src/pb_decode.c ****                         
 602:Src/pb_decode.c ****                         if (!allocate_field(&substream, iter->pData, iter->pos->data_size, allocate
 603:Src/pb_decode.c ****                         {
 604:Src/pb_decode.c ****                             status = false;
 605:Src/pb_decode.c ****                             break;
 606:Src/pb_decode.c ****                         }
 607:Src/pb_decode.c ****                     }
 608:Src/pb_decode.c **** 
 609:Src/pb_decode.c ****                     /* Decode the array entry */
 610:Src/pb_decode.c ****                     pItem = *(char**)iter->pData + iter->pos->data_size * (*size);
 611:Src/pb_decode.c ****                     initialize_pointer_field(pItem, iter);
 612:Src/pb_decode.c ****                     if (!func(&substream, iter->pos, pItem))
 613:Src/pb_decode.c ****                     {
 614:Src/pb_decode.c ****                         status = false;
 615:Src/pb_decode.c ****                         break;
 616:Src/pb_decode.c ****                     }
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 20


 617:Src/pb_decode.c ****                     
 618:Src/pb_decode.c ****                     if (*size == PB_SIZE_MAX)
 619:Src/pb_decode.c ****                     {
 620:Src/pb_decode.c **** #ifndef PB_NO_ERRMSG
 621:Src/pb_decode.c ****                         stream->errmsg = "too many array entries";
 622:Src/pb_decode.c **** #endif
 623:Src/pb_decode.c ****                         status = false;
 624:Src/pb_decode.c ****                         break;
 625:Src/pb_decode.c ****                     }
 626:Src/pb_decode.c ****                     
 627:Src/pb_decode.c ****                     (*size)++;
 628:Src/pb_decode.c ****                 }
 629:Src/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 630:Src/pb_decode.c ****                     return false;
 631:Src/pb_decode.c ****                 
 632:Src/pb_decode.c ****                 return status;
 633:Src/pb_decode.c ****             }
 634:Src/pb_decode.c ****             else
 635:Src/pb_decode.c ****             {
 636:Src/pb_decode.c ****                 /* Normal repeated field, i.e. only one item at a time. */
 637:Src/pb_decode.c ****                 pb_size_t *size = (pb_size_t*)iter->pSize;
 638:Src/pb_decode.c ****                 void *pItem;
 639:Src/pb_decode.c ****                 
 640:Src/pb_decode.c ****                 if (*size == PB_SIZE_MAX)
 641:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "too many array entries");
 642:Src/pb_decode.c ****                 
 643:Src/pb_decode.c ****                 (*size)++;
 644:Src/pb_decode.c ****                 if (!allocate_field(stream, iter->pData, iter->pos->data_size, *size))
 645:Src/pb_decode.c ****                     return false;
 646:Src/pb_decode.c ****             
 647:Src/pb_decode.c ****                 pItem = *(char**)iter->pData + iter->pos->data_size * (*size - 1);
 648:Src/pb_decode.c ****                 initialize_pointer_field(pItem, iter);
 649:Src/pb_decode.c ****                 return func(stream, iter->pos, pItem);
 650:Src/pb_decode.c ****             }
 651:Src/pb_decode.c **** 
 652:Src/pb_decode.c ****         default:
 653:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "invalid field type");
 654:Src/pb_decode.c ****     }
 655:Src/pb_decode.c **** #endif
 656:Src/pb_decode.c **** }
 417              		.loc 1 656 1 discriminator 4 view .LVU111
 418 0006 0020     		movs	r0, #0
 419              	.LVL32:
 420              		.loc 1 656 1 discriminator 4 view .LVU112
 421 0008 7047     		bx	lr
 422              	.LVL33:
 423              	.L47:
 540:Src/pb_decode.c ****     PB_RETURN_ERROR(stream, "no malloc support");
 424              		.loc 1 540 5 view .LVU113
 425 000a 014B     		ldr	r3, .L48
 426 000c FAE7     		b	.L46
 427              	.L49:
 428 000e 00BF     		.align	2
 429              	.L48:
 430 0010 00000000 		.word	.LC3
 431              		.cfi_endproc
 432              	.LFE15:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 21


 434              		.section	.text.iter_from_extension,"ax",%progbits
 435              		.align	1
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 439              		.fpu fpv4-sp-d16
 441              	iter_from_extension:
 442              	.LVL34:
 443              	.LFB18:
 657:Src/pb_decode.c **** 
 658:Src/pb_decode.c **** static bool checkreturn decode_callback_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_fi
 659:Src/pb_decode.c **** {
 660:Src/pb_decode.c ****     pb_callback_t *pCallback = (pb_callback_t*)iter->pData;
 661:Src/pb_decode.c ****     
 662:Src/pb_decode.c **** #ifdef PB_OLD_CALLBACK_STYLE
 663:Src/pb_decode.c ****     void *arg = pCallback->arg;
 664:Src/pb_decode.c **** #else
 665:Src/pb_decode.c ****     void **arg = &(pCallback->arg);
 666:Src/pb_decode.c **** #endif
 667:Src/pb_decode.c ****     
 668:Src/pb_decode.c ****     if (pCallback == NULL || pCallback->funcs.decode == NULL)
 669:Src/pb_decode.c ****         return pb_skip_field(stream, wire_type);
 670:Src/pb_decode.c ****     
 671:Src/pb_decode.c ****     if (wire_type == PB_WT_STRING)
 672:Src/pb_decode.c ****     {
 673:Src/pb_decode.c ****         pb_istream_t substream;
 674:Src/pb_decode.c ****         
 675:Src/pb_decode.c ****         if (!pb_make_string_substream(stream, &substream))
 676:Src/pb_decode.c ****             return false;
 677:Src/pb_decode.c ****         
 678:Src/pb_decode.c ****         do
 679:Src/pb_decode.c ****         {
 680:Src/pb_decode.c ****             if (!pCallback->funcs.decode(&substream, iter->pos, arg))
 681:Src/pb_decode.c ****                 PB_RETURN_ERROR(stream, "callback failed");
 682:Src/pb_decode.c ****         } while (substream.bytes_left);
 683:Src/pb_decode.c ****         
 684:Src/pb_decode.c ****         if (!pb_close_string_substream(stream, &substream))
 685:Src/pb_decode.c ****             return false;
 686:Src/pb_decode.c **** 
 687:Src/pb_decode.c ****         return true;
 688:Src/pb_decode.c ****     }
 689:Src/pb_decode.c ****     else
 690:Src/pb_decode.c ****     {
 691:Src/pb_decode.c ****         /* Copy the single scalar value to stack.
 692:Src/pb_decode.c ****          * This is required so that we can limit the stream length,
 693:Src/pb_decode.c ****          * which in turn allows to use same callback for packed and
 694:Src/pb_decode.c ****          * not-packed fields. */
 695:Src/pb_decode.c ****         pb_istream_t substream;
 696:Src/pb_decode.c ****         pb_byte_t buffer[10];
 697:Src/pb_decode.c ****         size_t size = sizeof(buffer);
 698:Src/pb_decode.c ****         
 699:Src/pb_decode.c ****         if (!read_raw_value(stream, wire_type, buffer, &size))
 700:Src/pb_decode.c ****             return false;
 701:Src/pb_decode.c ****         substream = pb_istream_from_buffer(buffer, size);
 702:Src/pb_decode.c ****         
 703:Src/pb_decode.c ****         return pCallback->funcs.decode(&substream, iter->pos, arg);
 704:Src/pb_decode.c ****     }
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 22


 705:Src/pb_decode.c **** }
 706:Src/pb_decode.c **** 
 707:Src/pb_decode.c **** static bool checkreturn decode_field(pb_istream_t *stream, pb_wire_type_t wire_type, pb_field_iter_
 708:Src/pb_decode.c **** {
 709:Src/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
 710:Src/pb_decode.c ****     /* When decoding an oneof field, check if there is old data that must be
 711:Src/pb_decode.c ****      * released first. */
 712:Src/pb_decode.c ****     if (PB_HTYPE(iter->pos->type) == PB_HTYPE_ONEOF)
 713:Src/pb_decode.c ****     {
 714:Src/pb_decode.c ****         if (!pb_release_union_field(stream, iter))
 715:Src/pb_decode.c ****             return false;
 716:Src/pb_decode.c ****     }
 717:Src/pb_decode.c **** #endif
 718:Src/pb_decode.c **** 
 719:Src/pb_decode.c ****     switch (PB_ATYPE(iter->pos->type))
 720:Src/pb_decode.c ****     {
 721:Src/pb_decode.c ****         case PB_ATYPE_STATIC:
 722:Src/pb_decode.c ****             return decode_static_field(stream, wire_type, iter);
 723:Src/pb_decode.c ****         
 724:Src/pb_decode.c ****         case PB_ATYPE_POINTER:
 725:Src/pb_decode.c ****             return decode_pointer_field(stream, wire_type, iter);
 726:Src/pb_decode.c ****         
 727:Src/pb_decode.c ****         case PB_ATYPE_CALLBACK:
 728:Src/pb_decode.c ****             return decode_callback_field(stream, wire_type, iter);
 729:Src/pb_decode.c ****         
 730:Src/pb_decode.c ****         default:
 731:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "invalid field type");
 732:Src/pb_decode.c ****     }
 733:Src/pb_decode.c **** }
 734:Src/pb_decode.c **** 
 735:Src/pb_decode.c **** static void iter_from_extension(pb_field_iter_t *iter, pb_extension_t *extension)
 736:Src/pb_decode.c **** {
 444              		.loc 1 736 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		.loc 1 736 1 is_stmt 0 view .LVU115
 449 0000 70B5     		push	{r4, r5, r6, lr}
 450              	.LCFI9:
 451              		.cfi_def_cfa_offset 16
 452              		.cfi_offset 4, -16
 453              		.cfi_offset 5, -12
 454              		.cfi_offset 6, -8
 455              		.cfi_offset 14, -4
 456 0002 0546     		mov	r5, r0
 457 0004 0C46     		mov	r4, r1
 737:Src/pb_decode.c ****     /* Fake a field iterator for the extension field.
 738:Src/pb_decode.c ****      * It is not actually safe to advance this iterator, but decode_field
 739:Src/pb_decode.c ****      * will not even try to. */
 740:Src/pb_decode.c ****     const pb_field_t *field = (const pb_field_t*)extension->type->arg;
 458              		.loc 1 740 5 is_stmt 1 view .LVU116
 459              		.loc 1 740 59 is_stmt 0 view .LVU117
 460 0006 0B68     		ldr	r3, [r1]
 461              		.loc 1 740 23 view .LVU118
 462 0008 9E68     		ldr	r6, [r3, #8]
 463              	.LVL35:
 741:Src/pb_decode.c ****     (void)pb_field_iter_begin(iter, field, extension->dest);
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 23


 464              		.loc 1 741 5 is_stmt 1 view .LVU119
 465              		.loc 1 741 11 is_stmt 0 view .LVU120
 466 000a 4A68     		ldr	r2, [r1, #4]
 467 000c 3146     		mov	r1, r6
 468              	.LVL36:
 469              		.loc 1 741 11 view .LVU121
 470 000e FFF7FEFF 		bl	pb_field_iter_begin
 471              	.LVL37:
 742:Src/pb_decode.c ****     iter->pData = extension->dest;
 472              		.loc 1 742 5 is_stmt 1 view .LVU122
 473              		.loc 1 742 28 is_stmt 0 view .LVU123
 474 0012 6368     		ldr	r3, [r4, #4]
 475              		.loc 1 742 17 view .LVU124
 476 0014 2B61     		str	r3, [r5, #16]
 743:Src/pb_decode.c ****     iter->pSize = &extension->found;
 477              		.loc 1 743 5 is_stmt 1 view .LVU125
 478              		.loc 1 743 19 is_stmt 0 view .LVU126
 479 0016 04F10C03 		add	r3, r4, #12
 480              		.loc 1 743 17 view .LVU127
 481 001a 6B61     		str	r3, [r5, #20]
 744:Src/pb_decode.c ****     
 745:Src/pb_decode.c ****     if (PB_ATYPE(field->type) == PB_ATYPE_POINTER)
 482              		.loc 1 745 5 is_stmt 1 view .LVU128
 483              		.loc 1 745 9 is_stmt 0 view .LVU129
 484 001c B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 485              		.loc 1 745 8 view .LVU130
 486 001e 03F0C003 		and	r3, r3, #192
 487 0022 802B     		cmp	r3, #128
 488 0024 00D0     		beq	.L53
 489              	.LVL38:
 490              	.L50:
 746:Src/pb_decode.c ****     {
 747:Src/pb_decode.c ****         /* For pointer extensions, the pointer is stored directly
 748:Src/pb_decode.c ****          * in the extension structure. This avoids having an extra
 749:Src/pb_decode.c ****          * indirection. */
 750:Src/pb_decode.c ****         iter->pData = &extension->dest;
 751:Src/pb_decode.c ****     }
 752:Src/pb_decode.c **** }
 491              		.loc 1 752 1 view .LVU131
 492 0026 70BD     		pop	{r4, r5, r6, pc}
 493              	.LVL39:
 494              	.L53:
 750:Src/pb_decode.c ****     }
 495              		.loc 1 750 9 is_stmt 1 view .LVU132
 750:Src/pb_decode.c ****     }
 496              		.loc 1 750 23 is_stmt 0 view .LVU133
 497 0028 0434     		adds	r4, r4, #4
 498              	.LVL40:
 750:Src/pb_decode.c ****     }
 499              		.loc 1 750 21 view .LVU134
 500 002a 2C61     		str	r4, [r5, #16]
 501              		.loc 1 752 1 view .LVU135
 502 002c FBE7     		b	.L50
 503              		.cfi_endproc
 504              	.LFE18:
 506              		.section	.text.find_extension_field,"ax",%progbits
 507              		.align	1
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 24


 508              		.syntax unified
 509              		.thumb
 510              		.thumb_func
 511              		.fpu fpv4-sp-d16
 513              	find_extension_field:
 514              	.LVL41:
 515              	.LFB21:
 753:Src/pb_decode.c **** 
 754:Src/pb_decode.c **** /* Default handler for extension fields. Expects a pb_field_t structure
 755:Src/pb_decode.c ****  * in extension->type->arg. */
 756:Src/pb_decode.c **** static bool checkreturn default_extension_decoder(pb_istream_t *stream,
 757:Src/pb_decode.c ****     pb_extension_t *extension, uint32_t tag, pb_wire_type_t wire_type)
 758:Src/pb_decode.c **** {
 759:Src/pb_decode.c ****     const pb_field_t *field = (const pb_field_t*)extension->type->arg;
 760:Src/pb_decode.c ****     pb_field_iter_t iter;
 761:Src/pb_decode.c ****     
 762:Src/pb_decode.c ****     if (field->tag != tag)
 763:Src/pb_decode.c ****         return true;
 764:Src/pb_decode.c ****     
 765:Src/pb_decode.c ****     iter_from_extension(&iter, extension);
 766:Src/pb_decode.c ****     extension->found = true;
 767:Src/pb_decode.c ****     return decode_field(stream, wire_type, &iter);
 768:Src/pb_decode.c **** }
 769:Src/pb_decode.c **** 
 770:Src/pb_decode.c **** /* Try to decode an unknown field as an extension field. Tries each extension
 771:Src/pb_decode.c ****  * decoder in turn, until one of them handles the field or loop ends. */
 772:Src/pb_decode.c **** static bool checkreturn decode_extension(pb_istream_t *stream,
 773:Src/pb_decode.c ****     uint32_t tag, pb_wire_type_t wire_type, pb_field_iter_t *iter)
 774:Src/pb_decode.c **** {
 775:Src/pb_decode.c ****     pb_extension_t *extension = *(pb_extension_t* const *)iter->pData;
 776:Src/pb_decode.c ****     size_t pos = stream->bytes_left;
 777:Src/pb_decode.c ****     
 778:Src/pb_decode.c ****     while (extension != NULL && pos == stream->bytes_left)
 779:Src/pb_decode.c ****     {
 780:Src/pb_decode.c ****         bool status;
 781:Src/pb_decode.c ****         if (extension->type->decode)
 782:Src/pb_decode.c ****             status = extension->type->decode(stream, extension, tag, wire_type);
 783:Src/pb_decode.c ****         else
 784:Src/pb_decode.c ****             status = default_extension_decoder(stream, extension, tag, wire_type);
 785:Src/pb_decode.c **** 
 786:Src/pb_decode.c ****         if (!status)
 787:Src/pb_decode.c ****             return false;
 788:Src/pb_decode.c ****         
 789:Src/pb_decode.c ****         extension = extension->next;
 790:Src/pb_decode.c ****     }
 791:Src/pb_decode.c ****     
 792:Src/pb_decode.c ****     return true;
 793:Src/pb_decode.c **** }
 794:Src/pb_decode.c **** 
 795:Src/pb_decode.c **** /* Step through the iterator until an extension field is found or until all
 796:Src/pb_decode.c ****  * entries have been checked. There can be only one extension field per
 797:Src/pb_decode.c ****  * message. Returns false if no extension field is found. */
 798:Src/pb_decode.c **** static bool checkreturn find_extension_field(pb_field_iter_t *iter)
 799:Src/pb_decode.c **** {
 516              		.loc 1 799 1 is_stmt 1 view -0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 25


 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              		.loc 1 799 1 is_stmt 0 view .LVU137
 521 0000 38B5     		push	{r3, r4, r5, lr}
 522              	.LCFI10:
 523              		.cfi_def_cfa_offset 16
 524              		.cfi_offset 3, -16
 525              		.cfi_offset 4, -12
 526              		.cfi_offset 5, -8
 527              		.cfi_offset 14, -4
 528 0002 0446     		mov	r4, r0
 800:Src/pb_decode.c ****     const pb_field_t *start = iter->pos;
 529              		.loc 1 800 5 is_stmt 1 view .LVU138
 530              		.loc 1 800 23 is_stmt 0 view .LVU139
 531 0004 4568     		ldr	r5, [r0, #4]
 532              	.LVL42:
 533              	.L56:
 801:Src/pb_decode.c ****     
 802:Src/pb_decode.c ****     do {
 534              		.loc 1 802 5 is_stmt 1 view .LVU140
 803:Src/pb_decode.c ****         if (PB_LTYPE(iter->pos->type) == PB_LTYPE_EXTENSION)
 535              		.loc 1 803 9 view .LVU141
 536              		.loc 1 803 13 is_stmt 0 view .LVU142
 537 0006 6368     		ldr	r3, [r4, #4]
 538 0008 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 539              		.loc 1 803 12 view .LVU143
 540 000a 03F00F03 		and	r3, r3, #15
 541 000e 082B     		cmp	r3, #8
 542 0010 07D0     		beq	.L57
 804:Src/pb_decode.c ****             return true;
 805:Src/pb_decode.c ****         (void)pb_field_iter_next(iter);
 543              		.loc 1 805 9 is_stmt 1 view .LVU144
 544              		.loc 1 805 15 is_stmt 0 view .LVU145
 545 0012 2046     		mov	r0, r4
 546 0014 FFF7FEFF 		bl	pb_field_iter_next
 547              	.LVL43:
 806:Src/pb_decode.c ****     } while (iter->pos != start);
 548              		.loc 1 806 18 view .LVU146
 549 0018 6368     		ldr	r3, [r4, #4]
 550              		.loc 1 806 5 view .LVU147
 551 001a AB42     		cmp	r3, r5
 552 001c F3D1     		bne	.L56
 807:Src/pb_decode.c ****     
 808:Src/pb_decode.c ****     return false;
 553              		.loc 1 808 12 view .LVU148
 554 001e 0020     		movs	r0, #0
 555 0020 00E0     		b	.L55
 556              	.L57:
 804:Src/pb_decode.c ****         (void)pb_field_iter_next(iter);
 557              		.loc 1 804 20 view .LVU149
 558 0022 0120     		movs	r0, #1
 559              	.L55:
 809:Src/pb_decode.c **** }
 560              		.loc 1 809 1 view .LVU150
 561 0024 38BD     		pop	{r3, r4, r5, pc}
 562              		.loc 1 809 1 view .LVU151
 563              		.cfi_endproc
 564              	.LFE21:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 26


 566              		.section	.text.pb_field_set_to_default,"ax",%progbits
 567              		.align	1
 568              		.syntax unified
 569              		.thumb
 570              		.thumb_func
 571              		.fpu fpv4-sp-d16
 573              	pb_field_set_to_default:
 574              	.LVL44:
 575              	.LFB22:
 810:Src/pb_decode.c **** 
 811:Src/pb_decode.c **** /* Initialize message fields to default values, recursively */
 812:Src/pb_decode.c **** static void pb_field_set_to_default(pb_field_iter_t *iter)
 813:Src/pb_decode.c **** {
 576              		.loc 1 813 1 is_stmt 1 view -0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 24
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		.loc 1 813 1 is_stmt 0 view .LVU153
 581 0000 10B5     		push	{r4, lr}
 582              	.LCFI11:
 583              		.cfi_def_cfa_offset 8
 584              		.cfi_offset 4, -8
 585              		.cfi_offset 14, -4
 586 0002 86B0     		sub	sp, sp, #24
 587              	.LCFI12:
 588              		.cfi_def_cfa_offset 32
 814:Src/pb_decode.c ****     pb_type_t type;
 589              		.loc 1 814 5 is_stmt 1 view .LVU154
 815:Src/pb_decode.c ****     type = iter->pos->type;
 590              		.loc 1 815 5 view .LVU155
 591              		.loc 1 815 16 is_stmt 0 view .LVU156
 592 0004 4368     		ldr	r3, [r0, #4]
 593              		.loc 1 815 10 view .LVU157
 594 0006 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 595              	.LVL45:
 816:Src/pb_decode.c ****     
 817:Src/pb_decode.c ****     if (PB_LTYPE(type) == PB_LTYPE_EXTENSION)
 596              		.loc 1 817 5 is_stmt 1 view .LVU158
 597              		.loc 1 817 8 is_stmt 0 view .LVU159
 598 0008 03F00F02 		and	r2, r3, #15
 599 000c 082A     		cmp	r2, #8
 600 000e 19D0     		beq	.L72
 818:Src/pb_decode.c ****     {
 819:Src/pb_decode.c ****         pb_extension_t *ext = *(pb_extension_t* const *)iter->pData;
 820:Src/pb_decode.c ****         while (ext != NULL)
 821:Src/pb_decode.c ****         {
 822:Src/pb_decode.c ****             pb_field_iter_t ext_iter;
 823:Src/pb_decode.c ****             ext->found = false;
 824:Src/pb_decode.c ****             iter_from_extension(&ext_iter, ext);
 825:Src/pb_decode.c ****             pb_field_set_to_default(&ext_iter);
 826:Src/pb_decode.c ****             ext = ext->next;
 827:Src/pb_decode.c ****         }
 828:Src/pb_decode.c ****     }
 829:Src/pb_decode.c ****     else if (PB_ATYPE(type) == PB_ATYPE_STATIC)
 601              		.loc 1 829 10 is_stmt 1 view .LVU160
 602              		.loc 1 829 13 is_stmt 0 view .LVU161
 603 0010 13F0C002 		ands	r2, r3, #192
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 27


 604 0014 3CD1     		bne	.L64
 605              	.LBB5:
 830:Src/pb_decode.c ****     {
 831:Src/pb_decode.c ****         bool init_data = true;
 606              		.loc 1 831 9 is_stmt 1 view .LVU162
 607              	.LVL46:
 832:Src/pb_decode.c ****         if (PB_HTYPE(type) == PB_HTYPE_OPTIONAL && iter->pSize != iter->pData)
 608              		.loc 1 832 9 view .LVU163
 609 0016 03F03003 		and	r3, r3, #48
 610              	.LVL47:
 611              		.loc 1 832 12 is_stmt 0 view .LVU164
 612 001a 102B     		cmp	r3, #16
 613 001c 20D0     		beq	.L73
 614              	.L65:
 833:Src/pb_decode.c ****         {
 834:Src/pb_decode.c ****             /* Set has_field to false. Still initialize the optional field
 835:Src/pb_decode.c ****              * itself also. */
 836:Src/pb_decode.c ****             *(bool*)iter->pSize = false;
 837:Src/pb_decode.c ****         }
 838:Src/pb_decode.c ****         else if (PB_HTYPE(type) == PB_HTYPE_REPEATED ||
 615              		.loc 1 838 14 is_stmt 1 view .LVU165
 616              		.loc 1 838 17 is_stmt 0 view .LVU166
 617 001e 202B     		cmp	r3, #32
 618 0020 25D0     		beq	.L67
 619              		.loc 1 838 54 discriminator 1 view .LVU167
 620 0022 302B     		cmp	r3, #48
 621 0024 23D0     		beq	.L67
 622              	.LVL48:
 623              	.L66:
 839:Src/pb_decode.c ****                  PB_HTYPE(type) == PB_HTYPE_ONEOF)
 840:Src/pb_decode.c ****         {
 841:Src/pb_decode.c ****             /* REPEATED: Set array count to 0, no need to initialize contents.
 842:Src/pb_decode.c ****                ONEOF: Set which_field to 0. */
 843:Src/pb_decode.c ****             *(pb_size_t*)iter->pSize = 0;
 844:Src/pb_decode.c ****             init_data = false;
 845:Src/pb_decode.c ****         }
 846:Src/pb_decode.c **** 
 847:Src/pb_decode.c ****         if (init_data)
 848:Src/pb_decode.c ****         {
 849:Src/pb_decode.c ****             if (PB_LTYPE(iter->pos->type) == PB_LTYPE_SUBMESSAGE)
 624              		.loc 1 849 13 is_stmt 1 view .LVU168
 625              		.loc 1 849 17 is_stmt 0 view .LVU169
 626 0026 4268     		ldr	r2, [r0, #4]
 627 0028 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 628              		.loc 1 849 16 view .LVU170
 629 002a 03F00F03 		and	r3, r3, #15
 630 002e 072B     		cmp	r3, #7
 631 0030 21D0     		beq	.L74
 850:Src/pb_decode.c ****             {
 851:Src/pb_decode.c ****                 /* Initialize submessage to defaults */
 852:Src/pb_decode.c ****                 pb_message_set_to_defaults((const pb_field_t *) iter->pos->ptr, iter->pData);
 853:Src/pb_decode.c ****             }
 854:Src/pb_decode.c ****             else if (iter->pos->ptr != NULL)
 632              		.loc 1 854 18 is_stmt 1 view .LVU171
 633              		.loc 1 854 31 is_stmt 0 view .LVU172
 634 0032 D2F80B10 		ldr	r1, [r2, #11]	@ unaligned
 635              		.loc 1 854 21 view .LVU173
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 28


 636 0036 21B3     		cbz	r1, .L69
 855:Src/pb_decode.c ****             {
 856:Src/pb_decode.c ****                 /* Initialize to default value */
 857:Src/pb_decode.c ****                 memcpy(iter->pData, iter->pos->ptr, iter->pos->data_size);
 637              		.loc 1 857 17 is_stmt 1 view .LVU174
 638 0038 B2F80720 		ldrh	r2, [r2, #7]	@ unaligned
 639 003c 0069     		ldr	r0, [r0, #16]
 640              	.LVL49:
 641              		.loc 1 857 17 is_stmt 0 view .LVU175
 642 003e FFF7FEFF 		bl	memcpy
 643              	.LVL50:
 644 0042 27E0     		b	.L59
 645              	.LVL51:
 646              	.L72:
 647              		.loc 1 857 17 view .LVU176
 648              	.LBE5:
 649              	.LBB6:
 819:Src/pb_decode.c ****         while (ext != NULL)
 650              		.loc 1 819 9 is_stmt 1 view .LVU177
 819:Src/pb_decode.c ****         while (ext != NULL)
 651              		.loc 1 819 61 is_stmt 0 view .LVU178
 652 0044 0369     		ldr	r3, [r0, #16]
 653              	.LVL52:
 819:Src/pb_decode.c ****         while (ext != NULL)
 654              		.loc 1 819 25 view .LVU179
 655 0046 1C68     		ldr	r4, [r3]
 656              	.LVL53:
 820:Src/pb_decode.c ****         {
 657              		.loc 1 820 9 is_stmt 1 view .LVU180
 658              	.L61:
 820:Src/pb_decode.c ****         {
 659              		.loc 1 820 15 is_stmt 0 view .LVU181
 660 0048 24B3     		cbz	r4, .L59
 661              	.LBB7:
 822:Src/pb_decode.c ****             ext->found = false;
 662              		.loc 1 822 13 is_stmt 1 view .LVU182
 823:Src/pb_decode.c ****             iter_from_extension(&ext_iter, ext);
 663              		.loc 1 823 13 view .LVU183
 823:Src/pb_decode.c ****             iter_from_extension(&ext_iter, ext);
 664              		.loc 1 823 24 is_stmt 0 view .LVU184
 665 004a 0023     		movs	r3, #0
 666 004c 2373     		strb	r3, [r4, #12]
 824:Src/pb_decode.c ****             pb_field_set_to_default(&ext_iter);
 667              		.loc 1 824 13 is_stmt 1 view .LVU185
 668 004e 2146     		mov	r1, r4
 669 0050 6846     		mov	r0, sp
 670 0052 FFF7FEFF 		bl	iter_from_extension
 671              	.LVL54:
 825:Src/pb_decode.c ****             ext = ext->next;
 672              		.loc 1 825 13 view .LVU186
 673 0056 6846     		mov	r0, sp
 674 0058 FFF7D2FF 		bl	pb_field_set_to_default
 675              	.LVL55:
 826:Src/pb_decode.c ****         }
 676              		.loc 1 826 13 view .LVU187
 826:Src/pb_decode.c ****         }
 677              		.loc 1 826 17 is_stmt 0 view .LVU188
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 29


 678 005c A468     		ldr	r4, [r4, #8]
 679              	.LVL56:
 826:Src/pb_decode.c ****         }
 680              		.loc 1 826 17 view .LVU189
 681 005e F3E7     		b	.L61
 682              	.LVL57:
 683              	.L73:
 826:Src/pb_decode.c ****         }
 684              		.loc 1 826 17 view .LVU190
 685              	.LBE7:
 686              	.LBE6:
 687              	.LBB8:
 832:Src/pb_decode.c ****         {
 688              		.loc 1 832 56 discriminator 1 view .LVU191
 689 0060 4269     		ldr	r2, [r0, #20]
 832:Src/pb_decode.c ****         {
 690              		.loc 1 832 71 discriminator 1 view .LVU192
 691 0062 0169     		ldr	r1, [r0, #16]
 832:Src/pb_decode.c ****         {
 692              		.loc 1 832 49 discriminator 1 view .LVU193
 693 0064 8A42     		cmp	r2, r1
 694 0066 DAD0     		beq	.L65
 836:Src/pb_decode.c ****         }
 695              		.loc 1 836 13 is_stmt 1 view .LVU194
 836:Src/pb_decode.c ****         }
 696              		.loc 1 836 33 is_stmt 0 view .LVU195
 697 0068 0023     		movs	r3, #0
 698 006a 1370     		strb	r3, [r2]
 699              	.LVL58:
 847:Src/pb_decode.c ****         {
 700              		.loc 1 847 9 is_stmt 1 view .LVU196
 701 006c DBE7     		b	.L66
 702              	.LVL59:
 703              	.L67:
 843:Src/pb_decode.c ****             init_data = false;
 704              		.loc 1 843 13 view .LVU197
 843:Src/pb_decode.c ****             init_data = false;
 705              		.loc 1 843 30 is_stmt 0 view .LVU198
 706 006e 4369     		ldr	r3, [r0, #20]
 843:Src/pb_decode.c ****             init_data = false;
 707              		.loc 1 843 38 view .LVU199
 708 0070 0022     		movs	r2, #0
 709 0072 1A80     		strh	r2, [r3]	@ movhi
 710              	.LVL60:
 844:Src/pb_decode.c ****         }
 711              		.loc 1 844 13 is_stmt 1 view .LVU200
 847:Src/pb_decode.c ****         {
 712              		.loc 1 847 9 view .LVU201
 713 0074 0EE0     		b	.L59
 714              	.LVL61:
 715              	.L74:
 852:Src/pb_decode.c ****             }
 716              		.loc 1 852 17 view .LVU202
 717 0076 0169     		ldr	r1, [r0, #16]
 718 0078 D2F80B00 		ldr	r0, [r2, #11]	@ unaligned
 719              	.LVL62:
 852:Src/pb_decode.c ****             }
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 30


 720              		.loc 1 852 17 is_stmt 0 view .LVU203
 721 007c FFF7FEFF 		bl	pb_message_set_to_defaults
 722              	.LVL63:
 723 0080 08E0     		b	.L59
 724              	.LVL64:
 725              	.L69:
 858:Src/pb_decode.c ****             }
 859:Src/pb_decode.c ****             else
 860:Src/pb_decode.c ****             {
 861:Src/pb_decode.c ****                 /* Initialize to zeros */
 862:Src/pb_decode.c ****                 memset(iter->pData, 0, iter->pos->data_size);
 726              		.loc 1 862 17 is_stmt 1 view .LVU204
 727 0082 B2F80720 		ldrh	r2, [r2, #7]	@ unaligned
 728 0086 0021     		movs	r1, #0
 729 0088 0069     		ldr	r0, [r0, #16]
 730              	.LVL65:
 731              		.loc 1 862 17 is_stmt 0 view .LVU205
 732 008a FFF7FEFF 		bl	memset
 733              	.LVL66:
 734 008e 01E0     		b	.L59
 735              	.LVL67:
 736              	.L64:
 737              		.loc 1 862 17 view .LVU206
 738              	.LBE8:
 863:Src/pb_decode.c ****             }
 864:Src/pb_decode.c ****         }
 865:Src/pb_decode.c ****     }
 866:Src/pb_decode.c ****     else if (PB_ATYPE(type) == PB_ATYPE_POINTER)
 739              		.loc 1 866 10 is_stmt 1 view .LVU207
 740              		.loc 1 866 13 is_stmt 0 view .LVU208
 741 0090 802A     		cmp	r2, #128
 742 0092 01D0     		beq	.L75
 743              	.LVL68:
 744              	.L59:
 867:Src/pb_decode.c ****     {
 868:Src/pb_decode.c ****         /* Initialize the pointer to NULL. */
 869:Src/pb_decode.c ****         *(void**)iter->pData = NULL;
 870:Src/pb_decode.c ****         
 871:Src/pb_decode.c ****         /* Initialize array count to 0. */
 872:Src/pb_decode.c ****         if (PB_HTYPE(type) == PB_HTYPE_REPEATED ||
 873:Src/pb_decode.c ****             PB_HTYPE(type) == PB_HTYPE_ONEOF)
 874:Src/pb_decode.c ****         {
 875:Src/pb_decode.c ****             *(pb_size_t*)iter->pSize = 0;
 876:Src/pb_decode.c ****         }
 877:Src/pb_decode.c ****     }
 878:Src/pb_decode.c ****     else if (PB_ATYPE(type) == PB_ATYPE_CALLBACK)
 879:Src/pb_decode.c ****     {
 880:Src/pb_decode.c ****         /* Don't overwrite callback */
 881:Src/pb_decode.c ****     }
 882:Src/pb_decode.c **** }
 745              		.loc 1 882 1 view .LVU209
 746 0094 06B0     		add	sp, sp, #24
 747              	.LCFI13:
 748              		.cfi_remember_state
 749              		.cfi_def_cfa_offset 8
 750              		@ sp needed
 751 0096 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 31


 752              	.LVL69:
 753              	.L75:
 754              	.LCFI14:
 755              		.cfi_restore_state
 869:Src/pb_decode.c ****         
 756              		.loc 1 869 9 is_stmt 1 view .LVU210
 869:Src/pb_decode.c ****         
 757              		.loc 1 869 22 is_stmt 0 view .LVU211
 758 0098 0269     		ldr	r2, [r0, #16]
 869:Src/pb_decode.c ****         
 759              		.loc 1 869 30 view .LVU212
 760 009a 0021     		movs	r1, #0
 761 009c 1160     		str	r1, [r2]
 872:Src/pb_decode.c ****             PB_HTYPE(type) == PB_HTYPE_ONEOF)
 762              		.loc 1 872 9 is_stmt 1 view .LVU213
 763 009e 03F03003 		and	r3, r3, #48
 764              	.LVL70:
 872:Src/pb_decode.c ****             PB_HTYPE(type) == PB_HTYPE_ONEOF)
 765              		.loc 1 872 12 is_stmt 0 view .LVU214
 766 00a2 202B     		cmp	r3, #32
 767 00a4 01D0     		beq	.L70
 872:Src/pb_decode.c ****             PB_HTYPE(type) == PB_HTYPE_ONEOF)
 768              		.loc 1 872 49 discriminator 1 view .LVU215
 769 00a6 302B     		cmp	r3, #48
 770 00a8 F4D1     		bne	.L59
 771              	.L70:
 875:Src/pb_decode.c ****         }
 772              		.loc 1 875 13 is_stmt 1 view .LVU216
 875:Src/pb_decode.c ****         }
 773              		.loc 1 875 30 is_stmt 0 view .LVU217
 774 00aa 4369     		ldr	r3, [r0, #20]
 875:Src/pb_decode.c ****         }
 775              		.loc 1 875 38 view .LVU218
 776 00ac 0022     		movs	r2, #0
 777 00ae 1A80     		strh	r2, [r3]	@ movhi
 881:Src/pb_decode.c **** }
 778              		.loc 1 881 5 is_stmt 1 view .LVU219
 779              		.loc 1 882 1 is_stmt 0 view .LVU220
 780 00b0 F0E7     		b	.L59
 781              		.cfi_endproc
 782              	.LFE22:
 784              		.section	.text.pb_message_set_to_defaults,"ax",%progbits
 785              		.align	1
 786              		.syntax unified
 787              		.thumb
 788              		.thumb_func
 789              		.fpu fpv4-sp-d16
 791              	pb_message_set_to_defaults:
 792              	.LVL71:
 793              	.LFB23:
 883:Src/pb_decode.c **** 
 884:Src/pb_decode.c **** static void pb_message_set_to_defaults(const pb_field_t fields[], void *dest_struct)
 885:Src/pb_decode.c **** {
 794              		.loc 1 885 1 is_stmt 1 view -0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 24
 797              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 32


 798              		.loc 1 885 1 is_stmt 0 view .LVU222
 799 0000 00B5     		push	{lr}
 800              	.LCFI15:
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 14, -4
 803 0002 87B0     		sub	sp, sp, #28
 804              	.LCFI16:
 805              		.cfi_def_cfa_offset 32
 886:Src/pb_decode.c ****     pb_field_iter_t iter;
 806              		.loc 1 886 5 is_stmt 1 view .LVU223
 887:Src/pb_decode.c **** 
 888:Src/pb_decode.c ****     if (!pb_field_iter_begin(&iter, fields, dest_struct))
 807              		.loc 1 888 5 view .LVU224
 808              		.loc 1 888 10 is_stmt 0 view .LVU225
 809 0004 0A46     		mov	r2, r1
 810 0006 0146     		mov	r1, r0
 811              	.LVL72:
 812              		.loc 1 888 10 view .LVU226
 813 0008 6846     		mov	r0, sp
 814              	.LVL73:
 815              		.loc 1 888 10 view .LVU227
 816 000a FFF7FEFF 		bl	pb_field_iter_begin
 817              	.LVL74:
 818              		.loc 1 888 8 view .LVU228
 819 000e 38B1     		cbz	r0, .L76
 820              	.L77:
 889:Src/pb_decode.c ****         return; /* Empty message type */
 890:Src/pb_decode.c ****     
 891:Src/pb_decode.c ****     do
 821              		.loc 1 891 5 is_stmt 1 discriminator 1 view .LVU229
 892:Src/pb_decode.c ****     {
 893:Src/pb_decode.c ****         pb_field_set_to_default(&iter);
 822              		.loc 1 893 9 discriminator 1 view .LVU230
 823 0010 6846     		mov	r0, sp
 824 0012 FFF7FEFF 		bl	pb_field_set_to_default
 825              	.LVL75:
 894:Src/pb_decode.c ****     } while (pb_field_iter_next(&iter));
 826              		.loc 1 894 14 is_stmt 0 discriminator 1 view .LVU231
 827 0016 6846     		mov	r0, sp
 828 0018 FFF7FEFF 		bl	pb_field_iter_next
 829              	.LVL76:
 830              		.loc 1 894 5 discriminator 1 view .LVU232
 831 001c 0028     		cmp	r0, #0
 832 001e F7D1     		bne	.L77
 833              	.L76:
 895:Src/pb_decode.c **** }
 834              		.loc 1 895 1 view .LVU233
 835 0020 07B0     		add	sp, sp, #28
 836              	.LCFI17:
 837              		.cfi_def_cfa_offset 4
 838              		@ sp needed
 839 0022 5DF804FB 		ldr	pc, [sp], #4
 840              		.cfi_endproc
 841              	.LFE23:
 843              		.section	.text.pb_read,"ax",%progbits
 844              		.align	1
 845              		.global	pb_read
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 33


 846              		.syntax unified
 847              		.thumb
 848              		.thumb_func
 849              		.fpu fpv4-sp-d16
 851              	pb_read:
 852              	.LVL77:
 853              	.LFB1:
 101:Src/pb_decode.c **** #ifndef PB_BUFFER_ONLY
 854              		.loc 1 101 1 is_stmt 1 view -0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 16
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 101:Src/pb_decode.c **** #ifndef PB_BUFFER_ONLY
 858              		.loc 1 101 1 is_stmt 0 view .LVU235
 859 0000 30B5     		push	{r4, r5, lr}
 860              	.LCFI18:
 861              		.cfi_def_cfa_offset 12
 862              		.cfi_offset 4, -12
 863              		.cfi_offset 5, -8
 864              		.cfi_offset 14, -4
 865 0002 85B0     		sub	sp, sp, #20
 866              	.LCFI19:
 867              		.cfi_def_cfa_offset 32
 868 0004 0446     		mov	r4, r0
 869 0006 1546     		mov	r5, r2
 103:Src/pb_decode.c **** 	{
 870              		.loc 1 103 2 is_stmt 1 view .LVU236
 103:Src/pb_decode.c **** 	{
 871              		.loc 1 103 5 is_stmt 0 view .LVU237
 872 0008 0846     		mov	r0, r1
 873              	.LVL78:
 103:Src/pb_decode.c **** 	{
 874              		.loc 1 103 5 view .LVU238
 875 000a 79B1     		cbz	r1, .L91
 876              	.LVL79:
 877              	.L81:
 119:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "end-of-stream");
 878              		.loc 1 119 5 is_stmt 1 view .LVU239
 119:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "end-of-stream");
 879              		.loc 1 119 15 is_stmt 0 view .LVU240
 880 000c A368     		ldr	r3, [r4, #8]
 119:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "end-of-stream");
 881              		.loc 1 119 8 view .LVU241
 882 000e AB42     		cmp	r3, r5
 883 0010 23D3     		bcc	.L92
 123:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 884              		.loc 1 123 5 is_stmt 1 view .LVU242
 123:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 885              		.loc 1 123 16 is_stmt 0 view .LVU243
 886 0012 2368     		ldr	r3, [r4]
 123:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 887              		.loc 1 123 10 view .LVU244
 888 0014 2A46     		mov	r2, r5
 889 0016 0146     		mov	r1, r0
 890              	.LVL80:
 123:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 891              		.loc 1 123 10 view .LVU245
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 34


 892 0018 2046     		mov	r0, r4
 893              	.LVL81:
 123:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 894              		.loc 1 123 10 view .LVU246
 895 001a 9847     		blx	r3
 896              	.LVL82:
 123:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "io error");
 897              		.loc 1 123 8 view .LVU247
 898 001c 0346     		mov	r3, r0
 899 001e 18B3     		cbz	r0, .L93
 130:Src/pb_decode.c ****     return true;
 900              		.loc 1 130 5 is_stmt 1 view .LVU248
 130:Src/pb_decode.c ****     return true;
 901              		.loc 1 130 24 is_stmt 0 view .LVU249
 902 0020 A268     		ldr	r2, [r4, #8]
 903 0022 551B     		subs	r5, r2, r5
 904              	.LVL83:
 130:Src/pb_decode.c ****     return true;
 905              		.loc 1 130 24 view .LVU250
 906 0024 A560     		str	r5, [r4, #8]
 131:Src/pb_decode.c **** }
 907              		.loc 1 131 5 is_stmt 1 view .LVU251
 908              	.LVL84:
 909              	.L85:
 132:Src/pb_decode.c **** 
 910              		.loc 1 132 1 is_stmt 0 discriminator 1 view .LVU252
 911 0026 1846     		mov	r0, r3
 912 0028 05B0     		add	sp, sp, #20
 913              	.LCFI20:
 914              		.cfi_remember_state
 915              		.cfi_def_cfa_offset 12
 916              		@ sp needed
 917 002a 30BD     		pop	{r4, r5, pc}
 918              	.LVL85:
 919              	.L91:
 920              	.LCFI21:
 921              		.cfi_restore_state
 103:Src/pb_decode.c **** 	{
 922              		.loc 1 103 27 discriminator 1 view .LVU253
 923 002c 2268     		ldr	r2, [r4]
 924              	.LVL86:
 103:Src/pb_decode.c **** 	{
 925              		.loc 1 103 18 discriminator 1 view .LVU254
 926 002e 114B     		ldr	r3, .L97
 927 0030 9A42     		cmp	r2, r3
 928 0032 EBD0     		beq	.L81
 929              	.LVL87:
 930              	.L82:
 931              	.LBB9:
 107:Src/pb_decode.c **** 		{
 932              		.loc 1 107 9 view .LVU255
 933 0034 102D     		cmp	r5, #16
 934 0036 09D9     		bls	.L94
 109:Src/pb_decode.c **** 				return false;
 935              		.loc 1 109 4 is_stmt 1 view .LVU256
 109:Src/pb_decode.c **** 				return false;
 936              		.loc 1 109 9 is_stmt 0 view .LVU257
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 35


 937 0038 1022     		movs	r2, #16
 938 003a 6946     		mov	r1, sp
 939 003c 2046     		mov	r0, r4
 940 003e FFF7FEFF 		bl	pb_read
 941              	.LVL88:
 109:Src/pb_decode.c **** 				return false;
 942              		.loc 1 109 7 view .LVU258
 943 0042 0346     		mov	r3, r0
 944 0044 0028     		cmp	r0, #0
 945 0046 EED0     		beq	.L85
 112:Src/pb_decode.c **** 		}
 946              		.loc 1 112 4 is_stmt 1 view .LVU259
 112:Src/pb_decode.c **** 		}
 947              		.loc 1 112 10 is_stmt 0 view .LVU260
 948 0048 103D     		subs	r5, r5, #16
 949              	.LVL89:
 112:Src/pb_decode.c **** 		}
 950              		.loc 1 112 10 view .LVU261
 951 004a F3E7     		b	.L82
 952              	.L94:
 115:Src/pb_decode.c **** 	}
 953              		.loc 1 115 3 is_stmt 1 view .LVU262
 115:Src/pb_decode.c **** 	}
 954              		.loc 1 115 10 is_stmt 0 view .LVU263
 955 004c 2A46     		mov	r2, r5
 956 004e 6946     		mov	r1, sp
 957 0050 2046     		mov	r0, r4
 958 0052 FFF7FEFF 		bl	pb_read
 959              	.LVL90:
 960 0056 0346     		mov	r3, r0
 961 0058 E5E7     		b	.L85
 962              	.LVL91:
 963              	.L92:
 115:Src/pb_decode.c **** 	}
 964              		.loc 1 115 10 view .LVU264
 965              	.LBE9:
 120:Src/pb_decode.c ****     
 966              		.loc 1 120 9 is_stmt 1 view .LVU265
 967 005a E368     		ldr	r3, [r4, #12]
 968 005c 13B1     		cbz	r3, .L95
 969              	.L87:
 120:Src/pb_decode.c ****     
 970              		.loc 1 120 9 is_stmt 0 discriminator 4 view .LVU266
 971 005e E360     		str	r3, [r4, #12]
 972 0060 0023     		movs	r3, #0
 973 0062 E0E7     		b	.L85
 974              	.L95:
 120:Src/pb_decode.c ****     
 975              		.loc 1 120 9 view .LVU267
 976 0064 044B     		ldr	r3, .L97+4
 977 0066 FAE7     		b	.L87
 978              	.LVL92:
 979              	.L93:
 124:Src/pb_decode.c **** #else
 980              		.loc 1 124 9 is_stmt 1 view .LVU268
 981 0068 E268     		ldr	r2, [r4, #12]
 982 006a 0AB1     		cbz	r2, .L96
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 36


 983              	.L89:
 124:Src/pb_decode.c **** #else
 984              		.loc 1 124 9 is_stmt 0 discriminator 4 view .LVU269
 985 006c E260     		str	r2, [r4, #12]
 986 006e DAE7     		b	.L85
 987              	.L96:
 124:Src/pb_decode.c **** #else
 988              		.loc 1 124 9 view .LVU270
 989 0070 024A     		ldr	r2, .L97+8
 990 0072 FBE7     		b	.L89
 991              	.L98:
 992              		.align	2
 993              	.L97:
 994 0074 00000000 		.word	buf_read
 995 0078 00000000 		.word	.LC0
 996 007c 10000000 		.word	.LC1
 997              		.cfi_endproc
 998              	.LFE1:
 1000              		.section	.text.pb_skip_varint,"ax",%progbits
 1001              		.align	1
 1002              		.syntax unified
 1003              		.thumb
 1004              		.thumb_func
 1005              		.fpu fpv4-sp-d16
 1007              	pb_skip_varint:
 1008              	.LVL93:
 1009              	.LFB7:
 274:Src/pb_decode.c ****     pb_byte_t byte;
 1010              		.loc 1 274 1 is_stmt 1 view -0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 8
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 274:Src/pb_decode.c ****     pb_byte_t byte;
 1014              		.loc 1 274 1 is_stmt 0 view .LVU272
 1015 0000 10B5     		push	{r4, lr}
 1016              	.LCFI22:
 1017              		.cfi_def_cfa_offset 8
 1018              		.cfi_offset 4, -8
 1019              		.cfi_offset 14, -4
 1020 0002 82B0     		sub	sp, sp, #8
 1021              	.LCFI23:
 1022              		.cfi_def_cfa_offset 16
 1023 0004 0446     		mov	r4, r0
 1024              	.LVL94:
 1025              	.L101:
 275:Src/pb_decode.c ****     do
 1026              		.loc 1 275 5 is_stmt 1 view .LVU273
 276:Src/pb_decode.c ****     {
 1027              		.loc 1 276 5 view .LVU274
 278:Src/pb_decode.c ****             return false;
 1028              		.loc 1 278 9 view .LVU275
 278:Src/pb_decode.c ****             return false;
 1029              		.loc 1 278 14 is_stmt 0 view .LVU276
 1030 0006 0122     		movs	r2, #1
 1031 0008 0DF10701 		add	r1, sp, #7
 1032 000c 2046     		mov	r0, r4
 1033 000e FFF7FEFF 		bl	pb_read
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 37


 1034              	.LVL95:
 278:Src/pb_decode.c ****             return false;
 1035              		.loc 1 278 12 view .LVU277
 1036 0012 0246     		mov	r2, r0
 1037 0014 18B1     		cbz	r0, .L100
 280:Src/pb_decode.c ****     return true;
 1038              		.loc 1 280 14 view .LVU278
 1039 0016 9DF90730 		ldrsb	r3, [sp, #7]
 280:Src/pb_decode.c ****     return true;
 1040              		.loc 1 280 5 view .LVU279
 1041 001a 002B     		cmp	r3, #0
 1042 001c F3DB     		blt	.L101
 1043              	.L100:
 282:Src/pb_decode.c **** 
 1044              		.loc 1 282 1 view .LVU280
 1045 001e 1046     		mov	r0, r2
 1046 0020 02B0     		add	sp, sp, #8
 1047              	.LCFI24:
 1048              		.cfi_def_cfa_offset 8
 1049              		@ sp needed
 1050 0022 10BD     		pop	{r4, pc}
 282:Src/pb_decode.c **** 
 1051              		.loc 1 282 1 view .LVU281
 1052              		.cfi_endproc
 1053              	.LFE7:
 1055              		.section	.text.read_raw_value,"ax",%progbits
 1056              		.align	1
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1060              		.fpu fpv4-sp-d16
 1062              	read_raw_value:
 1063              	.LVL96:
 1064              	.LFB11:
 332:Src/pb_decode.c ****     size_t max_size = *size;
 1065              		.loc 1 332 1 is_stmt 1 view -0
 1066              		.cfi_startproc
 1067              		@ args = 0, pretend = 0, frame = 0
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 332:Src/pb_decode.c ****     size_t max_size = *size;
 1069              		.loc 1 332 1 is_stmt 0 view .LVU283
 1070 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1071              	.LCFI25:
 1072              		.cfi_def_cfa_offset 24
 1073              		.cfi_offset 3, -24
 1074              		.cfi_offset 4, -20
 1075              		.cfi_offset 5, -16
 1076              		.cfi_offset 6, -12
 1077              		.cfi_offset 7, -8
 1078              		.cfi_offset 14, -4
 1079 0002 0646     		mov	r6, r0
 1080 0004 1446     		mov	r4, r2
 1081 0006 1D46     		mov	r5, r3
 333:Src/pb_decode.c ****     switch (wire_type)
 1082              		.loc 1 333 5 is_stmt 1 view .LVU284
 333:Src/pb_decode.c ****     switch (wire_type)
 1083              		.loc 1 333 12 is_stmt 0 view .LVU285
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 38


 1084 0008 1F68     		ldr	r7, [r3]
 1085              	.LVL97:
 334:Src/pb_decode.c ****     {
 1086              		.loc 1 334 5 is_stmt 1 view .LVU286
 1087 000a 0129     		cmp	r1, #1
 1088 000c 1ED0     		beq	.L104
 1089 000e 4BB2     		sxtb	r3, r1
 1090              	.LVL98:
 334:Src/pb_decode.c ****     {
 1091              		.loc 1 334 5 is_stmt 0 view .LVU287
 1092 0010 33B1     		cbz	r3, .L105
 1093 0012 0529     		cmp	r1, #5
 1094 0014 22D0     		beq	.L106
 360:Src/pb_decode.c ****     }
 1095              		.loc 1 360 18 is_stmt 1 view .LVU288
 1096 0016 C368     		ldr	r3, [r0, #12]
 1097 0018 3BB3     		cbz	r3, .L115
 1098              	.L110:
 360:Src/pb_decode.c ****     }
 1099              		.loc 1 360 18 is_stmt 0 discriminator 4 view .LVU289
 1100 001a F360     		str	r3, [r6, #12]
 1101 001c 0022     		movs	r2, #0
 1102              	.LVL99:
 360:Src/pb_decode.c ****     }
 1103              		.loc 1 360 18 discriminator 4 view .LVU290
 1104 001e 1BE0     		b	.L108
 1105              	.LVL100:
 1106              	.L105:
 337:Src/pb_decode.c ****             do
 1107              		.loc 1 337 13 is_stmt 1 view .LVU291
 337:Src/pb_decode.c ****             do
 1108              		.loc 1 337 19 is_stmt 0 view .LVU292
 1109 0020 0023     		movs	r3, #0
 1110 0022 2B60     		str	r3, [r5]
 1111 0024 00E0     		b	.L109
 1112              	.LVL101:
 1113              	.L112:
 343:Src/pb_decode.c ****             return true;
 1114              		.loc 1 343 26 view .LVU293
 1115 0026 0C46     		mov	r4, r1
 1116              	.LVL102:
 1117              	.L109:
 338:Src/pb_decode.c ****             {
 1118              		.loc 1 338 13 is_stmt 1 view .LVU294
 340:Src/pb_decode.c ****                 if (*size > max_size) return false;
 1119              		.loc 1 340 17 view .LVU295
 340:Src/pb_decode.c ****                 if (*size > max_size) return false;
 1120              		.loc 1 340 18 is_stmt 0 view .LVU296
 1121 0028 2B68     		ldr	r3, [r5]
 340:Src/pb_decode.c ****                 if (*size > max_size) return false;
 1122              		.loc 1 340 24 view .LVU297
 1123 002a 0133     		adds	r3, r3, #1
 1124 002c 2B60     		str	r3, [r5]
 341:Src/pb_decode.c ****                 if (!pb_read(stream, buf, 1)) return false;
 1125              		.loc 1 341 17 is_stmt 1 view .LVU298
 341:Src/pb_decode.c ****                 if (!pb_read(stream, buf, 1)) return false;
 1126              		.loc 1 341 20 is_stmt 0 view .LVU299
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 39


 1127 002e BB42     		cmp	r3, r7
 1128 0030 1DD8     		bhi	.L111
 342:Src/pb_decode.c ****             } while (*buf++ & 0x80);
 1129              		.loc 1 342 17 is_stmt 1 view .LVU300
 342:Src/pb_decode.c ****             } while (*buf++ & 0x80);
 1130              		.loc 1 342 22 is_stmt 0 view .LVU301
 1131 0032 0122     		movs	r2, #1
 1132 0034 2146     		mov	r1, r4
 1133 0036 3046     		mov	r0, r6
 1134 0038 FFF7FEFF 		bl	pb_read
 1135              	.LVL103:
 342:Src/pb_decode.c ****             } while (*buf++ & 0x80);
 1136              		.loc 1 342 20 view .LVU302
 1137 003c 0246     		mov	r2, r0
 1138 003e 58B1     		cbz	r0, .L108
 343:Src/pb_decode.c ****             return true;
 1139              		.loc 1 343 26 view .LVU303
 1140 0040 2146     		mov	r1, r4
 343:Src/pb_decode.c ****             return true;
 1141              		.loc 1 343 22 view .LVU304
 1142 0042 11F9013B 		ldrsb	r3, [r1], #1
 343:Src/pb_decode.c ****             return true;
 1143              		.loc 1 343 13 view .LVU305
 1144 0046 002B     		cmp	r3, #0
 1145 0048 EDDB     		blt	.L112
 1146 004a 05E0     		b	.L108
 1147              	.LVL104:
 1148              	.L104:
 347:Src/pb_decode.c ****             return pb_read(stream, buf, 8);
 1149              		.loc 1 347 13 is_stmt 1 view .LVU306
 347:Src/pb_decode.c ****             return pb_read(stream, buf, 8);
 1150              		.loc 1 347 19 is_stmt 0 view .LVU307
 1151 004c 0822     		movs	r2, #8
 1152              	.LVL105:
 347:Src/pb_decode.c ****             return pb_read(stream, buf, 8);
 1153              		.loc 1 347 19 view .LVU308
 1154 004e 1A60     		str	r2, [r3]
 348:Src/pb_decode.c ****         
 1155              		.loc 1 348 13 is_stmt 1 view .LVU309
 348:Src/pb_decode.c ****         
 1156              		.loc 1 348 20 is_stmt 0 view .LVU310
 1157 0050 2146     		mov	r1, r4
 1158              	.LVL106:
 348:Src/pb_decode.c ****         
 1159              		.loc 1 348 20 view .LVU311
 1160 0052 FFF7FEFF 		bl	pb_read
 1161              	.LVL107:
 348:Src/pb_decode.c ****         
 1162              		.loc 1 348 20 view .LVU312
 1163 0056 0246     		mov	r2, r0
 1164              	.L108:
 362:Src/pb_decode.c **** 
 1165              		.loc 1 362 1 view .LVU313
 1166 0058 1046     		mov	r0, r2
 1167 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1168              	.LVL108:
 1169              	.L106:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 40


 351:Src/pb_decode.c ****             return pb_read(stream, buf, 4);
 1170              		.loc 1 351 13 is_stmt 1 view .LVU314
 351:Src/pb_decode.c ****             return pb_read(stream, buf, 4);
 1171              		.loc 1 351 19 is_stmt 0 view .LVU315
 1172 005c 0422     		movs	r2, #4
 1173              	.LVL109:
 351:Src/pb_decode.c ****             return pb_read(stream, buf, 4);
 1174              		.loc 1 351 19 view .LVU316
 1175 005e 2A60     		str	r2, [r5]
 352:Src/pb_decode.c ****         
 1176              		.loc 1 352 13 is_stmt 1 view .LVU317
 352:Src/pb_decode.c ****         
 1177              		.loc 1 352 20 is_stmt 0 view .LVU318
 1178 0060 2146     		mov	r1, r4
 1179              	.LVL110:
 352:Src/pb_decode.c ****         
 1180              		.loc 1 352 20 view .LVU319
 1181 0062 FFF7FEFF 		bl	pb_read
 1182              	.LVL111:
 352:Src/pb_decode.c ****         
 1183              		.loc 1 352 20 view .LVU320
 1184 0066 0246     		mov	r2, r0
 1185 0068 F6E7     		b	.L108
 1186              	.LVL112:
 1187              	.L115:
 360:Src/pb_decode.c ****     }
 1188              		.loc 1 360 18 view .LVU321
 1189 006a 024B     		ldr	r3, .L116
 1190 006c D5E7     		b	.L110
 1191              	.LVL113:
 1192              	.L111:
 341:Src/pb_decode.c ****                 if (!pb_read(stream, buf, 1)) return false;
 1193              		.loc 1 341 46 view .LVU322
 1194 006e 0022     		movs	r2, #0
 1195 0070 F2E7     		b	.L108
 1196              	.L117:
 1197 0072 00BF     		.align	2
 1198              	.L116:
 1199 0074 00000000 		.word	.LC4
 1200              		.cfi_endproc
 1201              	.LFE11:
 1203              		.section	.text.pb_istream_from_buffer,"ax",%progbits
 1204              		.align	1
 1205              		.global	pb_istream_from_buffer
 1206              		.syntax unified
 1207              		.thumb
 1208              		.thumb_func
 1209              		.fpu fpv4-sp-d16
 1211              	pb_istream_from_buffer:
 1212              	.LVL114:
 1213              	.LFB3:
 155:Src/pb_decode.c ****     pb_istream_t stream;
 1214              		.loc 1 155 1 is_stmt 1 view -0
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              		@ link register save eliminated.
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 41


 155:Src/pb_decode.c ****     pb_istream_t stream;
 1219              		.loc 1 155 1 is_stmt 0 view .LVU324
 1220 0000 10B4     		push	{r4}
 1221              	.LCFI26:
 1222              		.cfi_def_cfa_offset 4
 1223              		.cfi_offset 4, -4
 156:Src/pb_decode.c ****     /* Cast away the const from buf without a compiler error.  We are
 1224              		.loc 1 156 5 is_stmt 1 view .LVU325
 160:Src/pb_decode.c ****         void *state;
 1225              		.loc 1 160 5 view .LVU326
 167:Src/pb_decode.c **** #endif
 1226              		.loc 1 167 5 view .LVU327
 167:Src/pb_decode.c **** #endif
 1227              		.loc 1 167 21 is_stmt 0 view .LVU328
 1228 0002 044C     		ldr	r4, .L120
 1229 0004 0460     		str	r4, [r0]
 169:Src/pb_decode.c ****     stream.state = state.state;
 1230              		.loc 1 169 5 is_stmt 1 view .LVU329
 170:Src/pb_decode.c ****     stream.bytes_left = bufsize;
 1231              		.loc 1 170 5 view .LVU330
 170:Src/pb_decode.c ****     stream.bytes_left = bufsize;
 1232              		.loc 1 170 18 is_stmt 0 view .LVU331
 1233 0006 4160     		str	r1, [r0, #4]
 171:Src/pb_decode.c **** #ifndef PB_NO_ERRMSG
 1234              		.loc 1 171 5 is_stmt 1 view .LVU332
 171:Src/pb_decode.c **** #ifndef PB_NO_ERRMSG
 1235              		.loc 1 171 23 is_stmt 0 view .LVU333
 1236 0008 8260     		str	r2, [r0, #8]
 173:Src/pb_decode.c **** #endif
 1237              		.loc 1 173 5 is_stmt 1 view .LVU334
 173:Src/pb_decode.c **** #endif
 1238              		.loc 1 173 19 is_stmt 0 view .LVU335
 1239 000a 0022     		movs	r2, #0
 1240              	.LVL115:
 173:Src/pb_decode.c **** #endif
 1241              		.loc 1 173 19 view .LVU336
 1242 000c C260     		str	r2, [r0, #12]
 175:Src/pb_decode.c **** }
 1243              		.loc 1 175 5 is_stmt 1 view .LVU337
 176:Src/pb_decode.c **** 
 1244              		.loc 1 176 1 is_stmt 0 view .LVU338
 1245 000e 5DF8044B 		ldr	r4, [sp], #4
 1246              	.LCFI27:
 1247              		.cfi_restore 4
 1248              		.cfi_def_cfa_offset 0
 1249 0012 7047     		bx	lr
 1250              	.L121:
 1251              		.align	2
 1252              	.L120:
 1253 0014 00000000 		.word	buf_read
 1254              		.cfi_endproc
 1255              	.LFE3:
 1257              		.section	.text.pb_decode_varint32,"ax",%progbits
 1258              		.align	1
 1259              		.global	pb_decode_varint32
 1260              		.syntax unified
 1261              		.thumb
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 42


 1262              		.thumb_func
 1263              		.fpu fpv4-sp-d16
 1265              	pb_decode_varint32:
 1266              	.LVL116:
 1267              	.LFB5:
 245:Src/pb_decode.c ****     return pb_decode_varint32_eof(stream, dest, NULL);
 1268              		.loc 1 245 1 is_stmt 1 view -0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 245:Src/pb_decode.c ****     return pb_decode_varint32_eof(stream, dest, NULL);
 1272              		.loc 1 245 1 is_stmt 0 view .LVU340
 1273 0000 08B5     		push	{r3, lr}
 1274              	.LCFI28:
 1275              		.cfi_def_cfa_offset 8
 1276              		.cfi_offset 3, -8
 1277              		.cfi_offset 14, -4
 246:Src/pb_decode.c **** }
 1278              		.loc 1 246 5 is_stmt 1 view .LVU341
 246:Src/pb_decode.c **** }
 1279              		.loc 1 246 12 is_stmt 0 view .LVU342
 1280 0002 0022     		movs	r2, #0
 1281 0004 FFF7FEFF 		bl	pb_decode_varint32_eof
 1282              	.LVL117:
 247:Src/pb_decode.c **** 
 1283              		.loc 1 247 1 view .LVU343
 1284 0008 08BD     		pop	{r3, pc}
 1285              		.cfi_endproc
 1286              	.LFE5:
 1288              		.section	.text.pb_skip_string,"ax",%progbits
 1289              		.align	1
 1290              		.syntax unified
 1291              		.thumb
 1292              		.thumb_func
 1293              		.fpu fpv4-sp-d16
 1295              	pb_skip_string:
 1296              	.LVL118:
 1297              	.LFB8:
 285:Src/pb_decode.c ****     uint32_t length;
 1298              		.loc 1 285 1 is_stmt 1 view -0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 8
 1301              		@ frame_needed = 0, uses_anonymous_args = 0
 285:Src/pb_decode.c ****     uint32_t length;
 1302              		.loc 1 285 1 is_stmt 0 view .LVU345
 1303 0000 10B5     		push	{r4, lr}
 1304              	.LCFI29:
 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 4, -8
 1307              		.cfi_offset 14, -4
 1308 0002 82B0     		sub	sp, sp, #8
 1309              	.LCFI30:
 1310              		.cfi_def_cfa_offset 16
 1311 0004 0446     		mov	r4, r0
 286:Src/pb_decode.c ****     if (!pb_decode_varint32(stream, &length))
 1312              		.loc 1 286 5 is_stmt 1 view .LVU346
 287:Src/pb_decode.c ****         return false;
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 43


 1313              		.loc 1 287 5 view .LVU347
 287:Src/pb_decode.c ****         return false;
 1314              		.loc 1 287 10 is_stmt 0 view .LVU348
 1315 0006 01A9     		add	r1, sp, #4
 1316 0008 FFF7FEFF 		bl	pb_decode_varint32
 1317              	.LVL119:
 287:Src/pb_decode.c ****         return false;
 1318              		.loc 1 287 8 view .LVU349
 1319 000c 0346     		mov	r3, r0
 1320 000e 10B9     		cbnz	r0, .L127
 1321              	.L125:
 291:Src/pb_decode.c **** 
 1322              		.loc 1 291 1 view .LVU350
 1323 0010 1846     		mov	r0, r3
 1324 0012 02B0     		add	sp, sp, #8
 1325              	.LCFI31:
 1326              		.cfi_remember_state
 1327              		.cfi_def_cfa_offset 8
 1328              		@ sp needed
 1329 0014 10BD     		pop	{r4, pc}
 1330              	.LVL120:
 1331              	.L127:
 1332              	.LCFI32:
 1333              		.cfi_restore_state
 290:Src/pb_decode.c **** }
 1334              		.loc 1 290 5 is_stmt 1 view .LVU351
 290:Src/pb_decode.c **** }
 1335              		.loc 1 290 12 is_stmt 0 view .LVU352
 1336 0016 019A     		ldr	r2, [sp, #4]
 1337 0018 0021     		movs	r1, #0
 1338 001a 2046     		mov	r0, r4
 1339 001c FFF7FEFF 		bl	pb_read
 1340              	.LVL121:
 1341 0020 0346     		mov	r3, r0
 1342 0022 F5E7     		b	.L125
 1343              		.cfi_endproc
 1344              	.LFE8:
 1346              		.section	.text.pb_dec_fixed_length_bytes,"ax",%progbits
 1347              		.align	1
 1348              		.syntax unified
 1349              		.thumb
 1350              		.thumb_func
 1351              		.fpu fpv4-sp-d16
 1353              	pb_dec_fixed_length_bytes:
 1354              	.LVL122:
 1355              	.LFB40:
 896:Src/pb_decode.c **** 
 897:Src/pb_decode.c **** /*********************
 898:Src/pb_decode.c ****  * Decode all fields *
 899:Src/pb_decode.c ****  *********************/
 900:Src/pb_decode.c **** 
 901:Src/pb_decode.c **** bool checkreturn pb_decode_noinit(pb_istream_t *stream, const pb_field_t fields[], void *dest_struc
 902:Src/pb_decode.c **** {
 903:Src/pb_decode.c ****     uint32_t fields_seen[(PB_MAX_REQUIRED_FIELDS + 31) / 32] = {0, 0};
 904:Src/pb_decode.c ****     const uint32_t allbits = ~(uint32_t)0;
 905:Src/pb_decode.c ****     uint32_t extension_range_start = 0;
 906:Src/pb_decode.c ****     pb_field_iter_t iter;
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 44


 907:Src/pb_decode.c **** 
 908:Src/pb_decode.c ****     /* 'fixed_count_field' and 'fixed_count_size' track position of a repeated fixed
 909:Src/pb_decode.c ****      * count field. This can only handle _one_ repeated fixed count field that
 910:Src/pb_decode.c ****      * is unpacked and unordered among other (non repeated fixed count) fields.
 911:Src/pb_decode.c ****      */
 912:Src/pb_decode.c ****     const pb_field_t *fixed_count_field = NULL;
 913:Src/pb_decode.c ****     pb_size_t fixed_count_size = 0;
 914:Src/pb_decode.c **** 
 915:Src/pb_decode.c ****     /* Return value ignored, as empty message types will be correctly handled by
 916:Src/pb_decode.c ****      * pb_field_iter_find() anyway. */
 917:Src/pb_decode.c ****     (void)pb_field_iter_begin(&iter, fields, dest_struct);
 918:Src/pb_decode.c **** 
 919:Src/pb_decode.c ****     while (stream->bytes_left)
 920:Src/pb_decode.c ****     {
 921:Src/pb_decode.c ****         uint32_t tag;
 922:Src/pb_decode.c ****         pb_wire_type_t wire_type;
 923:Src/pb_decode.c ****         bool eof;
 924:Src/pb_decode.c **** 
 925:Src/pb_decode.c ****         if (!pb_decode_tag(stream, &wire_type, &tag, &eof))
 926:Src/pb_decode.c ****         {
 927:Src/pb_decode.c ****             if (eof)
 928:Src/pb_decode.c ****                 break;
 929:Src/pb_decode.c ****             else
 930:Src/pb_decode.c ****                 return false;
 931:Src/pb_decode.c ****         }
 932:Src/pb_decode.c **** 
 933:Src/pb_decode.c ****         if (!pb_field_iter_find(&iter, tag))
 934:Src/pb_decode.c ****         {
 935:Src/pb_decode.c ****             /* No match found, check if it matches an extension. */
 936:Src/pb_decode.c ****             if (tag >= extension_range_start)
 937:Src/pb_decode.c ****             {
 938:Src/pb_decode.c ****                 if (!find_extension_field(&iter))
 939:Src/pb_decode.c ****                     extension_range_start = (uint32_t)-1;
 940:Src/pb_decode.c ****                 else
 941:Src/pb_decode.c ****                     extension_range_start = iter.pos->tag;
 942:Src/pb_decode.c **** 
 943:Src/pb_decode.c ****                 if (tag >= extension_range_start)
 944:Src/pb_decode.c ****                 {
 945:Src/pb_decode.c ****                     size_t pos = stream->bytes_left;
 946:Src/pb_decode.c **** 
 947:Src/pb_decode.c ****                     if (!decode_extension(stream, tag, wire_type, &iter))
 948:Src/pb_decode.c ****                         return false;
 949:Src/pb_decode.c **** 
 950:Src/pb_decode.c ****                     if (pos != stream->bytes_left)
 951:Src/pb_decode.c ****                     {
 952:Src/pb_decode.c ****                         /* The field was handled */
 953:Src/pb_decode.c ****                         continue;
 954:Src/pb_decode.c ****                     }
 955:Src/pb_decode.c ****                 }
 956:Src/pb_decode.c ****             }
 957:Src/pb_decode.c **** 
 958:Src/pb_decode.c ****             /* No match found, skip data */
 959:Src/pb_decode.c ****             if (!pb_skip_field(stream, wire_type))
 960:Src/pb_decode.c ****                 return false;
 961:Src/pb_decode.c ****             continue;
 962:Src/pb_decode.c ****         }
 963:Src/pb_decode.c **** 
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 45


 964:Src/pb_decode.c ****         /* If a repeated fixed count field was found, get size from
 965:Src/pb_decode.c ****          * 'fixed_count_field' as there is no counter contained in the struct.
 966:Src/pb_decode.c ****          */
 967:Src/pb_decode.c ****         if (PB_HTYPE(iter.pos->type) == PB_HTYPE_REPEATED
 968:Src/pb_decode.c ****             && iter.pSize == iter.pData)
 969:Src/pb_decode.c ****         {
 970:Src/pb_decode.c ****             if (fixed_count_field != iter.pos) {
 971:Src/pb_decode.c ****                 /* If the new fixed count field does not match the previous one,
 972:Src/pb_decode.c ****                  * check that the previous one is NULL or that it finished
 973:Src/pb_decode.c ****                  * receiving all the expected data.
 974:Src/pb_decode.c ****                  */
 975:Src/pb_decode.c ****                 if (fixed_count_field != NULL &&
 976:Src/pb_decode.c ****                     fixed_count_size != fixed_count_field->array_size)
 977:Src/pb_decode.c ****                 {
 978:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "wrong size for fixed count field");
 979:Src/pb_decode.c ****                 }
 980:Src/pb_decode.c **** 
 981:Src/pb_decode.c ****                 fixed_count_field = iter.pos;
 982:Src/pb_decode.c ****                 fixed_count_size = 0;
 983:Src/pb_decode.c ****             }
 984:Src/pb_decode.c **** 
 985:Src/pb_decode.c ****             iter.pSize = &fixed_count_size;
 986:Src/pb_decode.c ****         }
 987:Src/pb_decode.c **** 
 988:Src/pb_decode.c ****         if (PB_HTYPE(iter.pos->type) == PB_HTYPE_REQUIRED
 989:Src/pb_decode.c ****             && iter.required_field_index < PB_MAX_REQUIRED_FIELDS)
 990:Src/pb_decode.c ****         {
 991:Src/pb_decode.c ****             uint32_t tmp = ((uint32_t)1 << (iter.required_field_index & 31));
 992:Src/pb_decode.c ****             fields_seen[iter.required_field_index >> 5] |= tmp;
 993:Src/pb_decode.c ****         }
 994:Src/pb_decode.c **** 
 995:Src/pb_decode.c ****         if (!decode_field(stream, wire_type, &iter))
 996:Src/pb_decode.c ****             return false;
 997:Src/pb_decode.c ****     }
 998:Src/pb_decode.c **** 
 999:Src/pb_decode.c ****     /* Check that all elements of the last decoded fixed count field were present. */
1000:Src/pb_decode.c ****     if (fixed_count_field != NULL &&
1001:Src/pb_decode.c ****         fixed_count_size != fixed_count_field->array_size)
1002:Src/pb_decode.c ****     {
1003:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "wrong size for fixed count field");
1004:Src/pb_decode.c ****     }
1005:Src/pb_decode.c **** 
1006:Src/pb_decode.c ****     /* Check that all required fields were present. */
1007:Src/pb_decode.c ****     {
1008:Src/pb_decode.c ****         /* First figure out the number of required fields by
1009:Src/pb_decode.c ****          * seeking to the end of the field array. Usually we
1010:Src/pb_decode.c ****          * are already close to end after decoding.
1011:Src/pb_decode.c ****          */
1012:Src/pb_decode.c ****         unsigned req_field_count;
1013:Src/pb_decode.c ****         pb_type_t last_type;
1014:Src/pb_decode.c ****         unsigned i;
1015:Src/pb_decode.c ****         do {
1016:Src/pb_decode.c ****             req_field_count = iter.required_field_index;
1017:Src/pb_decode.c ****             last_type = iter.pos->type;
1018:Src/pb_decode.c ****         } while (pb_field_iter_next(&iter));
1019:Src/pb_decode.c ****         
1020:Src/pb_decode.c ****         /* Fixup if last field was also required. */
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 46


1021:Src/pb_decode.c ****         if (PB_HTYPE(last_type) == PB_HTYPE_REQUIRED && iter.pos->tag != 0)
1022:Src/pb_decode.c ****             req_field_count++;
1023:Src/pb_decode.c ****         
1024:Src/pb_decode.c ****         if (req_field_count > PB_MAX_REQUIRED_FIELDS)
1025:Src/pb_decode.c ****             req_field_count = PB_MAX_REQUIRED_FIELDS;
1026:Src/pb_decode.c **** 
1027:Src/pb_decode.c ****         if (req_field_count > 0)
1028:Src/pb_decode.c ****         {
1029:Src/pb_decode.c ****             /* Check the whole words */
1030:Src/pb_decode.c ****             for (i = 0; i < (req_field_count >> 5); i++)
1031:Src/pb_decode.c ****             {
1032:Src/pb_decode.c ****                 if (fields_seen[i] != allbits)
1033:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "missing required field");
1034:Src/pb_decode.c ****             }
1035:Src/pb_decode.c ****             
1036:Src/pb_decode.c ****             /* Check the remaining bits (if any) */
1037:Src/pb_decode.c ****             if ((req_field_count & 31) != 0)
1038:Src/pb_decode.c ****             {
1039:Src/pb_decode.c ****                 if (fields_seen[req_field_count >> 5] !=
1040:Src/pb_decode.c ****                     (allbits >> (32 - (req_field_count & 31))))
1041:Src/pb_decode.c ****                 {
1042:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "missing required field");
1043:Src/pb_decode.c ****                 }
1044:Src/pb_decode.c ****             }
1045:Src/pb_decode.c ****         }
1046:Src/pb_decode.c ****     }
1047:Src/pb_decode.c ****     
1048:Src/pb_decode.c ****     return true;
1049:Src/pb_decode.c **** }
1050:Src/pb_decode.c **** 
1051:Src/pb_decode.c **** bool checkreturn pb_decode(pb_istream_t *stream, const pb_field_t fields[], void *dest_struct)
1052:Src/pb_decode.c **** {
1053:Src/pb_decode.c ****     bool status;
1054:Src/pb_decode.c ****     pb_message_set_to_defaults(fields, dest_struct);
1055:Src/pb_decode.c ****     status = pb_decode_noinit(stream, fields, dest_struct);
1056:Src/pb_decode.c ****     
1057:Src/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
1058:Src/pb_decode.c ****     if (!status)
1059:Src/pb_decode.c ****         pb_release(fields, dest_struct);
1060:Src/pb_decode.c **** #endif
1061:Src/pb_decode.c ****     
1062:Src/pb_decode.c ****     return status;
1063:Src/pb_decode.c **** }
1064:Src/pb_decode.c **** 
1065:Src/pb_decode.c **** bool pb_decode_delimited_noinit(pb_istream_t *stream, const pb_field_t fields[], void *dest_struct)
1066:Src/pb_decode.c **** {
1067:Src/pb_decode.c ****     pb_istream_t substream;
1068:Src/pb_decode.c ****     bool status;
1069:Src/pb_decode.c **** 
1070:Src/pb_decode.c ****     if (!pb_make_string_substream(stream, &substream))
1071:Src/pb_decode.c ****         return false;
1072:Src/pb_decode.c **** 
1073:Src/pb_decode.c ****     status = pb_decode_noinit(&substream, fields, dest_struct);
1074:Src/pb_decode.c **** 
1075:Src/pb_decode.c ****     if (!pb_close_string_substream(stream, &substream))
1076:Src/pb_decode.c ****         return false;
1077:Src/pb_decode.c ****     return status;
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 47


1078:Src/pb_decode.c **** }
1079:Src/pb_decode.c **** 
1080:Src/pb_decode.c **** bool pb_decode_delimited(pb_istream_t *stream, const pb_field_t fields[], void *dest_struct)
1081:Src/pb_decode.c **** {
1082:Src/pb_decode.c ****     pb_istream_t substream;
1083:Src/pb_decode.c ****     bool status;
1084:Src/pb_decode.c ****     
1085:Src/pb_decode.c ****     if (!pb_make_string_substream(stream, &substream))
1086:Src/pb_decode.c ****         return false;
1087:Src/pb_decode.c ****     
1088:Src/pb_decode.c ****     status = pb_decode(&substream, fields, dest_struct);
1089:Src/pb_decode.c **** 
1090:Src/pb_decode.c ****     if (!pb_close_string_substream(stream, &substream))
1091:Src/pb_decode.c ****         return false;
1092:Src/pb_decode.c ****     return status;
1093:Src/pb_decode.c **** }
1094:Src/pb_decode.c **** 
1095:Src/pb_decode.c **** bool pb_decode_nullterminated(pb_istream_t *stream, const pb_field_t fields[], void *dest_struct)
1096:Src/pb_decode.c **** {
1097:Src/pb_decode.c ****     /* This behaviour will be separated in nanopb-0.4.0, see issue #278. */
1098:Src/pb_decode.c ****     return pb_decode(stream, fields, dest_struct);
1099:Src/pb_decode.c **** }
1100:Src/pb_decode.c **** 
1101:Src/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
1102:Src/pb_decode.c **** /* Given an oneof field, if there has already been a field inside this oneof,
1103:Src/pb_decode.c ****  * release it before overwriting with a different one. */
1104:Src/pb_decode.c **** static bool pb_release_union_field(pb_istream_t *stream, pb_field_iter_t *iter)
1105:Src/pb_decode.c **** {
1106:Src/pb_decode.c ****     pb_size_t old_tag = *(pb_size_t*)iter->pSize; /* Previous which_ value */
1107:Src/pb_decode.c ****     pb_size_t new_tag = iter->pos->tag; /* New which_ value */
1108:Src/pb_decode.c **** 
1109:Src/pb_decode.c ****     if (old_tag == 0)
1110:Src/pb_decode.c ****         return true; /* Ok, no old data in union */
1111:Src/pb_decode.c **** 
1112:Src/pb_decode.c ****     if (old_tag == new_tag)
1113:Src/pb_decode.c ****         return true; /* Ok, old data is of same type => merge */
1114:Src/pb_decode.c **** 
1115:Src/pb_decode.c ****     /* Release old data. The find can fail if the message struct contains
1116:Src/pb_decode.c ****      * invalid data. */
1117:Src/pb_decode.c ****     if (!pb_field_iter_find(iter, old_tag))
1118:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid union tag");
1119:Src/pb_decode.c **** 
1120:Src/pb_decode.c ****     pb_release_single_field(iter);
1121:Src/pb_decode.c **** 
1122:Src/pb_decode.c ****     /* Restore iterator to where it should be.
1123:Src/pb_decode.c ****      * This shouldn't fail unless the pb_field_t structure is corrupted. */
1124:Src/pb_decode.c ****     if (!pb_field_iter_find(iter, new_tag))
1125:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "iterator error");
1126:Src/pb_decode.c ****     
1127:Src/pb_decode.c ****     return true;
1128:Src/pb_decode.c **** }
1129:Src/pb_decode.c **** 
1130:Src/pb_decode.c **** static void pb_release_single_field(const pb_field_iter_t *iter)
1131:Src/pb_decode.c **** {
1132:Src/pb_decode.c ****     pb_type_t type;
1133:Src/pb_decode.c ****     type = iter->pos->type;
1134:Src/pb_decode.c **** 
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 48


1135:Src/pb_decode.c ****     if (PB_HTYPE(type) == PB_HTYPE_ONEOF)
1136:Src/pb_decode.c ****     {
1137:Src/pb_decode.c ****         if (*(pb_size_t*)iter->pSize != iter->pos->tag)
1138:Src/pb_decode.c ****             return; /* This is not the current field in the union */
1139:Src/pb_decode.c ****     }
1140:Src/pb_decode.c **** 
1141:Src/pb_decode.c ****     /* Release anything contained inside an extension or submsg.
1142:Src/pb_decode.c ****      * This has to be done even if the submsg itself is statically
1143:Src/pb_decode.c ****      * allocated. */
1144:Src/pb_decode.c ****     if (PB_LTYPE(type) == PB_LTYPE_EXTENSION)
1145:Src/pb_decode.c ****     {
1146:Src/pb_decode.c ****         /* Release fields from all extensions in the linked list */
1147:Src/pb_decode.c ****         pb_extension_t *ext = *(pb_extension_t**)iter->pData;
1148:Src/pb_decode.c ****         while (ext != NULL)
1149:Src/pb_decode.c ****         {
1150:Src/pb_decode.c ****             pb_field_iter_t ext_iter;
1151:Src/pb_decode.c ****             iter_from_extension(&ext_iter, ext);
1152:Src/pb_decode.c ****             pb_release_single_field(&ext_iter);
1153:Src/pb_decode.c ****             ext = ext->next;
1154:Src/pb_decode.c ****         }
1155:Src/pb_decode.c ****     }
1156:Src/pb_decode.c ****     else if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
1157:Src/pb_decode.c ****     {
1158:Src/pb_decode.c ****         /* Release fields in submessage or submsg array */
1159:Src/pb_decode.c ****         void *pItem = iter->pData;
1160:Src/pb_decode.c ****         pb_size_t count = 1;
1161:Src/pb_decode.c ****         
1162:Src/pb_decode.c ****         if (PB_ATYPE(type) == PB_ATYPE_POINTER)
1163:Src/pb_decode.c ****         {
1164:Src/pb_decode.c ****             pItem = *(void**)iter->pData;
1165:Src/pb_decode.c ****         }
1166:Src/pb_decode.c ****         
1167:Src/pb_decode.c ****         if (PB_HTYPE(type) == PB_HTYPE_REPEATED)
1168:Src/pb_decode.c ****         {
1169:Src/pb_decode.c ****             if (PB_ATYPE(type) == PB_ATYPE_STATIC && iter->pSize == iter->pData) {
1170:Src/pb_decode.c ****                 /* No _count field so use size of the array */
1171:Src/pb_decode.c ****                 count = iter->pos->array_size;
1172:Src/pb_decode.c ****             } else {
1173:Src/pb_decode.c ****                 count = *(pb_size_t*)iter->pSize;
1174:Src/pb_decode.c ****             }
1175:Src/pb_decode.c **** 
1176:Src/pb_decode.c ****             if (PB_ATYPE(type) == PB_ATYPE_STATIC && count > iter->pos->array_size)
1177:Src/pb_decode.c ****             {
1178:Src/pb_decode.c ****                 /* Protect against corrupted _count fields */
1179:Src/pb_decode.c ****                 count = iter->pos->array_size;
1180:Src/pb_decode.c ****             }
1181:Src/pb_decode.c ****         }
1182:Src/pb_decode.c ****         
1183:Src/pb_decode.c ****         if (pItem)
1184:Src/pb_decode.c ****         {
1185:Src/pb_decode.c ****             while (count--)
1186:Src/pb_decode.c ****             {
1187:Src/pb_decode.c ****                 pb_release((const pb_field_t*)iter->pos->ptr, pItem);
1188:Src/pb_decode.c ****                 pItem = (char*)pItem + iter->pos->data_size;
1189:Src/pb_decode.c ****             }
1190:Src/pb_decode.c ****         }
1191:Src/pb_decode.c ****     }
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 49


1192:Src/pb_decode.c ****     
1193:Src/pb_decode.c ****     if (PB_ATYPE(type) == PB_ATYPE_POINTER)
1194:Src/pb_decode.c ****     {
1195:Src/pb_decode.c ****         if (PB_HTYPE(type) == PB_HTYPE_REPEATED &&
1196:Src/pb_decode.c ****             (PB_LTYPE(type) == PB_LTYPE_STRING ||
1197:Src/pb_decode.c ****              PB_LTYPE(type) == PB_LTYPE_BYTES))
1198:Src/pb_decode.c ****         {
1199:Src/pb_decode.c ****             /* Release entries in repeated string or bytes array */
1200:Src/pb_decode.c ****             void **pItem = *(void***)iter->pData;
1201:Src/pb_decode.c ****             pb_size_t count = *(pb_size_t*)iter->pSize;
1202:Src/pb_decode.c ****             while (count--)
1203:Src/pb_decode.c ****             {
1204:Src/pb_decode.c ****                 pb_free(*pItem);
1205:Src/pb_decode.c ****                 *pItem++ = NULL;
1206:Src/pb_decode.c ****             }
1207:Src/pb_decode.c ****         }
1208:Src/pb_decode.c ****         
1209:Src/pb_decode.c ****         if (PB_HTYPE(type) == PB_HTYPE_REPEATED)
1210:Src/pb_decode.c ****         {
1211:Src/pb_decode.c ****             /* We are going to release the array, so set the size to 0 */
1212:Src/pb_decode.c ****             *(pb_size_t*)iter->pSize = 0;
1213:Src/pb_decode.c ****         }
1214:Src/pb_decode.c ****         
1215:Src/pb_decode.c ****         /* Release main item */
1216:Src/pb_decode.c ****         pb_free(*(void**)iter->pData);
1217:Src/pb_decode.c ****         *(void**)iter->pData = NULL;
1218:Src/pb_decode.c ****     }
1219:Src/pb_decode.c **** }
1220:Src/pb_decode.c **** 
1221:Src/pb_decode.c **** void pb_release(const pb_field_t fields[], void *dest_struct)
1222:Src/pb_decode.c **** {
1223:Src/pb_decode.c ****     pb_field_iter_t iter;
1224:Src/pb_decode.c ****     
1225:Src/pb_decode.c ****     if (!dest_struct)
1226:Src/pb_decode.c ****         return; /* Ignore NULL pointers, similar to free() */
1227:Src/pb_decode.c **** 
1228:Src/pb_decode.c ****     if (!pb_field_iter_begin(&iter, fields, dest_struct))
1229:Src/pb_decode.c ****         return; /* Empty message type */
1230:Src/pb_decode.c ****     
1231:Src/pb_decode.c ****     do
1232:Src/pb_decode.c ****     {
1233:Src/pb_decode.c ****         pb_release_single_field(&iter);
1234:Src/pb_decode.c ****     } while (pb_field_iter_next(&iter));
1235:Src/pb_decode.c **** }
1236:Src/pb_decode.c **** #endif
1237:Src/pb_decode.c **** 
1238:Src/pb_decode.c **** /* Field decoders */
1239:Src/pb_decode.c **** 
1240:Src/pb_decode.c **** bool pb_decode_svarint(pb_istream_t *stream, pb_int64_t *dest)
1241:Src/pb_decode.c **** {
1242:Src/pb_decode.c ****     pb_uint64_t value;
1243:Src/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
1244:Src/pb_decode.c ****         return false;
1245:Src/pb_decode.c ****     
1246:Src/pb_decode.c ****     if (value & 1)
1247:Src/pb_decode.c ****         *dest = (pb_int64_t)(~(value >> 1));
1248:Src/pb_decode.c ****     else
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 50


1249:Src/pb_decode.c ****         *dest = (pb_int64_t)(value >> 1);
1250:Src/pb_decode.c ****     
1251:Src/pb_decode.c ****     return true;
1252:Src/pb_decode.c **** }
1253:Src/pb_decode.c **** 
1254:Src/pb_decode.c **** bool pb_decode_fixed32(pb_istream_t *stream, void *dest)
1255:Src/pb_decode.c **** {
1256:Src/pb_decode.c ****     pb_byte_t bytes[4];
1257:Src/pb_decode.c **** 
1258:Src/pb_decode.c ****     if (!pb_read(stream, bytes, 4))
1259:Src/pb_decode.c ****         return false;
1260:Src/pb_decode.c ****     
1261:Src/pb_decode.c ****     *(uint32_t*)dest = ((uint32_t)bytes[0] << 0) |
1262:Src/pb_decode.c ****                        ((uint32_t)bytes[1] << 8) |
1263:Src/pb_decode.c ****                        ((uint32_t)bytes[2] << 16) |
1264:Src/pb_decode.c ****                        ((uint32_t)bytes[3] << 24);
1265:Src/pb_decode.c ****     return true;
1266:Src/pb_decode.c **** }
1267:Src/pb_decode.c **** 
1268:Src/pb_decode.c **** #ifndef PB_WITHOUT_64BIT
1269:Src/pb_decode.c **** bool pb_decode_fixed64(pb_istream_t *stream, void *dest)
1270:Src/pb_decode.c **** {
1271:Src/pb_decode.c ****     pb_byte_t bytes[8];
1272:Src/pb_decode.c **** 
1273:Src/pb_decode.c ****     if (!pb_read(stream, bytes, 8))
1274:Src/pb_decode.c ****         return false;
1275:Src/pb_decode.c ****     
1276:Src/pb_decode.c ****     *(uint64_t*)dest = ((uint64_t)bytes[0] << 0) |
1277:Src/pb_decode.c ****                        ((uint64_t)bytes[1] << 8) |
1278:Src/pb_decode.c ****                        ((uint64_t)bytes[2] << 16) |
1279:Src/pb_decode.c ****                        ((uint64_t)bytes[3] << 24) |
1280:Src/pb_decode.c ****                        ((uint64_t)bytes[4] << 32) |
1281:Src/pb_decode.c ****                        ((uint64_t)bytes[5] << 40) |
1282:Src/pb_decode.c ****                        ((uint64_t)bytes[6] << 48) |
1283:Src/pb_decode.c ****                        ((uint64_t)bytes[7] << 56);
1284:Src/pb_decode.c ****     
1285:Src/pb_decode.c ****     return true;
1286:Src/pb_decode.c **** }
1287:Src/pb_decode.c **** #endif
1288:Src/pb_decode.c **** 
1289:Src/pb_decode.c **** static bool checkreturn pb_dec_varint(pb_istream_t *stream, const pb_field_t *field, void *dest)
1290:Src/pb_decode.c **** {
1291:Src/pb_decode.c ****     pb_uint64_t value;
1292:Src/pb_decode.c ****     pb_int64_t svalue;
1293:Src/pb_decode.c ****     pb_int64_t clamped;
1294:Src/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
1295:Src/pb_decode.c ****         return false;
1296:Src/pb_decode.c ****     
1297:Src/pb_decode.c ****     /* See issue 97: Google's C++ protobuf allows negative varint values to
1298:Src/pb_decode.c ****      * be cast as int32_t, instead of the int64_t that should be used when
1299:Src/pb_decode.c ****      * encoding. Previous nanopb versions had a bug in encoding. In order to
1300:Src/pb_decode.c ****      * not break decoding of such messages, we cast <=32 bit fields to
1301:Src/pb_decode.c ****      * int32_t first to get the sign correct.
1302:Src/pb_decode.c ****      */
1303:Src/pb_decode.c ****     if (field->data_size == sizeof(pb_int64_t))
1304:Src/pb_decode.c ****         svalue = (pb_int64_t)value;
1305:Src/pb_decode.c ****     else
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 51


1306:Src/pb_decode.c ****         svalue = (int32_t)value;
1307:Src/pb_decode.c **** 
1308:Src/pb_decode.c ****     /* Cast to the proper field size, while checking for overflows */
1309:Src/pb_decode.c ****     if (field->data_size == sizeof(pb_int64_t))
1310:Src/pb_decode.c ****         clamped = *(pb_int64_t*)dest = svalue;
1311:Src/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
1312:Src/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)svalue;
1313:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
1314:Src/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)svalue;
1315:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
1316:Src/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)svalue;
1317:Src/pb_decode.c ****     else
1318:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid data_size");
1319:Src/pb_decode.c **** 
1320:Src/pb_decode.c ****     if (clamped != svalue)
1321:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
1322:Src/pb_decode.c ****     
1323:Src/pb_decode.c ****     return true;
1324:Src/pb_decode.c **** }
1325:Src/pb_decode.c **** 
1326:Src/pb_decode.c **** static bool checkreturn pb_dec_uvarint(pb_istream_t *stream, const pb_field_t *field, void *dest)
1327:Src/pb_decode.c **** {
1328:Src/pb_decode.c ****     pb_uint64_t value, clamped;
1329:Src/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
1330:Src/pb_decode.c ****         return false;
1331:Src/pb_decode.c ****     
1332:Src/pb_decode.c ****     /* Cast to the proper field size, while checking for overflows */
1333:Src/pb_decode.c ****     if (field->data_size == sizeof(pb_uint64_t))
1334:Src/pb_decode.c ****         clamped = *(pb_uint64_t*)dest = value;
1335:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint32_t))
1336:Src/pb_decode.c ****         clamped = *(uint32_t*)dest = (uint32_t)value;
1337:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
1338:Src/pb_decode.c ****         clamped = *(uint_least16_t*)dest = (uint_least16_t)value;
1339:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
1340:Src/pb_decode.c ****         clamped = *(uint_least8_t*)dest = (uint_least8_t)value;
1341:Src/pb_decode.c ****     else
1342:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid data_size");
1343:Src/pb_decode.c ****     
1344:Src/pb_decode.c ****     if (clamped != value)
1345:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
1346:Src/pb_decode.c **** 
1347:Src/pb_decode.c ****     return true;
1348:Src/pb_decode.c **** }
1349:Src/pb_decode.c **** 
1350:Src/pb_decode.c **** static bool checkreturn pb_dec_svarint(pb_istream_t *stream, const pb_field_t *field, void *dest)
1351:Src/pb_decode.c **** {
1352:Src/pb_decode.c ****     pb_int64_t value, clamped;
1353:Src/pb_decode.c ****     if (!pb_decode_svarint(stream, &value))
1354:Src/pb_decode.c ****         return false;
1355:Src/pb_decode.c ****     
1356:Src/pb_decode.c ****     /* Cast to the proper field size, while checking for overflows */
1357:Src/pb_decode.c ****     if (field->data_size == sizeof(pb_int64_t))
1358:Src/pb_decode.c ****         clamped = *(pb_int64_t*)dest = value;
1359:Src/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
1360:Src/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)value;
1361:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
1362:Src/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)value;
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 52


1363:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
1364:Src/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)value;
1365:Src/pb_decode.c ****     else
1366:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid data_size");
1367:Src/pb_decode.c **** 
1368:Src/pb_decode.c ****     if (clamped != value)
1369:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
1370:Src/pb_decode.c ****     
1371:Src/pb_decode.c ****     return true;
1372:Src/pb_decode.c **** }
1373:Src/pb_decode.c **** 
1374:Src/pb_decode.c **** static bool checkreturn pb_dec_fixed32(pb_istream_t *stream, const pb_field_t *field, void *dest)
1375:Src/pb_decode.c **** {
1376:Src/pb_decode.c ****     PB_UNUSED(field);
1377:Src/pb_decode.c ****     return pb_decode_fixed32(stream, dest);
1378:Src/pb_decode.c **** }
1379:Src/pb_decode.c **** 
1380:Src/pb_decode.c **** static bool checkreturn pb_dec_fixed64(pb_istream_t *stream, const pb_field_t *field, void *dest)
1381:Src/pb_decode.c **** {
1382:Src/pb_decode.c ****     PB_UNUSED(field);
1383:Src/pb_decode.c **** #ifndef PB_WITHOUT_64BIT
1384:Src/pb_decode.c ****     return pb_decode_fixed64(stream, dest);
1385:Src/pb_decode.c **** #else
1386:Src/pb_decode.c ****     PB_UNUSED(dest);
1387:Src/pb_decode.c ****     PB_RETURN_ERROR(stream, "no 64bit support");
1388:Src/pb_decode.c **** #endif
1389:Src/pb_decode.c **** }
1390:Src/pb_decode.c **** 
1391:Src/pb_decode.c **** static bool checkreturn pb_dec_bytes(pb_istream_t *stream, const pb_field_t *field, void *dest)
1392:Src/pb_decode.c **** {
1393:Src/pb_decode.c ****     uint32_t size;
1394:Src/pb_decode.c ****     size_t alloc_size;
1395:Src/pb_decode.c ****     pb_bytes_array_t *bdest;
1396:Src/pb_decode.c ****     
1397:Src/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
1398:Src/pb_decode.c ****         return false;
1399:Src/pb_decode.c ****     
1400:Src/pb_decode.c ****     if (size > PB_SIZE_MAX)
1401:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "bytes overflow");
1402:Src/pb_decode.c ****     
1403:Src/pb_decode.c ****     alloc_size = PB_BYTES_ARRAY_T_ALLOCSIZE(size);
1404:Src/pb_decode.c ****     if (size > alloc_size)
1405:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
1406:Src/pb_decode.c ****     
1407:Src/pb_decode.c ****     if (PB_ATYPE(field->type) == PB_ATYPE_POINTER)
1408:Src/pb_decode.c ****     {
1409:Src/pb_decode.c **** #ifndef PB_ENABLE_MALLOC
1410:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "no malloc support");
1411:Src/pb_decode.c **** #else
1412:Src/pb_decode.c ****         if (!allocate_field(stream, dest, alloc_size, 1))
1413:Src/pb_decode.c ****             return false;
1414:Src/pb_decode.c ****         bdest = *(pb_bytes_array_t**)dest;
1415:Src/pb_decode.c **** #endif
1416:Src/pb_decode.c ****     }
1417:Src/pb_decode.c ****     else
1418:Src/pb_decode.c ****     {
1419:Src/pb_decode.c ****         if (alloc_size > field->data_size)
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 53


1420:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "bytes overflow");
1421:Src/pb_decode.c ****         bdest = (pb_bytes_array_t*)dest;
1422:Src/pb_decode.c ****     }
1423:Src/pb_decode.c **** 
1424:Src/pb_decode.c ****     bdest->size = (pb_size_t)size;
1425:Src/pb_decode.c ****     return pb_read(stream, bdest->bytes, size);
1426:Src/pb_decode.c **** }
1427:Src/pb_decode.c **** 
1428:Src/pb_decode.c **** static bool checkreturn pb_dec_string(pb_istream_t *stream, const pb_field_t *field, void *dest)
1429:Src/pb_decode.c **** {
1430:Src/pb_decode.c ****     uint32_t size;
1431:Src/pb_decode.c ****     size_t alloc_size;
1432:Src/pb_decode.c ****     bool status;
1433:Src/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
1434:Src/pb_decode.c ****         return false;
1435:Src/pb_decode.c ****     
1436:Src/pb_decode.c ****     /* Space for null terminator */
1437:Src/pb_decode.c ****     alloc_size = size + 1;
1438:Src/pb_decode.c ****     
1439:Src/pb_decode.c ****     if (alloc_size < size)
1440:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
1441:Src/pb_decode.c ****     
1442:Src/pb_decode.c ****     if (PB_ATYPE(field->type) == PB_ATYPE_POINTER)
1443:Src/pb_decode.c ****     {
1444:Src/pb_decode.c **** #ifndef PB_ENABLE_MALLOC
1445:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "no malloc support");
1446:Src/pb_decode.c **** #else
1447:Src/pb_decode.c ****         if (!allocate_field(stream, dest, alloc_size, 1))
1448:Src/pb_decode.c ****             return false;
1449:Src/pb_decode.c ****         dest = *(void**)dest;
1450:Src/pb_decode.c **** #endif
1451:Src/pb_decode.c ****     }
1452:Src/pb_decode.c ****     else
1453:Src/pb_decode.c ****     {
1454:Src/pb_decode.c ****         if (alloc_size > field->data_size)
1455:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "string overflow");
1456:Src/pb_decode.c ****     }
1457:Src/pb_decode.c ****     
1458:Src/pb_decode.c ****     status = pb_read(stream, (pb_byte_t*)dest, size);
1459:Src/pb_decode.c ****     *((pb_byte_t*)dest + size) = 0;
1460:Src/pb_decode.c ****     return status;
1461:Src/pb_decode.c **** }
1462:Src/pb_decode.c **** 
1463:Src/pb_decode.c **** static bool checkreturn pb_dec_submessage(pb_istream_t *stream, const pb_field_t *field, void *dest
1464:Src/pb_decode.c **** {
1465:Src/pb_decode.c ****     bool status;
1466:Src/pb_decode.c ****     pb_istream_t substream;
1467:Src/pb_decode.c ****     const pb_field_t* submsg_fields = (const pb_field_t*)field->ptr;
1468:Src/pb_decode.c ****     
1469:Src/pb_decode.c ****     if (!pb_make_string_substream(stream, &substream))
1470:Src/pb_decode.c ****         return false;
1471:Src/pb_decode.c ****     
1472:Src/pb_decode.c ****     if (field->ptr == NULL)
1473:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid field descriptor");
1474:Src/pb_decode.c ****     
1475:Src/pb_decode.c ****     /* New array entries need to be initialized, while required and optional
1476:Src/pb_decode.c ****      * submessages have already been initialized in the top-level pb_decode. */
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 54


1477:Src/pb_decode.c ****     if (PB_HTYPE(field->type) == PB_HTYPE_REPEATED)
1478:Src/pb_decode.c ****         status = pb_decode(&substream, submsg_fields, dest);
1479:Src/pb_decode.c ****     else
1480:Src/pb_decode.c ****         status = pb_decode_noinit(&substream, submsg_fields, dest);
1481:Src/pb_decode.c ****     
1482:Src/pb_decode.c ****     if (!pb_close_string_substream(stream, &substream))
1483:Src/pb_decode.c ****         return false;
1484:Src/pb_decode.c ****     return status;
1485:Src/pb_decode.c **** }
1486:Src/pb_decode.c **** 
1487:Src/pb_decode.c **** static bool checkreturn pb_dec_fixed_length_bytes(pb_istream_t *stream, const pb_field_t *field, vo
1488:Src/pb_decode.c **** {
 1356              		.loc 1 1488 1 is_stmt 1 view -0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 8
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 1360              		.loc 1 1488 1 is_stmt 0 view .LVU354
 1361 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1362              	.LCFI33:
 1363              		.cfi_def_cfa_offset 20
 1364              		.cfi_offset 4, -20
 1365              		.cfi_offset 5, -16
 1366              		.cfi_offset 6, -12
 1367              		.cfi_offset 7, -8
 1368              		.cfi_offset 14, -4
 1369 0002 83B0     		sub	sp, sp, #12
 1370              	.LCFI34:
 1371              		.cfi_def_cfa_offset 32
 1372 0004 0546     		mov	r5, r0
 1373 0006 0E46     		mov	r6, r1
 1374 0008 1746     		mov	r7, r2
1489:Src/pb_decode.c ****     uint32_t size;
 1375              		.loc 1 1489 5 is_stmt 1 view .LVU355
1490:Src/pb_decode.c **** 
1491:Src/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
 1376              		.loc 1 1491 5 view .LVU356
 1377              		.loc 1 1491 10 is_stmt 0 view .LVU357
 1378 000a 01A9     		add	r1, sp, #4
 1379              	.LVL123:
 1380              		.loc 1 1491 10 view .LVU358
 1381 000c FFF7FEFF 		bl	pb_decode_varint32
 1382              	.LVL124:
 1383              		.loc 1 1491 8 view .LVU359
 1384 0010 0446     		mov	r4, r0
 1385 0012 60B1     		cbz	r0, .L129
1492:Src/pb_decode.c ****         return false;
1493:Src/pb_decode.c **** 
1494:Src/pb_decode.c ****     if (size > PB_SIZE_MAX)
 1386              		.loc 1 1494 5 is_stmt 1 view .LVU360
 1387              		.loc 1 1494 14 is_stmt 0 view .LVU361
 1388 0014 019B     		ldr	r3, [sp, #4]
 1389              		.loc 1 1494 8 view .LVU362
 1390 0016 B3F5803F 		cmp	r3, #65536
 1391 001a 0BD2     		bcs	.L136
1495:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "bytes overflow");
1496:Src/pb_decode.c **** 
1497:Src/pb_decode.c ****     if (size == 0)
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 55


 1392              		.loc 1 1497 5 is_stmt 1 view .LVU363
 1393              		.loc 1 1497 8 is_stmt 0 view .LVU364
 1394 001c 8BB1     		cbz	r3, .L137
1498:Src/pb_decode.c ****     {
1499:Src/pb_decode.c ****         /* As a special case, treat empty bytes string as all zeros for fixed_length_bytes. */
1500:Src/pb_decode.c ****         memset(dest, 0, field->data_size);
1501:Src/pb_decode.c ****         return true;
1502:Src/pb_decode.c ****     }
1503:Src/pb_decode.c **** 
1504:Src/pb_decode.c ****     if (size != field->data_size)
 1395              		.loc 1 1504 5 is_stmt 1 view .LVU365
 1396              		.loc 1 1504 22 is_stmt 0 view .LVU366
 1397 001e B6F80720 		ldrh	r2, [r6, #7]	@ unaligned
 1398              		.loc 1 1504 8 view .LVU367
 1399 0022 9342     		cmp	r3, r2
 1400 0024 16D0     		beq	.L133
1505:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "incorrect fixed length bytes size");
 1401              		.loc 1 1505 9 is_stmt 1 view .LVU368
 1402 0026 EB68     		ldr	r3, [r5, #12]
 1403 0028 93B1     		cbz	r3, .L138
 1404              	.L134:
 1405              		.loc 1 1505 9 is_stmt 0 discriminator 4 view .LVU369
 1406 002a EB60     		str	r3, [r5, #12]
 1407 002c 0024     		movs	r4, #0
 1408              	.L129:
1506:Src/pb_decode.c **** 
1507:Src/pb_decode.c ****     return pb_read(stream, (pb_byte_t*)dest, field->data_size);
1508:Src/pb_decode.c **** }
 1409              		.loc 1 1508 1 view .LVU370
 1410 002e 2046     		mov	r0, r4
 1411 0030 03B0     		add	sp, sp, #12
 1412              	.LCFI35:
 1413              		.cfi_remember_state
 1414              		.cfi_def_cfa_offset 20
 1415              		@ sp needed
 1416 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 1417              	.LVL125:
 1418              	.L136:
 1419              	.LCFI36:
 1420              		.cfi_restore_state
1495:Src/pb_decode.c **** 
 1421              		.loc 1 1495 9 is_stmt 1 view .LVU371
 1422 0034 EB68     		ldr	r3, [r5, #12]
 1423 0036 13B1     		cbz	r3, .L139
 1424              	.L131:
1495:Src/pb_decode.c **** 
 1425              		.loc 1 1495 9 is_stmt 0 discriminator 4 view .LVU372
 1426 0038 EB60     		str	r3, [r5, #12]
 1427 003a 0024     		movs	r4, #0
 1428 003c F7E7     		b	.L129
 1429              	.L139:
1495:Src/pb_decode.c **** 
 1430              		.loc 1 1495 9 view .LVU373
 1431 003e 084B     		ldr	r3, .L140
 1432 0040 FAE7     		b	.L131
 1433              	.L137:
1500:Src/pb_decode.c ****         return true;
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 56


 1434              		.loc 1 1500 9 is_stmt 1 view .LVU374
 1435 0042 B6F80720 		ldrh	r2, [r6, #7]	@ unaligned
 1436 0046 0021     		movs	r1, #0
 1437 0048 3846     		mov	r0, r7
 1438 004a FFF7FEFF 		bl	memset
 1439              	.LVL126:
1501:Src/pb_decode.c ****     }
 1440              		.loc 1 1501 9 view .LVU375
1501:Src/pb_decode.c ****     }
 1441              		.loc 1 1501 16 is_stmt 0 view .LVU376
 1442 004e EEE7     		b	.L129
 1443              	.L138:
1505:Src/pb_decode.c **** 
 1444              		.loc 1 1505 9 view .LVU377
 1445 0050 044B     		ldr	r3, .L140+4
 1446 0052 EAE7     		b	.L134
 1447              	.L133:
1507:Src/pb_decode.c **** }
 1448              		.loc 1 1507 5 is_stmt 1 view .LVU378
1507:Src/pb_decode.c **** }
 1449              		.loc 1 1507 12 is_stmt 0 view .LVU379
 1450 0054 3946     		mov	r1, r7
 1451 0056 2846     		mov	r0, r5
 1452 0058 FFF7FEFF 		bl	pb_read
 1453              	.LVL127:
 1454 005c 0446     		mov	r4, r0
 1455 005e E6E7     		b	.L129
 1456              	.L141:
 1457              		.align	2
 1458              	.L140:
 1459 0060 00000000 		.word	.LC5
 1460 0064 10000000 		.word	.LC6
 1461              		.cfi_endproc
 1462              	.LFE40:
 1464              		.section	.text.pb_dec_string,"ax",%progbits
 1465              		.align	1
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1469              		.fpu fpv4-sp-d16
 1471              	pb_dec_string:
 1472              	.LVL128:
 1473              	.LFB38:
1429:Src/pb_decode.c ****     uint32_t size;
 1474              		.loc 1 1429 1 is_stmt 1 view -0
 1475              		.cfi_startproc
 1476              		@ args = 0, pretend = 0, frame = 8
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
1429:Src/pb_decode.c ****     uint32_t size;
 1478              		.loc 1 1429 1 is_stmt 0 view .LVU381
 1479 0000 70B5     		push	{r4, r5, r6, lr}
 1480              	.LCFI37:
 1481              		.cfi_def_cfa_offset 16
 1482              		.cfi_offset 4, -16
 1483              		.cfi_offset 5, -12
 1484              		.cfi_offset 6, -8
 1485              		.cfi_offset 14, -4
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 57


 1486 0002 82B0     		sub	sp, sp, #8
 1487              	.LCFI38:
 1488              		.cfi_def_cfa_offset 24
 1489 0004 0446     		mov	r4, r0
 1490 0006 0D46     		mov	r5, r1
 1491 0008 1646     		mov	r6, r2
1430:Src/pb_decode.c ****     size_t alloc_size;
 1492              		.loc 1 1430 5 is_stmt 1 view .LVU382
1431:Src/pb_decode.c ****     bool status;
 1493              		.loc 1 1431 5 view .LVU383
1432:Src/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
 1494              		.loc 1 1432 5 view .LVU384
1433:Src/pb_decode.c ****         return false;
 1495              		.loc 1 1433 5 view .LVU385
1433:Src/pb_decode.c ****         return false;
 1496              		.loc 1 1433 10 is_stmt 0 view .LVU386
 1497 000a 01A9     		add	r1, sp, #4
 1498              	.LVL129:
1433:Src/pb_decode.c ****         return false;
 1499              		.loc 1 1433 10 view .LVU387
 1500 000c FFF7FEFF 		bl	pb_decode_varint32
 1501              	.LVL130:
1433:Src/pb_decode.c ****         return false;
 1502              		.loc 1 1433 8 view .LVU388
 1503 0010 0346     		mov	r3, r0
 1504 0012 A0B1     		cbz	r0, .L143
1437:Src/pb_decode.c ****     
 1505              		.loc 1 1437 5 is_stmt 1 view .LVU389
1437:Src/pb_decode.c ****     
 1506              		.loc 1 1437 23 is_stmt 0 view .LVU390
 1507 0014 019A     		ldr	r2, [sp, #4]
 1508              	.LVL131:
1439:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1509              		.loc 1 1439 5 is_stmt 1 view .LVU391
1439:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1510              		.loc 1 1439 8 is_stmt 0 view .LVU392
 1511 0016 511C     		adds	r1, r2, #1
 1512              	.LVL132:
1439:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1513              		.loc 1 1439 8 view .LVU393
 1514 0018 0DD2     		bcs	.L151
1442:Src/pb_decode.c ****     {
 1515              		.loc 1 1442 5 is_stmt 1 view .LVU394
1442:Src/pb_decode.c ****     {
 1516              		.loc 1 1442 9 is_stmt 0 view .LVU395
 1517 001a AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
1442:Src/pb_decode.c ****     {
 1518              		.loc 1 1442 8 view .LVU396
 1519 001c 03F0C003 		and	r3, r3, #192
 1520 0020 802B     		cmp	r3, #128
 1521 0022 11D0     		beq	.L152
1454:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "string overflow");
 1522              		.loc 1 1454 9 is_stmt 1 view .LVU397
1454:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "string overflow");
 1523              		.loc 1 1454 31 is_stmt 0 view .LVU398
 1524 0024 B5F80730 		ldrh	r3, [r5, #7]	@ unaligned
1454:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "string overflow");
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 58


 1525              		.loc 1 1454 12 view .LVU399
 1526 0028 8B42     		cmp	r3, r1
 1527 002a 16D2     		bcs	.L148
1455:Src/pb_decode.c ****     }
 1528              		.loc 1 1455 13 is_stmt 1 view .LVU400
 1529 002c E368     		ldr	r3, [r4, #12]
 1530 002e 93B1     		cbz	r3, .L153
 1531              	.L149:
1455:Src/pb_decode.c ****     }
 1532              		.loc 1 1455 13 is_stmt 0 discriminator 4 view .LVU401
 1533 0030 E360     		str	r3, [r4, #12]
 1534 0032 0023     		movs	r3, #0
 1535 0034 03E0     		b	.L143
 1536              	.L151:
1440:Src/pb_decode.c ****     
 1537              		.loc 1 1440 9 is_stmt 1 view .LVU402
 1538 0036 E368     		ldr	r3, [r4, #12]
 1539 0038 23B1     		cbz	r3, .L154
 1540              	.L145:
1440:Src/pb_decode.c ****     
 1541              		.loc 1 1440 9 is_stmt 0 discriminator 4 view .LVU403
 1542 003a E360     		str	r3, [r4, #12]
 1543 003c 0023     		movs	r3, #0
 1544              	.LVL133:
 1545              	.L143:
1461:Src/pb_decode.c **** 
 1546              		.loc 1 1461 1 view .LVU404
 1547 003e 1846     		mov	r0, r3
 1548 0040 02B0     		add	sp, sp, #8
 1549              	.LCFI39:
 1550              		.cfi_remember_state
 1551              		.cfi_def_cfa_offset 16
 1552              		@ sp needed
 1553 0042 70BD     		pop	{r4, r5, r6, pc}
 1554              	.LVL134:
 1555              	.L154:
 1556              	.LCFI40:
 1557              		.cfi_restore_state
1440:Src/pb_decode.c ****     
 1558              		.loc 1 1440 9 view .LVU405
 1559 0044 094B     		ldr	r3, .L156
 1560 0046 F8E7     		b	.L145
 1561              	.L152:
1445:Src/pb_decode.c **** #else
 1562              		.loc 1 1445 9 is_stmt 1 view .LVU406
 1563 0048 E368     		ldr	r3, [r4, #12]
 1564 004a 13B1     		cbz	r3, .L155
 1565              	.L147:
1445:Src/pb_decode.c **** #else
 1566              		.loc 1 1445 9 is_stmt 0 discriminator 4 view .LVU407
 1567 004c E360     		str	r3, [r4, #12]
 1568 004e 0023     		movs	r3, #0
 1569 0050 F5E7     		b	.L143
 1570              	.L155:
1445:Src/pb_decode.c **** #else
 1571              		.loc 1 1445 9 view .LVU408
 1572 0052 074B     		ldr	r3, .L156+4
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 59


 1573 0054 FAE7     		b	.L147
 1574              	.L153:
1455:Src/pb_decode.c ****     }
 1575              		.loc 1 1455 13 view .LVU409
 1576 0056 074B     		ldr	r3, .L156+8
 1577 0058 EAE7     		b	.L149
 1578              	.L148:
1458:Src/pb_decode.c ****     *((pb_byte_t*)dest + size) = 0;
 1579              		.loc 1 1458 5 is_stmt 1 view .LVU410
1458:Src/pb_decode.c ****     *((pb_byte_t*)dest + size) = 0;
 1580              		.loc 1 1458 14 is_stmt 0 view .LVU411
 1581 005a 3146     		mov	r1, r6
 1582              	.LVL135:
1458:Src/pb_decode.c ****     *((pb_byte_t*)dest + size) = 0;
 1583              		.loc 1 1458 14 view .LVU412
 1584 005c 2046     		mov	r0, r4
 1585 005e FFF7FEFF 		bl	pb_read
 1586              	.LVL136:
1458:Src/pb_decode.c ****     *((pb_byte_t*)dest + size) = 0;
 1587              		.loc 1 1458 14 view .LVU413
 1588 0062 0346     		mov	r3, r0
 1589              	.LVL137:
1459:Src/pb_decode.c ****     return status;
 1590              		.loc 1 1459 5 is_stmt 1 view .LVU414
1459:Src/pb_decode.c ****     return status;
 1591              		.loc 1 1459 32 is_stmt 0 view .LVU415
 1592 0064 019A     		ldr	r2, [sp, #4]
 1593 0066 0021     		movs	r1, #0
 1594 0068 B154     		strb	r1, [r6, r2]
1460:Src/pb_decode.c **** }
 1595              		.loc 1 1460 5 is_stmt 1 view .LVU416
1460:Src/pb_decode.c **** }
 1596              		.loc 1 1460 12 is_stmt 0 view .LVU417
 1597 006a E8E7     		b	.L143
 1598              	.L157:
 1599              		.align	2
 1600              	.L156:
 1601 006c 00000000 		.word	.LC7
 1602 0070 00000000 		.word	.LC3
 1603 0074 10000000 		.word	.LC8
 1604              		.cfi_endproc
 1605              	.LFE38:
 1607              		.section	.text.pb_dec_bytes,"ax",%progbits
 1608              		.align	1
 1609              		.syntax unified
 1610              		.thumb
 1611              		.thumb_func
 1612              		.fpu fpv4-sp-d16
 1614              	pb_dec_bytes:
 1615              	.LVL138:
 1616              	.LFB37:
1392:Src/pb_decode.c ****     uint32_t size;
 1617              		.loc 1 1392 1 is_stmt 1 view -0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 8
 1620              		@ frame_needed = 0, uses_anonymous_args = 0
1392:Src/pb_decode.c ****     uint32_t size;
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 60


 1621              		.loc 1 1392 1 is_stmt 0 view .LVU419
 1622 0000 70B5     		push	{r4, r5, r6, lr}
 1623              	.LCFI41:
 1624              		.cfi_def_cfa_offset 16
 1625              		.cfi_offset 4, -16
 1626              		.cfi_offset 5, -12
 1627              		.cfi_offset 6, -8
 1628              		.cfi_offset 14, -4
 1629 0002 82B0     		sub	sp, sp, #8
 1630              	.LCFI42:
 1631              		.cfi_def_cfa_offset 24
 1632 0004 0446     		mov	r4, r0
 1633 0006 0E46     		mov	r6, r1
 1634 0008 1546     		mov	r5, r2
1393:Src/pb_decode.c ****     size_t alloc_size;
 1635              		.loc 1 1393 5 is_stmt 1 view .LVU420
1394:Src/pb_decode.c ****     pb_bytes_array_t *bdest;
 1636              		.loc 1 1394 5 view .LVU421
1395:Src/pb_decode.c ****     
 1637              		.loc 1 1395 5 view .LVU422
1397:Src/pb_decode.c ****         return false;
 1638              		.loc 1 1397 5 view .LVU423
1397:Src/pb_decode.c ****         return false;
 1639              		.loc 1 1397 10 is_stmt 0 view .LVU424
 1640 000a 01A9     		add	r1, sp, #4
 1641              	.LVL139:
1397:Src/pb_decode.c ****         return false;
 1642              		.loc 1 1397 10 view .LVU425
 1643 000c FFF7FEFF 		bl	pb_decode_varint32
 1644              	.LVL140:
1397:Src/pb_decode.c ****         return false;
 1645              		.loc 1 1397 8 view .LVU426
 1646 0010 0346     		mov	r3, r0
 1647 0012 B8B1     		cbz	r0, .L159
1400:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "bytes overflow");
 1648              		.loc 1 1400 5 is_stmt 1 view .LVU427
1400:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "bytes overflow");
 1649              		.loc 1 1400 14 is_stmt 0 view .LVU428
 1650 0014 019B     		ldr	r3, [sp, #4]
1400:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "bytes overflow");
 1651              		.loc 1 1400 8 view .LVU429
 1652 0016 B3F5803F 		cmp	r3, #65536
 1653 001a 0FD2     		bcs	.L169
1403:Src/pb_decode.c ****     if (size > alloc_size)
 1654              		.loc 1 1403 5 is_stmt 1 view .LVU430
 1655              	.LVL141:
1404:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1656              		.loc 1 1404 5 view .LVU431
1404:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1657              		.loc 1 1404 8 is_stmt 0 view .LVU432
 1658 001c 991C     		adds	r1, r3, #2
 1659              	.LVL142:
1404:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "size too large");
 1660              		.loc 1 1404 8 view .LVU433
 1661 001e 16D2     		bcs	.L170
1407:Src/pb_decode.c ****     {
 1662              		.loc 1 1407 5 is_stmt 1 view .LVU434
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 61


1407:Src/pb_decode.c ****     {
 1663              		.loc 1 1407 9 is_stmt 0 view .LVU435
 1664 0020 B278     		ldrb	r2, [r6, #2]	@ zero_extendqisi2
1407:Src/pb_decode.c ****     {
 1665              		.loc 1 1407 8 view .LVU436
 1666 0022 02F0C002 		and	r2, r2, #192
 1667 0026 802A     		cmp	r2, #128
 1668 0028 18D0     		beq	.L171
1419:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "bytes overflow");
 1669              		.loc 1 1419 9 is_stmt 1 view .LVU437
1419:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "bytes overflow");
 1670              		.loc 1 1419 31 is_stmt 0 view .LVU438
 1671 002a B6F80720 		ldrh	r2, [r6, #7]	@ unaligned
1419:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "bytes overflow");
 1672              		.loc 1 1419 12 view .LVU439
 1673 002e 8A42     		cmp	r2, r1
 1674 0030 1DD2     		bcs	.L166
1420:Src/pb_decode.c ****         bdest = (pb_bytes_array_t*)dest;
 1675              		.loc 1 1420 13 is_stmt 1 view .LVU440
 1676 0032 E368     		ldr	r3, [r4, #12]
 1677 0034 CBB1     		cbz	r3, .L172
 1678              	.L167:
1420:Src/pb_decode.c ****         bdest = (pb_bytes_array_t*)dest;
 1679              		.loc 1 1420 13 is_stmt 0 discriminator 4 view .LVU441
 1680 0036 E360     		str	r3, [r4, #12]
 1681 0038 0023     		movs	r3, #0
 1682 003a 03E0     		b	.L159
 1683              	.LVL143:
 1684              	.L169:
1401:Src/pb_decode.c ****     
 1685              		.loc 1 1401 9 is_stmt 1 view .LVU442
 1686 003c E368     		ldr	r3, [r4, #12]
 1687 003e 23B1     		cbz	r3, .L173
 1688              	.L161:
1401:Src/pb_decode.c ****     
 1689              		.loc 1 1401 9 is_stmt 0 discriminator 4 view .LVU443
 1690 0040 E360     		str	r3, [r4, #12]
 1691 0042 0023     		movs	r3, #0
 1692              	.L159:
1426:Src/pb_decode.c **** 
 1693              		.loc 1 1426 1 view .LVU444
 1694 0044 1846     		mov	r0, r3
 1695 0046 02B0     		add	sp, sp, #8
 1696              	.LCFI43:
 1697              		.cfi_remember_state
 1698              		.cfi_def_cfa_offset 16
 1699              		@ sp needed
 1700 0048 70BD     		pop	{r4, r5, r6, pc}
 1701              	.LVL144:
 1702              	.L173:
 1703              	.LCFI44:
 1704              		.cfi_restore_state
1401:Src/pb_decode.c ****     
 1705              		.loc 1 1401 9 view .LVU445
 1706 004a 0D4B     		ldr	r3, .L176
 1707 004c F8E7     		b	.L161
 1708              	.LVL145:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 62


 1709              	.L170:
1405:Src/pb_decode.c ****     
 1710              		.loc 1 1405 9 is_stmt 1 view .LVU446
 1711 004e E368     		ldr	r3, [r4, #12]
 1712 0050 13B1     		cbz	r3, .L174
 1713              	.L163:
1405:Src/pb_decode.c ****     
 1714              		.loc 1 1405 9 is_stmt 0 discriminator 4 view .LVU447
 1715 0052 E360     		str	r3, [r4, #12]
 1716 0054 0023     		movs	r3, #0
 1717 0056 F5E7     		b	.L159
 1718              	.L174:
1405:Src/pb_decode.c ****     
 1719              		.loc 1 1405 9 view .LVU448
 1720 0058 0A4B     		ldr	r3, .L176+4
 1721 005a FAE7     		b	.L163
 1722              	.L171:
1410:Src/pb_decode.c **** #else
 1723              		.loc 1 1410 9 is_stmt 1 view .LVU449
 1724 005c E368     		ldr	r3, [r4, #12]
 1725 005e 13B1     		cbz	r3, .L175
 1726              	.L165:
1410:Src/pb_decode.c **** #else
 1727              		.loc 1 1410 9 is_stmt 0 discriminator 4 view .LVU450
 1728 0060 E360     		str	r3, [r4, #12]
 1729 0062 0023     		movs	r3, #0
 1730 0064 EEE7     		b	.L159
 1731              	.L175:
1410:Src/pb_decode.c **** #else
 1732              		.loc 1 1410 9 view .LVU451
 1733 0066 084B     		ldr	r3, .L176+8
 1734 0068 FAE7     		b	.L165
 1735              	.L172:
1420:Src/pb_decode.c ****         bdest = (pb_bytes_array_t*)dest;
 1736              		.loc 1 1420 13 view .LVU452
 1737 006a 054B     		ldr	r3, .L176
 1738 006c E3E7     		b	.L167
 1739              	.L166:
1421:Src/pb_decode.c ****     }
 1740              		.loc 1 1421 9 is_stmt 1 view .LVU453
 1741              	.LVL146:
1424:Src/pb_decode.c ****     return pb_read(stream, bdest->bytes, size);
 1742              		.loc 1 1424 5 view .LVU454
1424:Src/pb_decode.c ****     return pb_read(stream, bdest->bytes, size);
 1743              		.loc 1 1424 17 is_stmt 0 view .LVU455
 1744 006e 2946     		mov	r1, r5
 1745              	.LVL147:
1424:Src/pb_decode.c ****     return pb_read(stream, bdest->bytes, size);
 1746              		.loc 1 1424 17 view .LVU456
 1747 0070 21F8023B 		strh	r3, [r1], #2	@ movhi
1425:Src/pb_decode.c **** }
 1748              		.loc 1 1425 5 is_stmt 1 view .LVU457
1425:Src/pb_decode.c **** }
 1749              		.loc 1 1425 12 is_stmt 0 view .LVU458
 1750 0074 019A     		ldr	r2, [sp, #4]
 1751 0076 2046     		mov	r0, r4
 1752 0078 FFF7FEFF 		bl	pb_read
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 63


 1753              	.LVL148:
1425:Src/pb_decode.c **** }
 1754              		.loc 1 1425 12 view .LVU459
 1755 007c 0346     		mov	r3, r0
 1756 007e E1E7     		b	.L159
 1757              	.L177:
 1758              		.align	2
 1759              	.L176:
 1760 0080 00000000 		.word	.LC5
 1761 0084 00000000 		.word	.LC7
 1762 0088 00000000 		.word	.LC3
 1763              		.cfi_endproc
 1764              	.LFE37:
 1766              		.section	.text.pb_decode_varint,"ax",%progbits
 1767              		.align	1
 1768              		.global	pb_decode_varint
 1769              		.syntax unified
 1770              		.thumb
 1771              		.thumb_func
 1772              		.fpu fpv4-sp-d16
 1774              	pb_decode_varint:
 1775              	.LVL149:
 1776              	.LFB6:
 251:Src/pb_decode.c ****     pb_byte_t byte;
 1777              		.loc 1 251 1 is_stmt 1 view -0
 1778              		.cfi_startproc
 1779              		@ args = 0, pretend = 0, frame = 8
 1780              		@ frame_needed = 0, uses_anonymous_args = 0
 251:Src/pb_decode.c ****     pb_byte_t byte;
 1781              		.loc 1 251 1 is_stmt 0 view .LVU461
 1782 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1783              	.LCFI45:
 1784              		.cfi_def_cfa_offset 32
 1785              		.cfi_offset 4, -32
 1786              		.cfi_offset 5, -28
 1787              		.cfi_offset 6, -24
 1788              		.cfi_offset 7, -20
 1789              		.cfi_offset 8, -16
 1790              		.cfi_offset 9, -12
 1791              		.cfi_offset 10, -8
 1792              		.cfi_offset 14, -4
 1793 0004 82B0     		sub	sp, sp, #8
 1794              	.LCFI46:
 1795              		.cfi_def_cfa_offset 40
 1796 0006 0746     		mov	r7, r0
 1797 0008 8846     		mov	r8, r1
 252:Src/pb_decode.c ****     uint_fast8_t bitpos = 0;
 1798              		.loc 1 252 5 is_stmt 1 view .LVU462
 253:Src/pb_decode.c ****     uint64_t result = 0;
 1799              		.loc 1 253 5 view .LVU463
 1800              	.LVL150:
 254:Src/pb_decode.c ****     
 1801              		.loc 1 254 5 view .LVU464
 254:Src/pb_decode.c ****     
 1802              		.loc 1 254 14 is_stmt 0 view .LVU465
 1803 000a 0025     		movs	r5, #0
 1804 000c 2E46     		mov	r6, r5
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 64


 253:Src/pb_decode.c ****     uint64_t result = 0;
 1805              		.loc 1 253 18 view .LVU466
 1806 000e 2C46     		mov	r4, r5
 1807              	.LVL151:
 1808              	.L182:
 256:Src/pb_decode.c ****     {
 1809              		.loc 1 256 5 is_stmt 1 view .LVU467
 258:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "varint overflow");
 1810              		.loc 1 258 9 view .LVU468
 258:Src/pb_decode.c ****             PB_RETURN_ERROR(stream, "varint overflow");
 1811              		.loc 1 258 12 is_stmt 0 view .LVU469
 1812 0010 3F2C     		cmp	r4, #63
 1813 0012 22D8     		bhi	.L184
 261:Src/pb_decode.c ****             return false;
 1814              		.loc 1 261 9 is_stmt 1 view .LVU470
 261:Src/pb_decode.c ****             return false;
 1815              		.loc 1 261 14 is_stmt 0 view .LVU471
 1816 0014 0DF10701 		add	r1, sp, #7
 1817 0018 3846     		mov	r0, r7
 1818 001a FFF7FEFF 		bl	pb_readbyte
 1819              	.LVL152:
 261:Src/pb_decode.c ****             return false;
 1820              		.loc 1 261 12 view .LVU472
 1821 001e 8646     		mov	lr, r0
 1822 0020 00B3     		cbz	r0, .L181
 264:Src/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1823              		.loc 1 264 9 is_stmt 1 view .LVU473
 264:Src/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1824              		.loc 1 264 35 is_stmt 0 view .LVU474
 1825 0022 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 264:Src/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1826              		.loc 1 264 19 view .LVU475
 1827 0026 00F07F02 		and	r2, r0, #127
 1828 002a 5FFA82F9 		uxtb	r9, r2
 264:Src/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1829              		.loc 1 264 43 view .LVU476
 1830 002e A4F1200C 		sub	ip, r4, #32
 1831 0032 C4F12001 		rsb	r1, r4, #32
 1832 0036 09FA0CF3 		lsl	r3, r9, ip
 1833 003a 29FA01F1 		lsr	r1, r9, r1
 1834 003e 0B43     		orrs	r3, r3, r1
 1835 0040 09FA04F2 		lsl	r2, r9, r4
 264:Src/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1836              		.loc 1 264 16 view .LVU477
 1837 0044 1543     		orrs	r5, r5, r2
 1838              	.LVL153:
 264:Src/pb_decode.c ****         bitpos = (uint_fast8_t)(bitpos + 7);
 1839              		.loc 1 264 16 view .LVU478
 1840 0046 1E43     		orrs	r6, r6, r3
 1841              	.LVL154:
 265:Src/pb_decode.c ****     } while (byte & 0x80);
 1842              		.loc 1 265 9 is_stmt 1 view .LVU479
 265:Src/pb_decode.c ****     } while (byte & 0x80);
 1843              		.loc 1 265 16 is_stmt 0 view .LVU480
 1844 0048 0734     		adds	r4, r4, #7
 1845              	.LVL155:
 266:Src/pb_decode.c ****     
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 65


 1846              		.loc 1 266 5 view .LVU481
 1847 004a 10F0800F 		tst	r0, #128
 1848 004e DFD1     		bne	.L182
 268:Src/pb_decode.c ****     return true;
 1849              		.loc 1 268 5 is_stmt 1 view .LVU482
 268:Src/pb_decode.c ****     return true;
 1850              		.loc 1 268 11 is_stmt 0 view .LVU483
 1851 0050 C8F80050 		str	r5, [r8]
 1852 0054 C8F80460 		str	r6, [r8, #4]
 269:Src/pb_decode.c **** }
 1853              		.loc 1 269 5 is_stmt 1 view .LVU484
 269:Src/pb_decode.c **** }
 1854              		.loc 1 269 12 is_stmt 0 view .LVU485
 1855 0058 04E0     		b	.L181
 1856              	.L184:
 259:Src/pb_decode.c ****         
 1857              		.loc 1 259 13 is_stmt 1 view .LVU486
 1858 005a FB68     		ldr	r3, [r7, #12]
 1859 005c 33B1     		cbz	r3, .L185
 1860              	.L180:
 259:Src/pb_decode.c ****         
 1861              		.loc 1 259 13 is_stmt 0 discriminator 4 view .LVU487
 1862 005e FB60     		str	r3, [r7, #12]
 1863 0060 4FF0000E 		mov	lr, #0
 1864              	.LVL156:
 1865              	.L181:
 270:Src/pb_decode.c **** #endif
 1866              		.loc 1 270 1 view .LVU488
 1867 0064 7046     		mov	r0, lr
 1868 0066 02B0     		add	sp, sp, #8
 1869              	.LCFI47:
 1870              		.cfi_remember_state
 1871              		.cfi_def_cfa_offset 32
 1872              		@ sp needed
 1873 0068 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1874              	.LVL157:
 1875              	.L185:
 1876              	.LCFI48:
 1877              		.cfi_restore_state
 259:Src/pb_decode.c ****         
 1878              		.loc 1 259 13 view .LVU489
 1879 006c 004B     		ldr	r3, .L186
 1880 006e F6E7     		b	.L180
 1881              	.L187:
 1882              		.align	2
 1883              	.L186:
 1884 0070 00000000 		.word	.LC2
 1885              		.cfi_endproc
 1886              	.LFE6:
 1888              		.section	.text.pb_dec_uvarint,"ax",%progbits
 1889              		.align	1
 1890              		.syntax unified
 1891              		.thumb
 1892              		.thumb_func
 1893              		.fpu fpv4-sp-d16
 1895              	pb_dec_uvarint:
 1896              	.LVL158:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 66


 1897              	.LFB33:
1327:Src/pb_decode.c ****     pb_uint64_t value, clamped;
 1898              		.loc 1 1327 1 is_stmt 1 view -0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 8
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
1327:Src/pb_decode.c ****     pb_uint64_t value, clamped;
 1902              		.loc 1 1327 1 is_stmt 0 view .LVU491
 1903 0000 70B5     		push	{r4, r5, r6, lr}
 1904              	.LCFI49:
 1905              		.cfi_def_cfa_offset 16
 1906              		.cfi_offset 4, -16
 1907              		.cfi_offset 5, -12
 1908              		.cfi_offset 6, -8
 1909              		.cfi_offset 14, -4
 1910 0002 82B0     		sub	sp, sp, #8
 1911              	.LCFI50:
 1912              		.cfi_def_cfa_offset 24
 1913 0004 0646     		mov	r6, r0
 1914 0006 0D46     		mov	r5, r1
 1915 0008 1446     		mov	r4, r2
1328:Src/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
 1916              		.loc 1 1328 5 is_stmt 1 view .LVU492
1329:Src/pb_decode.c ****         return false;
 1917              		.loc 1 1329 5 view .LVU493
1329:Src/pb_decode.c ****         return false;
 1918              		.loc 1 1329 10 is_stmt 0 view .LVU494
 1919 000a 6946     		mov	r1, sp
 1920              	.LVL159:
1329:Src/pb_decode.c ****         return false;
 1921              		.loc 1 1329 10 view .LVU495
 1922 000c FFF7FEFF 		bl	pb_decode_varint
 1923              	.LVL160:
1329:Src/pb_decode.c ****         return false;
 1924              		.loc 1 1329 8 view .LVU496
 1925 0010 0346     		mov	r3, r0
 1926 0012 E8B1     		cbz	r0, .L189
1333:Src/pb_decode.c ****         clamped = *(pb_uint64_t*)dest = value;
 1927              		.loc 1 1333 5 is_stmt 1 view .LVU497
1333:Src/pb_decode.c ****         clamped = *(pb_uint64_t*)dest = value;
 1928              		.loc 1 1333 14 is_stmt 0 view .LVU498
 1929 0014 B5F80720 		ldrh	r2, [r5, #7]	@ unaligned
1333:Src/pb_decode.c ****         clamped = *(pb_uint64_t*)dest = value;
 1930              		.loc 1 1333 8 view .LVU499
 1931 0018 082A     		cmp	r2, #8
 1932 001a 0BD0     		beq	.L198
1335:Src/pb_decode.c ****         clamped = *(uint32_t*)dest = (uint32_t)value;
 1933              		.loc 1 1335 10 is_stmt 1 view .LVU500
1335:Src/pb_decode.c ****         clamped = *(uint32_t*)dest = (uint32_t)value;
 1934              		.loc 1 1335 13 is_stmt 0 view .LVU501
 1935 001c 042A     		cmp	r2, #4
 1936 001e 1AD0     		beq	.L199
1337:Src/pb_decode.c ****         clamped = *(uint_least16_t*)dest = (uint_least16_t)value;
 1937              		.loc 1 1337 10 is_stmt 1 view .LVU502
1337:Src/pb_decode.c ****         clamped = *(uint_least16_t*)dest = (uint_least16_t)value;
 1938              		.loc 1 1337 13 is_stmt 0 view .LVU503
 1939 0020 022A     		cmp	r2, #2
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 67


 1940 0022 1CD0     		beq	.L200
1339:Src/pb_decode.c ****         clamped = *(uint_least8_t*)dest = (uint_least8_t)value;
 1941              		.loc 1 1339 10 is_stmt 1 view .LVU504
1339:Src/pb_decode.c ****         clamped = *(uint_least8_t*)dest = (uint_least8_t)value;
 1942              		.loc 1 1339 13 is_stmt 0 view .LVU505
 1943 0024 012A     		cmp	r2, #1
 1944 0026 20D1     		bne	.L194
1340:Src/pb_decode.c ****     else
 1945              		.loc 1 1340 9 is_stmt 1 view .LVU506
1340:Src/pb_decode.c ****     else
 1946              		.loc 1 1340 43 is_stmt 0 view .LVU507
 1947 0028 9DF80000 		ldrb	r0, [sp]	@ zero_extendqisi2
1340:Src/pb_decode.c ****     else
 1948              		.loc 1 1340 41 view .LVU508
 1949 002c 2070     		strb	r0, [r4]
1340:Src/pb_decode.c ****     else
 1950              		.loc 1 1340 17 view .LVU509
 1951 002e C0B2     		uxtb	r0, r0
 1952 0030 0021     		movs	r1, #0
 1953              	.LVL161:
1340:Src/pb_decode.c ****     else
 1954              		.loc 1 1340 17 view .LVU510
 1955 0032 03E0     		b	.L191
 1956              	.LVL162:
 1957              	.L198:
1334:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint32_t))
 1958              		.loc 1 1334 9 is_stmt 1 view .LVU511
1334:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint32_t))
 1959              		.loc 1 1334 39 is_stmt 0 view .LVU512
 1960 0034 DDE90001 		ldrd	r0, [sp]
 1961 0038 C4E90001 		strd	r0, [r4]
 1962              	.LVL163:
 1963              	.L191:
1344:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 1964              		.loc 1 1344 5 is_stmt 1 view .LVU513
1344:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 1965              		.loc 1 1344 17 is_stmt 0 view .LVU514
 1966 003c DDE90045 		ldrd	r4, [sp]
 1967              	.LVL164:
1344:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 1968              		.loc 1 1344 8 view .LVU515
 1969 0040 8D42     		cmp	r5, r1
 1970 0042 08BF     		it	eq
 1971 0044 8442     		cmpeq	r4, r0
 1972 0046 03D0     		beq	.L189
1345:Src/pb_decode.c **** 
 1973              		.loc 1 1345 9 is_stmt 1 view .LVU516
 1974 0048 F368     		ldr	r3, [r6, #12]
 1975 004a ABB1     		cbz	r3, .L201
 1976              	.L196:
1345:Src/pb_decode.c **** 
 1977              		.loc 1 1345 9 is_stmt 0 discriminator 4 view .LVU517
 1978 004c F360     		str	r3, [r6, #12]
 1979 004e 0023     		movs	r3, #0
 1980              	.LVL165:
 1981              	.L189:
1348:Src/pb_decode.c **** 
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 68


 1982              		.loc 1 1348 1 view .LVU518
 1983 0050 1846     		mov	r0, r3
 1984 0052 02B0     		add	sp, sp, #8
 1985              	.LCFI51:
 1986              		.cfi_remember_state
 1987              		.cfi_def_cfa_offset 16
 1988              		@ sp needed
 1989 0054 70BD     		pop	{r4, r5, r6, pc}
 1990              	.LVL166:
 1991              	.L199:
 1992              	.LCFI52:
 1993              		.cfi_restore_state
1336:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
 1994              		.loc 1 1336 9 is_stmt 1 view .LVU519
1336:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
 1995              		.loc 1 1336 38 is_stmt 0 view .LVU520
 1996 0056 0098     		ldr	r0, [sp]
1336:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
 1997              		.loc 1 1336 36 view .LVU521
 1998 0058 2060     		str	r0, [r4]
1336:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
 1999              		.loc 1 1336 17 view .LVU522
 2000 005a 0021     		movs	r1, #0
 2001              	.LVL167:
1336:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least16_t))
 2002              		.loc 1 1336 17 view .LVU523
 2003 005c EEE7     		b	.L191
 2004              	.LVL168:
 2005              	.L200:
1338:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
 2006              		.loc 1 1338 9 is_stmt 1 view .LVU524
1338:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
 2007              		.loc 1 1338 44 is_stmt 0 view .LVU525
 2008 005e BDF80000 		ldrh	r0, [sp]
1338:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
 2009              		.loc 1 1338 42 view .LVU526
 2010 0062 2080     		strh	r0, [r4]	@ movhi
1338:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
 2011              		.loc 1 1338 17 view .LVU527
 2012 0064 80B2     		uxth	r0, r0
 2013 0066 0021     		movs	r1, #0
 2014              	.LVL169:
1338:Src/pb_decode.c ****     else if (field->data_size == sizeof(uint_least8_t))
 2015              		.loc 1 1338 17 view .LVU528
 2016 0068 E8E7     		b	.L191
 2017              	.LVL170:
 2018              	.L194:
1342:Src/pb_decode.c ****     
 2019              		.loc 1 1342 9 is_stmt 1 view .LVU529
 2020 006a F368     		ldr	r3, [r6, #12]
 2021 006c 13B1     		cbz	r3, .L202
 2022              	.L195:
1342:Src/pb_decode.c ****     
 2023              		.loc 1 1342 9 is_stmt 0 discriminator 4 view .LVU530
 2024 006e F360     		str	r3, [r6, #12]
 2025 0070 0023     		movs	r3, #0
 2026 0072 EDE7     		b	.L189
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 69


 2027              	.L202:
1342:Src/pb_decode.c ****     
 2028              		.loc 1 1342 9 view .LVU531
 2029 0074 014B     		ldr	r3, .L203
 2030 0076 FAE7     		b	.L195
 2031              	.LVL171:
 2032              	.L201:
1345:Src/pb_decode.c **** 
 2033              		.loc 1 1345 9 view .LVU532
 2034 0078 014B     		ldr	r3, .L203+4
 2035 007a E7E7     		b	.L196
 2036              	.L204:
 2037              		.align	2
 2038              	.L203:
 2039 007c 00000000 		.word	.LC9
 2040 0080 14000000 		.word	.LC10
 2041              		.cfi_endproc
 2042              	.LFE33:
 2044              		.section	.text.pb_dec_varint,"ax",%progbits
 2045              		.align	1
 2046              		.syntax unified
 2047              		.thumb
 2048              		.thumb_func
 2049              		.fpu fpv4-sp-d16
 2051              	pb_dec_varint:
 2052              	.LVL172:
 2053              	.LFB32:
1290:Src/pb_decode.c ****     pb_uint64_t value;
 2054              		.loc 1 1290 1 is_stmt 1 view -0
 2055              		.cfi_startproc
 2056              		@ args = 0, pretend = 0, frame = 8
 2057              		@ frame_needed = 0, uses_anonymous_args = 0
1290:Src/pb_decode.c ****     pb_uint64_t value;
 2058              		.loc 1 1290 1 is_stmt 0 view .LVU534
 2059 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2060              	.LCFI53:
 2061              		.cfi_def_cfa_offset 20
 2062              		.cfi_offset 4, -20
 2063              		.cfi_offset 5, -16
 2064              		.cfi_offset 6, -12
 2065              		.cfi_offset 7, -8
 2066              		.cfi_offset 14, -4
 2067 0002 83B0     		sub	sp, sp, #12
 2068              	.LCFI54:
 2069              		.cfi_def_cfa_offset 32
 2070 0004 0546     		mov	r5, r0
 2071 0006 0F46     		mov	r7, r1
 2072 0008 1646     		mov	r6, r2
1291:Src/pb_decode.c ****     pb_int64_t svalue;
 2073              		.loc 1 1291 5 is_stmt 1 view .LVU535
1292:Src/pb_decode.c ****     pb_int64_t clamped;
 2074              		.loc 1 1292 5 view .LVU536
1293:Src/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
 2075              		.loc 1 1293 5 view .LVU537
1294:Src/pb_decode.c ****         return false;
 2076              		.loc 1 1294 5 view .LVU538
1294:Src/pb_decode.c ****         return false;
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 70


 2077              		.loc 1 1294 10 is_stmt 0 view .LVU539
 2078 000a 6946     		mov	r1, sp
 2079              	.LVL173:
1294:Src/pb_decode.c ****         return false;
 2080              		.loc 1 1294 10 view .LVU540
 2081 000c FFF7FEFF 		bl	pb_decode_varint
 2082              	.LVL174:
1294:Src/pb_decode.c ****         return false;
 2083              		.loc 1 1294 8 view .LVU541
 2084 0010 0446     		mov	r4, r0
 2085 0012 08B3     		cbz	r0, .L206
1303:Src/pb_decode.c ****         svalue = (pb_int64_t)value;
 2086              		.loc 1 1303 5 is_stmt 1 view .LVU542
1303:Src/pb_decode.c ****         svalue = (pb_int64_t)value;
 2087              		.loc 1 1303 14 is_stmt 0 view .LVU543
 2088 0014 B7F80710 		ldrh	r1, [r7, #7]	@ unaligned
1303:Src/pb_decode.c ****         svalue = (pb_int64_t)value;
 2089              		.loc 1 1303 8 view .LVU544
 2090 0018 0829     		cmp	r1, #8
 2091 001a 0ED0     		beq	.L217
1306:Src/pb_decode.c **** 
 2092              		.loc 1 1306 9 is_stmt 1 view .LVU545
1306:Src/pb_decode.c **** 
 2093              		.loc 1 1306 18 is_stmt 0 view .LVU546
 2094 001c 009A     		ldr	r2, [sp]
1306:Src/pb_decode.c **** 
 2095              		.loc 1 1306 16 view .LVU547
 2096 001e D317     		asrs	r3, r2, #31
 2097              	.LVL175:
 2098              	.L208:
1309:Src/pb_decode.c ****         clamped = *(pb_int64_t*)dest = svalue;
 2099              		.loc 1 1309 5 is_stmt 1 view .LVU548
1309:Src/pb_decode.c ****         clamped = *(pb_int64_t*)dest = svalue;
 2100              		.loc 1 1309 8 is_stmt 0 view .LVU549
 2101 0020 0829     		cmp	r1, #8
 2102 0022 0DD0     		beq	.L218
1311:Src/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)svalue;
 2103              		.loc 1 1311 10 is_stmt 1 view .LVU550
1311:Src/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)svalue;
 2104              		.loc 1 1311 13 is_stmt 0 view .LVU551
 2105 0024 0429     		cmp	r1, #4
 2106 0026 1AD0     		beq	.L219
1313:Src/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)svalue;
 2107              		.loc 1 1313 10 is_stmt 1 view .LVU552
1313:Src/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)svalue;
 2108              		.loc 1 1313 13 is_stmt 0 view .LVU553
 2109 0028 0229     		cmp	r1, #2
 2110 002a 1CD0     		beq	.L220
1315:Src/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)svalue;
 2111              		.loc 1 1315 10 is_stmt 1 view .LVU554
1315:Src/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)svalue;
 2112              		.loc 1 1315 13 is_stmt 0 view .LVU555
 2113 002c 0129     		cmp	r1, #1
 2114 002e 1FD1     		bne	.L213
1316:Src/pb_decode.c ****     else
 2115              		.loc 1 1316 9 is_stmt 1 view .LVU556
1316:Src/pb_decode.c ****     else
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 71


 2116              		.loc 1 1316 42 is_stmt 0 view .LVU557
 2117 0030 50B2     		sxtb	r0, r2
1316:Src/pb_decode.c ****     else
 2118              		.loc 1 1316 40 view .LVU558
 2119 0032 3070     		strb	r0, [r6]
1316:Src/pb_decode.c ****     else
 2120              		.loc 1 1316 17 view .LVU559
 2121 0034 40B2     		sxtb	r0, r0
 2122 0036 C117     		asrs	r1, r0, #31
 2123              	.LVL176:
1316:Src/pb_decode.c ****     else
 2124              		.loc 1 1316 17 view .LVU560
 2125 0038 06E0     		b	.L210
 2126              	.LVL177:
 2127              	.L217:
1304:Src/pb_decode.c ****     else
 2128              		.loc 1 1304 9 is_stmt 1 view .LVU561
1304:Src/pb_decode.c ****     else
 2129              		.loc 1 1304 18 is_stmt 0 view .LVU562
 2130 003a DDE90023 		ldrd	r2, [sp]
 2131              	.LVL178:
1304:Src/pb_decode.c ****     else
 2132              		.loc 1 1304 18 view .LVU563
 2133 003e EFE7     		b	.L208
 2134              	.L218:
1310:Src/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
 2135              		.loc 1 1310 9 is_stmt 1 view .LVU564
1310:Src/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
 2136              		.loc 1 1310 38 is_stmt 0 view .LVU565
 2137 0040 C6E90023 		strd	r2, [r6]
 2138              	.LVL179:
1310:Src/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
 2139              		.loc 1 1310 17 view .LVU566
 2140 0044 1046     		mov	r0, r2
 2141 0046 1946     		mov	r1, r3
 2142              	.LVL180:
 2143              	.L210:
1320:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 2144              		.loc 1 1320 5 is_stmt 1 view .LVU567
1320:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 2145              		.loc 1 1320 8 is_stmt 0 view .LVU568
 2146 0048 8B42     		cmp	r3, r1
 2147 004a 08BF     		it	eq
 2148 004c 8242     		cmpeq	r2, r0
 2149 004e 03D0     		beq	.L206
1321:Src/pb_decode.c ****     
 2150              		.loc 1 1321 9 is_stmt 1 view .LVU569
 2151 0050 EB68     		ldr	r3, [r5, #12]
 2152 0052 A3B1     		cbz	r3, .L221
 2153              	.L215:
1321:Src/pb_decode.c ****     
 2154              		.loc 1 1321 9 is_stmt 0 discriminator 4 view .LVU570
 2155 0054 EB60     		str	r3, [r5, #12]
 2156 0056 0024     		movs	r4, #0
 2157              	.LVL181:
 2158              	.L206:
1324:Src/pb_decode.c **** 
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 72


 2159              		.loc 1 1324 1 view .LVU571
 2160 0058 2046     		mov	r0, r4
 2161 005a 03B0     		add	sp, sp, #12
 2162              	.LCFI55:
 2163              		.cfi_remember_state
 2164              		.cfi_def_cfa_offset 20
 2165              		@ sp needed
 2166 005c F0BD     		pop	{r4, r5, r6, r7, pc}
 2167              	.LVL182:
 2168              	.L219:
 2169              	.LCFI56:
 2170              		.cfi_restore_state
1312:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 2171              		.loc 1 1312 9 is_stmt 1 view .LVU572
1312:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 2172              		.loc 1 1312 35 is_stmt 0 view .LVU573
 2173 005e 3260     		str	r2, [r6]
1312:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 2174              		.loc 1 1312 17 view .LVU574
 2175 0060 1046     		mov	r0, r2
 2176 0062 D117     		asrs	r1, r2, #31
 2177              	.LVL183:
1312:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 2178              		.loc 1 1312 17 view .LVU575
 2179 0064 F0E7     		b	.L210
 2180              	.LVL184:
 2181              	.L220:
1314:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 2182              		.loc 1 1314 9 is_stmt 1 view .LVU576
1314:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 2183              		.loc 1 1314 43 is_stmt 0 view .LVU577
 2184 0066 10B2     		sxth	r0, r2
1314:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 2185              		.loc 1 1314 41 view .LVU578
 2186 0068 3080     		strh	r0, [r6]	@ movhi
1314:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 2187              		.loc 1 1314 17 view .LVU579
 2188 006a 00B2     		sxth	r0, r0
 2189 006c C117     		asrs	r1, r0, #31
 2190              	.LVL185:
1314:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 2191              		.loc 1 1314 17 view .LVU580
 2192 006e EBE7     		b	.L210
 2193              	.LVL186:
 2194              	.L213:
1318:Src/pb_decode.c **** 
 2195              		.loc 1 1318 9 is_stmt 1 view .LVU581
 2196 0070 EB68     		ldr	r3, [r5, #12]
 2197 0072 13B1     		cbz	r3, .L222
 2198              	.L214:
1318:Src/pb_decode.c **** 
 2199              		.loc 1 1318 9 is_stmt 0 discriminator 4 view .LVU582
 2200 0074 EB60     		str	r3, [r5, #12]
 2201 0076 0024     		movs	r4, #0
 2202 0078 EEE7     		b	.L206
 2203              	.L222:
1318:Src/pb_decode.c **** 
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 73


 2204              		.loc 1 1318 9 view .LVU583
 2205 007a 024B     		ldr	r3, .L223
 2206 007c FAE7     		b	.L214
 2207              	.LVL187:
 2208              	.L221:
1321:Src/pb_decode.c ****     
 2209              		.loc 1 1321 9 view .LVU584
 2210 007e 024B     		ldr	r3, .L223+4
 2211 0080 E8E7     		b	.L215
 2212              	.L224:
 2213 0082 00BF     		.align	2
 2214              	.L223:
 2215 0084 00000000 		.word	.LC9
 2216 0088 14000000 		.word	.LC10
 2217              		.cfi_endproc
 2218              	.LFE32:
 2220              		.section	.text.pb_decode_tag,"ax",%progbits
 2221              		.align	1
 2222              		.global	pb_decode_tag
 2223              		.syntax unified
 2224              		.thumb
 2225              		.thumb_func
 2226              		.fpu fpv4-sp-d16
 2228              	pb_decode_tag:
 2229              	.LVL188:
 2230              	.LFB9:
 294:Src/pb_decode.c ****     uint32_t temp;
 2231              		.loc 1 294 1 is_stmt 1 view -0
 2232              		.cfi_startproc
 2233              		@ args = 0, pretend = 0, frame = 8
 2234              		@ frame_needed = 0, uses_anonymous_args = 0
 294:Src/pb_decode.c ****     uint32_t temp;
 2235              		.loc 1 294 1 is_stmt 0 view .LVU586
 2236 0000 70B5     		push	{r4, r5, r6, lr}
 2237              	.LCFI57:
 2238              		.cfi_def_cfa_offset 16
 2239              		.cfi_offset 4, -16
 2240              		.cfi_offset 5, -12
 2241              		.cfi_offset 6, -8
 2242              		.cfi_offset 14, -4
 2243 0002 82B0     		sub	sp, sp, #8
 2244              	.LCFI58:
 2245              		.cfi_def_cfa_offset 24
 2246 0004 0D46     		mov	r5, r1
 2247 0006 1646     		mov	r6, r2
 2248 0008 1C46     		mov	r4, r3
 295:Src/pb_decode.c ****     *eof = false;
 2249              		.loc 1 295 5 is_stmt 1 view .LVU587
 296:Src/pb_decode.c ****     *wire_type = (pb_wire_type_t) 0;
 2250              		.loc 1 296 5 view .LVU588
 296:Src/pb_decode.c ****     *wire_type = (pb_wire_type_t) 0;
 2251              		.loc 1 296 10 is_stmt 0 view .LVU589
 2252 000a 0023     		movs	r3, #0
 2253              	.LVL189:
 296:Src/pb_decode.c ****     *wire_type = (pb_wire_type_t) 0;
 2254              		.loc 1 296 10 view .LVU590
 2255 000c 2370     		strb	r3, [r4]
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 74


 297:Src/pb_decode.c ****     *tag = 0;
 2256              		.loc 1 297 5 is_stmt 1 view .LVU591
 297:Src/pb_decode.c ****     *tag = 0;
 2257              		.loc 1 297 16 is_stmt 0 view .LVU592
 2258 000e 0B70     		strb	r3, [r1]
 298:Src/pb_decode.c ****     
 2259              		.loc 1 298 5 is_stmt 1 view .LVU593
 298:Src/pb_decode.c ****     
 2260              		.loc 1 298 10 is_stmt 0 view .LVU594
 2261 0010 1360     		str	r3, [r2]
 300:Src/pb_decode.c ****     {
 2262              		.loc 1 300 5 is_stmt 1 view .LVU595
 300:Src/pb_decode.c ****     {
 2263              		.loc 1 300 10 is_stmt 0 view .LVU596
 2264 0012 2246     		mov	r2, r4
 2265              	.LVL190:
 300:Src/pb_decode.c ****     {
 2266              		.loc 1 300 10 view .LVU597
 2267 0014 01A9     		add	r1, sp, #4
 2268              	.LVL191:
 300:Src/pb_decode.c ****     {
 2269              		.loc 1 300 10 view .LVU598
 2270 0016 FFF7FEFF 		bl	pb_decode_varint32_eof
 2271              	.LVL192:
 300:Src/pb_decode.c ****     {
 2272              		.loc 1 300 8 view .LVU599
 2273 001a 0246     		mov	r2, r0
 2274 001c 40B1     		cbz	r0, .L226
 305:Src/pb_decode.c ****     {
 2275              		.loc 1 305 5 is_stmt 1 view .LVU600
 305:Src/pb_decode.c ****     {
 2276              		.loc 1 305 14 is_stmt 0 view .LVU601
 2277 001e 019B     		ldr	r3, [sp, #4]
 305:Src/pb_decode.c ****     {
 2278              		.loc 1 305 8 view .LVU602
 2279 0020 4BB1     		cbz	r3, .L229
 311:Src/pb_decode.c ****     *wire_type = (pb_wire_type_t)(temp & 7);
 2280              		.loc 1 311 5 is_stmt 1 view .LVU603
 311:Src/pb_decode.c ****     *wire_type = (pb_wire_type_t)(temp & 7);
 2281              		.loc 1 311 17 is_stmt 0 view .LVU604
 2282 0022 DB08     		lsrs	r3, r3, #3
 311:Src/pb_decode.c ****     *wire_type = (pb_wire_type_t)(temp & 7);
 2283              		.loc 1 311 10 view .LVU605
 2284 0024 3360     		str	r3, [r6]
 312:Src/pb_decode.c ****     return true;
 2285              		.loc 1 312 5 is_stmt 1 view .LVU606
 312:Src/pb_decode.c ****     return true;
 2286              		.loc 1 312 18 is_stmt 0 view .LVU607
 2287 0026 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 312:Src/pb_decode.c ****     return true;
 2288              		.loc 1 312 40 view .LVU608
 2289 002a 03F00703 		and	r3, r3, #7
 312:Src/pb_decode.c ****     return true;
 2290              		.loc 1 312 16 view .LVU609
 2291 002e 2B70     		strb	r3, [r5]
 313:Src/pb_decode.c **** }
 2292              		.loc 1 313 5 is_stmt 1 view .LVU610
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 75


 2293              	.L226:
 314:Src/pb_decode.c **** 
 2294              		.loc 1 314 1 is_stmt 0 view .LVU611
 2295 0030 1046     		mov	r0, r2
 2296 0032 02B0     		add	sp, sp, #8
 2297              	.LCFI59:
 2298              		.cfi_remember_state
 2299              		.cfi_def_cfa_offset 16
 2300              		@ sp needed
 2301 0034 70BD     		pop	{r4, r5, r6, pc}
 2302              	.LVL193:
 2303              	.L229:
 2304              	.LCFI60:
 2305              		.cfi_restore_state
 307:Src/pb_decode.c ****         return false;
 2306              		.loc 1 307 9 is_stmt 1 view .LVU612
 307:Src/pb_decode.c ****         return false;
 2307              		.loc 1 307 14 is_stmt 0 view .LVU613
 2308 0036 0123     		movs	r3, #1
 2309 0038 2370     		strb	r3, [r4]
 308:Src/pb_decode.c ****     }
 2310              		.loc 1 308 9 is_stmt 1 view .LVU614
 308:Src/pb_decode.c ****     }
 2311              		.loc 1 308 16 is_stmt 0 view .LVU615
 2312 003a 0022     		movs	r2, #0
 2313 003c F8E7     		b	.L226
 2314              		.cfi_endproc
 2315              	.LFE9:
 2317              		.section	.text.pb_skip_field,"ax",%progbits
 2318              		.align	1
 2319              		.global	pb_skip_field
 2320              		.syntax unified
 2321              		.thumb
 2322              		.thumb_func
 2323              		.fpu fpv4-sp-d16
 2325              	pb_skip_field:
 2326              	.LVL194:
 2327              	.LFB10:
 317:Src/pb_decode.c ****     switch (wire_type)
 2328              		.loc 1 317 1 is_stmt 1 view -0
 2329              		.cfi_startproc
 2330              		@ args = 0, pretend = 0, frame = 0
 2331              		@ frame_needed = 0, uses_anonymous_args = 0
 317:Src/pb_decode.c ****     switch (wire_type)
 2332              		.loc 1 317 1 is_stmt 0 view .LVU617
 2333 0000 08B5     		push	{r3, lr}
 2334              	.LCFI61:
 2335              		.cfi_def_cfa_offset 8
 2336              		.cfi_offset 3, -8
 2337              		.cfi_offset 14, -4
 318:Src/pb_decode.c ****     {
 2338              		.loc 1 318 5 is_stmt 1 view .LVU618
 2339 0002 0529     		cmp	r1, #5
 2340 0004 14D8     		bhi	.L231
 2341 0006 DFE801F0 		tbb	[pc, r1]
 2342              	.L233:
 2343 000a 03       		.byte	(.L236-.L233)/2
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 76


 2344 000b 06       		.byte	(.L235-.L233)/2
 2345 000c 0B       		.byte	(.L234-.L233)/2
 2346 000d 13       		.byte	(.L231-.L233)/2
 2347 000e 13       		.byte	(.L231-.L233)/2
 2348 000f 0E       		.byte	(.L232-.L233)/2
 2349              		.p2align 1
 2350              	.L236:
 320:Src/pb_decode.c ****         case PB_WT_64BIT: return pb_read(stream, NULL, 8);
 2351              		.loc 1 320 28 view .LVU619
 320:Src/pb_decode.c ****         case PB_WT_64BIT: return pb_read(stream, NULL, 8);
 2352              		.loc 1 320 35 is_stmt 0 view .LVU620
 2353 0010 FFF7FEFF 		bl	pb_skip_varint
 2354              	.LVL195:
 2355              	.L237:
 326:Src/pb_decode.c **** 
 2356              		.loc 1 326 1 view .LVU621
 2357 0014 08BD     		pop	{r3, pc}
 2358              	.LVL196:
 2359              	.L235:
 321:Src/pb_decode.c ****         case PB_WT_STRING: return pb_skip_string(stream);
 2360              		.loc 1 321 27 is_stmt 1 view .LVU622
 321:Src/pb_decode.c ****         case PB_WT_STRING: return pb_skip_string(stream);
 2361              		.loc 1 321 34 is_stmt 0 view .LVU623
 2362 0016 0822     		movs	r2, #8
 2363 0018 0021     		movs	r1, #0
 2364              	.LVL197:
 321:Src/pb_decode.c ****         case PB_WT_STRING: return pb_skip_string(stream);
 2365              		.loc 1 321 34 view .LVU624
 2366 001a FFF7FEFF 		bl	pb_read
 2367              	.LVL198:
 321:Src/pb_decode.c ****         case PB_WT_STRING: return pb_skip_string(stream);
 2368              		.loc 1 321 34 view .LVU625
 2369 001e F9E7     		b	.L237
 2370              	.LVL199:
 2371              	.L234:
 322:Src/pb_decode.c ****         case PB_WT_32BIT: return pb_read(stream, NULL, 4);
 2372              		.loc 1 322 28 is_stmt 1 view .LVU626
 322:Src/pb_decode.c ****         case PB_WT_32BIT: return pb_read(stream, NULL, 4);
 2373              		.loc 1 322 35 is_stmt 0 view .LVU627
 2374 0020 FFF7FEFF 		bl	pb_skip_string
 2375              	.LVL200:
 322:Src/pb_decode.c ****         case PB_WT_32BIT: return pb_read(stream, NULL, 4);
 2376              		.loc 1 322 35 view .LVU628
 2377 0024 F6E7     		b	.L237
 2378              	.LVL201:
 2379              	.L232:
 323:Src/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 2380              		.loc 1 323 27 is_stmt 1 view .LVU629
 323:Src/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 2381              		.loc 1 323 34 is_stmt 0 view .LVU630
 2382 0026 0422     		movs	r2, #4
 2383 0028 0021     		movs	r1, #0
 2384              	.LVL202:
 323:Src/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 2385              		.loc 1 323 34 view .LVU631
 2386 002a FFF7FEFF 		bl	pb_read
 2387              	.LVL203:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 77


 323:Src/pb_decode.c ****         default: PB_RETURN_ERROR(stream, "invalid wire_type");
 2388              		.loc 1 323 34 view .LVU632
 2389 002e F1E7     		b	.L237
 2390              	.LVL204:
 2391              	.L231:
 324:Src/pb_decode.c ****     }
 2392              		.loc 1 324 18 is_stmt 1 view .LVU633
 2393 0030 C368     		ldr	r3, [r0, #12]
 2394 0032 13B1     		cbz	r3, .L240
 2395              	.L238:
 324:Src/pb_decode.c ****     }
 2396              		.loc 1 324 18 is_stmt 0 discriminator 4 view .LVU634
 2397 0034 C360     		str	r3, [r0, #12]
 2398 0036 0020     		movs	r0, #0
 2399              	.LVL205:
 324:Src/pb_decode.c ****     }
 2400              		.loc 1 324 18 discriminator 4 view .LVU635
 2401 0038 ECE7     		b	.L237
 2402              	.LVL206:
 2403              	.L240:
 324:Src/pb_decode.c ****     }
 2404              		.loc 1 324 18 view .LVU636
 2405 003a 014B     		ldr	r3, .L241
 2406 003c FAE7     		b	.L238
 2407              	.L242:
 2408 003e 00BF     		.align	2
 2409              	.L241:
 2410 0040 00000000 		.word	.LC4
 2411              		.cfi_endproc
 2412              	.LFE10:
 2414              		.section	.text.pb_make_string_substream,"ax",%progbits
 2415              		.align	1
 2416              		.global	pb_make_string_substream
 2417              		.syntax unified
 2418              		.thumb
 2419              		.thumb_func
 2420              		.fpu fpv4-sp-d16
 2422              	pb_make_string_substream:
 2423              	.LVL207:
 2424              	.LFB12:
 368:Src/pb_decode.c ****     uint32_t size;
 2425              		.loc 1 368 1 is_stmt 1 view -0
 2426              		.cfi_startproc
 2427              		@ args = 0, pretend = 0, frame = 8
 2428              		@ frame_needed = 0, uses_anonymous_args = 0
 368:Src/pb_decode.c ****     uint32_t size;
 2429              		.loc 1 368 1 is_stmt 0 view .LVU638
 2430 0000 70B5     		push	{r4, r5, r6, lr}
 2431              	.LCFI62:
 2432              		.cfi_def_cfa_offset 16
 2433              		.cfi_offset 4, -16
 2434              		.cfi_offset 5, -12
 2435              		.cfi_offset 6, -8
 2436              		.cfi_offset 14, -4
 2437 0002 82B0     		sub	sp, sp, #8
 2438              	.LCFI63:
 2439              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 78


 2440 0004 0446     		mov	r4, r0
 2441 0006 0D46     		mov	r5, r1
 369:Src/pb_decode.c ****     if (!pb_decode_varint32(stream, &size))
 2442              		.loc 1 369 5 is_stmt 1 view .LVU639
 370:Src/pb_decode.c ****         return false;
 2443              		.loc 1 370 5 view .LVU640
 370:Src/pb_decode.c ****         return false;
 2444              		.loc 1 370 10 is_stmt 0 view .LVU641
 2445 0008 01A9     		add	r1, sp, #4
 2446              	.LVL208:
 370:Src/pb_decode.c ****         return false;
 2447              		.loc 1 370 10 view .LVU642
 2448 000a FFF7FEFF 		bl	pb_decode_varint32
 2449              	.LVL209:
 370:Src/pb_decode.c ****         return false;
 2450              		.loc 1 370 8 view .LVU643
 2451 000e 0646     		mov	r6, r0
 2452 0010 50B1     		cbz	r0, .L244
 373:Src/pb_decode.c ****     if (substream->bytes_left < size)
 2453              		.loc 1 373 5 is_stmt 1 view .LVU644
 373:Src/pb_decode.c ****     if (substream->bytes_left < size)
 2454              		.loc 1 373 16 is_stmt 0 view .LVU645
 2455 0012 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 2456 0016 85E80F00 		stm	r5, {r0, r1, r2, r3}
 374:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "parent stream too short");
 2457              		.loc 1 374 5 is_stmt 1 view .LVU646
 374:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "parent stream too short");
 2458              		.loc 1 374 31 is_stmt 0 view .LVU647
 2459 001a 019B     		ldr	r3, [sp, #4]
 374:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "parent stream too short");
 2460              		.loc 1 374 8 view .LVU648
 2461 001c 9A42     		cmp	r2, r3
 2462 001e 06D3     		bcc	.L248
 377:Src/pb_decode.c ****     stream->bytes_left -= size;
 2463              		.loc 1 377 5 is_stmt 1 view .LVU649
 377:Src/pb_decode.c ****     stream->bytes_left -= size;
 2464              		.loc 1 377 27 is_stmt 0 view .LVU650
 2465 0020 AB60     		str	r3, [r5, #8]
 378:Src/pb_decode.c ****     return true;
 2466              		.loc 1 378 5 is_stmt 1 view .LVU651
 378:Src/pb_decode.c ****     return true;
 2467              		.loc 1 378 24 is_stmt 0 view .LVU652
 2468 0022 A268     		ldr	r2, [r4, #8]
 2469 0024 D31A     		subs	r3, r2, r3
 2470 0026 A360     		str	r3, [r4, #8]
 379:Src/pb_decode.c **** }
 2471              		.loc 1 379 5 is_stmt 1 view .LVU653
 2472              	.L244:
 380:Src/pb_decode.c **** 
 2473              		.loc 1 380 1 is_stmt 0 view .LVU654
 2474 0028 3046     		mov	r0, r6
 2475 002a 02B0     		add	sp, sp, #8
 2476              	.LCFI64:
 2477              		.cfi_remember_state
 2478              		.cfi_def_cfa_offset 16
 2479              		@ sp needed
 2480 002c 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 79


 2481              	.LVL210:
 2482              	.L248:
 2483              	.LCFI65:
 2484              		.cfi_restore_state
 375:Src/pb_decode.c ****     
 2485              		.loc 1 375 9 is_stmt 1 view .LVU655
 2486 002e E368     		ldr	r3, [r4, #12]
 2487 0030 13B1     		cbz	r3, .L249
 2488              	.L246:
 375:Src/pb_decode.c ****     
 2489              		.loc 1 375 9 is_stmt 0 discriminator 4 view .LVU656
 2490 0032 E360     		str	r3, [r4, #12]
 2491 0034 0026     		movs	r6, #0
 2492 0036 F7E7     		b	.L244
 2493              	.L249:
 375:Src/pb_decode.c ****     
 2494              		.loc 1 375 9 view .LVU657
 2495 0038 004B     		ldr	r3, .L250
 2496 003a FAE7     		b	.L246
 2497              	.L251:
 2498              		.align	2
 2499              	.L250:
 2500 003c 00000000 		.word	.LC11
 2501              		.cfi_endproc
 2502              	.LFE12:
 2504              		.section	.text.pb_close_string_substream,"ax",%progbits
 2505              		.align	1
 2506              		.global	pb_close_string_substream
 2507              		.syntax unified
 2508              		.thumb
 2509              		.thumb_func
 2510              		.fpu fpv4-sp-d16
 2512              	pb_close_string_substream:
 2513              	.LVL211:
 2514              	.LFB13:
 383:Src/pb_decode.c ****     if (substream->bytes_left) {
 2515              		.loc 1 383 1 is_stmt 1 view -0
 2516              		.cfi_startproc
 2517              		@ args = 0, pretend = 0, frame = 0
 2518              		@ frame_needed = 0, uses_anonymous_args = 0
 383:Src/pb_decode.c ****     if (substream->bytes_left) {
 2519              		.loc 1 383 1 is_stmt 0 view .LVU659
 2520 0000 38B5     		push	{r3, r4, r5, lr}
 2521              	.LCFI66:
 2522              		.cfi_def_cfa_offset 16
 2523              		.cfi_offset 3, -16
 2524              		.cfi_offset 4, -12
 2525              		.cfi_offset 5, -8
 2526              		.cfi_offset 14, -4
 2527 0002 0546     		mov	r5, r0
 2528 0004 0C46     		mov	r4, r1
 384:Src/pb_decode.c ****         if (!pb_read(substream, NULL, substream->bytes_left))
 2529              		.loc 1 384 5 is_stmt 1 view .LVU660
 384:Src/pb_decode.c ****         if (!pb_read(substream, NULL, substream->bytes_left))
 2530              		.loc 1 384 18 is_stmt 0 view .LVU661
 2531 0006 8A68     		ldr	r2, [r1, #8]
 384:Src/pb_decode.c ****         if (!pb_read(substream, NULL, substream->bytes_left))
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 80


 2532              		.loc 1 384 8 view .LVU662
 2533 0008 32B9     		cbnz	r2, .L256
 2534              	.LVL212:
 2535              	.L253:
 389:Src/pb_decode.c **** 
 2536              		.loc 1 389 5 is_stmt 1 view .LVU663
 389:Src/pb_decode.c **** 
 2537              		.loc 1 389 30 is_stmt 0 view .LVU664
 2538 000a 6368     		ldr	r3, [r4, #4]
 389:Src/pb_decode.c **** 
 2539              		.loc 1 389 19 view .LVU665
 2540 000c 6B60     		str	r3, [r5, #4]
 392:Src/pb_decode.c **** #endif
 2541              		.loc 1 392 5 is_stmt 1 view .LVU666
 392:Src/pb_decode.c **** #endif
 2542              		.loc 1 392 31 is_stmt 0 view .LVU667
 2543 000e E368     		ldr	r3, [r4, #12]
 392:Src/pb_decode.c **** #endif
 2544              		.loc 1 392 20 view .LVU668
 2545 0010 EB60     		str	r3, [r5, #12]
 394:Src/pb_decode.c **** }
 2546              		.loc 1 394 5 is_stmt 1 view .LVU669
 394:Src/pb_decode.c **** }
 2547              		.loc 1 394 12 is_stmt 0 view .LVU670
 2548 0012 0123     		movs	r3, #1
 2549              	.L254:
 395:Src/pb_decode.c **** 
 2550              		.loc 1 395 1 view .LVU671
 2551 0014 1846     		mov	r0, r3
 2552 0016 38BD     		pop	{r3, r4, r5, pc}
 2553              	.LVL213:
 2554              	.L256:
 385:Src/pb_decode.c ****             return false;
 2555              		.loc 1 385 9 is_stmt 1 view .LVU672
 385:Src/pb_decode.c ****             return false;
 2556              		.loc 1 385 14 is_stmt 0 view .LVU673
 2557 0018 0021     		movs	r1, #0
 2558              	.LVL214:
 385:Src/pb_decode.c ****             return false;
 2559              		.loc 1 385 14 view .LVU674
 2560 001a 2046     		mov	r0, r4
 2561              	.LVL215:
 385:Src/pb_decode.c ****             return false;
 2562              		.loc 1 385 14 view .LVU675
 2563 001c FFF7FEFF 		bl	pb_read
 2564              	.LVL216:
 385:Src/pb_decode.c ****             return false;
 2565              		.loc 1 385 12 view .LVU676
 2566 0020 0346     		mov	r3, r0
 2567 0022 0028     		cmp	r0, #0
 2568 0024 F1D1     		bne	.L253
 2569 0026 F5E7     		b	.L254
 2570              		.cfi_endproc
 2571              	.LFE13:
 2573              		.section	.text.decode_static_field,"ax",%progbits
 2574              		.align	1
 2575              		.syntax unified
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 81


 2576              		.thumb
 2577              		.thumb_func
 2578              		.fpu fpv4-sp-d16
 2580              	decode_static_field:
 2581              	.LVL217:
 2582              	.LFB14:
 402:Src/pb_decode.c ****     pb_type_t type;
 2583              		.loc 1 402 1 is_stmt 1 view -0
 2584              		.cfi_startproc
 2585              		@ args = 0, pretend = 0, frame = 16
 2586              		@ frame_needed = 0, uses_anonymous_args = 0
 402:Src/pb_decode.c ****     pb_type_t type;
 2587              		.loc 1 402 1 is_stmt 0 view .LVU678
 2588 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2589              	.LCFI67:
 2590              		.cfi_def_cfa_offset 24
 2591              		.cfi_offset 4, -24
 2592              		.cfi_offset 5, -20
 2593              		.cfi_offset 6, -16
 2594              		.cfi_offset 7, -12
 2595              		.cfi_offset 8, -8
 2596              		.cfi_offset 14, -4
 2597 0004 84B0     		sub	sp, sp, #16
 2598              	.LCFI68:
 2599              		.cfi_def_cfa_offset 40
 2600 0006 0546     		mov	r5, r0
 2601 0008 1446     		mov	r4, r2
 403:Src/pb_decode.c ****     pb_decoder_t func;
 2602              		.loc 1 403 5 is_stmt 1 view .LVU679
 404:Src/pb_decode.c ****     
 2603              		.loc 1 404 5 view .LVU680
 406:Src/pb_decode.c ****     func = PB_DECODERS[PB_LTYPE(type)];
 2604              		.loc 1 406 5 view .LVU681
 406:Src/pb_decode.c ****     func = PB_DECODERS[PB_LTYPE(type)];
 2605              		.loc 1 406 16 is_stmt 0 view .LVU682
 2606 000a 5068     		ldr	r0, [r2, #4]
 2607              	.LVL218:
 406:Src/pb_decode.c ****     func = PB_DECODERS[PB_LTYPE(type)];
 2608              		.loc 1 406 10 view .LVU683
 2609 000c 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 2610              	.LVL219:
 407:Src/pb_decode.c **** 
 2611              		.loc 1 407 5 is_stmt 1 view .LVU684
 2612 000e 03F00F02 		and	r2, r3, #15
 2613              	.LVL220:
 407:Src/pb_decode.c **** 
 2614              		.loc 1 407 10 is_stmt 0 view .LVU685
 2615 0012 494E     		ldr	r6, .L285
 2616 0014 56F82270 		ldr	r7, [r6, r2, lsl #2]
 2617              	.LVL221:
 409:Src/pb_decode.c ****     {
 2618              		.loc 1 409 5 is_stmt 1 view .LVU686
 2619 0018 03F03003 		and	r3, r3, #48
 2620              	.LVL222:
 409:Src/pb_decode.c ****     {
 2621              		.loc 1 409 5 is_stmt 0 view .LVU687
 2622 001c 102B     		cmp	r3, #16
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 82


 2623 001e 1AD0     		beq	.L258
 2624 0020 0ED9     		bls	.L279
 2625 0022 202B     		cmp	r3, #32
 2626 0024 23D0     		beq	.L262
 2627 0026 302B     		cmp	r3, #48
 2628 0028 7FD1     		bne	.L261
 462:Src/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
 2629              		.loc 1 462 13 is_stmt 1 view .LVU688
 462:Src/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
 2630              		.loc 1 462 30 is_stmt 0 view .LVU689
 2631 002a 6369     		ldr	r3, [r4, #20]
 462:Src/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
 2632              		.loc 1 462 49 view .LVU690
 2633 002c 0188     		ldrh	r1, [r0]	@ unaligned
 2634              	.LVL223:
 462:Src/pb_decode.c ****             if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)
 2635              		.loc 1 462 38 view .LVU691
 2636 002e 1980     		strh	r1, [r3]	@ movhi
 2637              	.LVL224:
 463:Src/pb_decode.c ****             {
 2638              		.loc 1 463 13 is_stmt 1 view .LVU692
 463:Src/pb_decode.c ****             {
 2639              		.loc 1 463 16 is_stmt 0 view .LVU693
 2640 0030 072A     		cmp	r2, #7
 2641 0032 6CD0     		beq	.L280
 2642              	.L275:
 470:Src/pb_decode.c **** 
 2643              		.loc 1 470 13 is_stmt 1 view .LVU694
 470:Src/pb_decode.c **** 
 2644              		.loc 1 470 20 is_stmt 0 view .LVU695
 2645 0034 2269     		ldr	r2, [r4, #16]
 2646 0036 6168     		ldr	r1, [r4, #4]
 2647 0038 2846     		mov	r0, r5
 2648 003a B847     		blx	r7
 2649              	.LVL225:
 2650 003c 0646     		mov	r6, r0
 2651 003e 06E0     		b	.L264
 2652              	.LVL226:
 2653              	.L279:
 409:Src/pb_decode.c ****     {
 2654              		.loc 1 409 5 view .LVU696
 2655 0040 002B     		cmp	r3, #0
 2656 0042 72D1     		bne	.L261
 412:Src/pb_decode.c ****             
 2657              		.loc 1 412 13 is_stmt 1 view .LVU697
 412:Src/pb_decode.c ****             
 2658              		.loc 1 412 20 is_stmt 0 view .LVU698
 2659 0044 2269     		ldr	r2, [r4, #16]
 2660 0046 0146     		mov	r1, r0
 2661              	.LVL227:
 412:Src/pb_decode.c ****             
 2662              		.loc 1 412 20 view .LVU699
 2663 0048 2846     		mov	r0, r5
 2664              	.LVL228:
 412:Src/pb_decode.c ****             
 2665              		.loc 1 412 20 view .LVU700
 2666 004a B847     		blx	r7
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 83


 2667              	.LVL229:
 412:Src/pb_decode.c ****             
 2668              		.loc 1 412 20 view .LVU701
 2669 004c 0646     		mov	r6, r0
 2670              	.L264:
 475:Src/pb_decode.c **** 
 2671              		.loc 1 475 1 discriminator 1 view .LVU702
 2672 004e 3046     		mov	r0, r6
 2673 0050 04B0     		add	sp, sp, #16
 2674              	.LCFI69:
 2675              		.cfi_remember_state
 2676              		.cfi_def_cfa_offset 24
 2677              		@ sp needed
 2678 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2679              	.LVL230:
 2680              	.L258:
 2681              	.LCFI70:
 2682              		.cfi_restore_state
 415:Src/pb_decode.c ****                 *(bool*)iter->pSize = true;
 2683              		.loc 1 415 13 is_stmt 1 view .LVU703
 415:Src/pb_decode.c ****                 *(bool*)iter->pSize = true;
 2684              		.loc 1 415 21 is_stmt 0 view .LVU704
 2685 0056 6369     		ldr	r3, [r4, #20]
 415:Src/pb_decode.c ****                 *(bool*)iter->pSize = true;
 2686              		.loc 1 415 36 view .LVU705
 2687 0058 2269     		ldr	r2, [r4, #16]
 415:Src/pb_decode.c ****                 *(bool*)iter->pSize = true;
 2688              		.loc 1 415 16 view .LVU706
 2689 005a 9342     		cmp	r3, r2
 2690 005c 01D0     		beq	.L265
 416:Src/pb_decode.c ****             return func(stream, iter->pos, iter->pData);
 2691              		.loc 1 416 17 is_stmt 1 view .LVU707
 416:Src/pb_decode.c ****             return func(stream, iter->pos, iter->pData);
 2692              		.loc 1 416 37 is_stmt 0 view .LVU708
 2693 005e 0122     		movs	r2, #1
 2694 0060 1A70     		strb	r2, [r3]
 2695              	.LVL231:
 2696              	.L265:
 417:Src/pb_decode.c ****     
 2697              		.loc 1 417 13 is_stmt 1 view .LVU709
 417:Src/pb_decode.c ****     
 2698              		.loc 1 417 20 is_stmt 0 view .LVU710
 2699 0062 2269     		ldr	r2, [r4, #16]
 2700 0064 6168     		ldr	r1, [r4, #4]
 2701              	.LVL232:
 417:Src/pb_decode.c ****     
 2702              		.loc 1 417 20 view .LVU711
 2703 0066 2846     		mov	r0, r5
 2704 0068 B847     		blx	r7
 2705              	.LVL233:
 2706 006a 0646     		mov	r6, r0
 2707 006c EFE7     		b	.L264
 2708              	.LVL234:
 2709              	.L262:
 420:Src/pb_decode.c ****                 && PB_LTYPE(type) <= PB_LTYPE_LAST_PACKABLE)
 2710              		.loc 1 420 13 is_stmt 1 view .LVU712
 420:Src/pb_decode.c ****                 && PB_LTYPE(type) <= PB_LTYPE_LAST_PACKABLE)
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 84


 2711              		.loc 1 420 16 is_stmt 0 view .LVU713
 2712 006e 0229     		cmp	r1, #2
 2713 0070 13D0     		beq	.L281
 2714              	.L266:
 2715              	.LBB10:
 452:Src/pb_decode.c ****                 char *pItem = (char*)iter->pData + iter->pos->data_size * (*size);
 2716              		.loc 1 452 17 is_stmt 1 view .LVU714
 452:Src/pb_decode.c ****                 char *pItem = (char*)iter->pData + iter->pos->data_size * (*size);
 2717              		.loc 1 452 28 is_stmt 0 view .LVU715
 2718 0072 6169     		ldr	r1, [r4, #20]
 2719              	.LVL235:
 453:Src/pb_decode.c **** 
 2720              		.loc 1 453 17 is_stmt 1 view .LVU716
 453:Src/pb_decode.c **** 
 2721              		.loc 1 453 42 is_stmt 0 view .LVU717
 2722 0074 2669     		ldr	r6, [r4, #16]
 453:Src/pb_decode.c **** 
 2723              		.loc 1 453 61 view .LVU718
 2724 0076 B0F80720 		ldrh	r2, [r0, #7]	@ unaligned
 453:Src/pb_decode.c **** 
 2725              		.loc 1 453 76 view .LVU719
 2726 007a 0B88     		ldrh	r3, [r1]
 453:Src/pb_decode.c **** 
 2727              		.loc 1 453 23 view .LVU720
 2728 007c 03FB0262 		mla	r2, r3, r2, r6
 2729              	.LVL236:
 455:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2730              		.loc 1 455 17 is_stmt 1 view .LVU721
 455:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2731              		.loc 1 455 28 is_stmt 0 view .LVU722
 2732 0080 581C     		adds	r0, r3, #1
 2733              	.LVL237:
 455:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2734              		.loc 1 455 28 view .LVU723
 2735 0082 0880     		strh	r0, [r1]	@ movhi
 2736              	.LVL238:
 455:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2737              		.loc 1 455 38 view .LVU724
 2738 0084 6168     		ldr	r1, [r4, #4]
 2739              	.LVL239:
 455:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2740              		.loc 1 455 43 view .LVU725
 2741 0086 B1F80900 		ldrh	r0, [r1, #9]	@ unaligned
 455:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2742              		.loc 1 455 20 view .LVU726
 2743 008a 8342     		cmp	r3, r0
 2744 008c 3BD3     		bcc	.L273
 456:Src/pb_decode.c **** 
 2745              		.loc 1 456 21 is_stmt 1 view .LVU727
 2746 008e EB68     		ldr	r3, [r5, #12]
 2747 0090 002B     		cmp	r3, #0
 2748 0092 36D0     		beq	.L282
 2749              	.L274:
 456:Src/pb_decode.c **** 
 2750              		.loc 1 456 21 is_stmt 0 discriminator 4 view .LVU728
 2751 0094 EB60     		str	r3, [r5, #12]
 2752 0096 0026     		movs	r6, #0
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 85


 2753 0098 D9E7     		b	.L264
 2754              	.LVL240:
 2755              	.L281:
 456:Src/pb_decode.c **** 
 2756              		.loc 1 456 21 discriminator 4 view .LVU729
 2757              	.LBE10:
 421:Src/pb_decode.c ****             {
 2758              		.loc 1 421 17 view .LVU730
 2759 009a 042A     		cmp	r2, #4
 2760 009c E9D8     		bhi	.L266
 2761              	.LBB11:
 424:Src/pb_decode.c ****                 pb_size_t *size = (pb_size_t*)iter->pSize;
 2762              		.loc 1 424 17 is_stmt 1 view .LVU731
 2763              	.LVL241:
 425:Src/pb_decode.c **** 
 2764              		.loc 1 425 17 view .LVU732
 425:Src/pb_decode.c **** 
 2765              		.loc 1 425 28 is_stmt 0 view .LVU733
 2766 009e D4F81480 		ldr	r8, [r4, #20]
 2767              	.LVL242:
 427:Src/pb_decode.c ****                 if (!pb_make_string_substream(stream, &substream))
 2768              		.loc 1 427 17 is_stmt 1 view .LVU734
 428:Src/pb_decode.c ****                     return false;
 2769              		.loc 1 428 17 view .LVU735
 428:Src/pb_decode.c ****                     return false;
 2770              		.loc 1 428 22 is_stmt 0 view .LVU736
 2771 00a2 6946     		mov	r1, sp
 2772              	.LVL243:
 428:Src/pb_decode.c ****                     return false;
 2773              		.loc 1 428 22 view .LVU737
 2774 00a4 2846     		mov	r0, r5
 2775              	.LVL244:
 428:Src/pb_decode.c ****                     return false;
 2776              		.loc 1 428 22 view .LVU738
 2777 00a6 FFF7FEFF 		bl	pb_make_string_substream
 2778              	.LVL245:
 428:Src/pb_decode.c ****                     return false;
 2779              		.loc 1 428 20 view .LVU739
 2780 00aa 0646     		mov	r6, r0
 2781 00ac 0028     		cmp	r0, #0
 2782 00ae CED0     		beq	.L264
 2783              	.L267:
 431:Src/pb_decode.c ****                 {
 2784              		.loc 1 431 33 view .LVU740
 2785 00b0 029B     		ldr	r3, [sp, #8]
 431:Src/pb_decode.c ****                 {
 2786              		.loc 1 431 23 view .LVU741
 2787 00b2 ABB1     		cbz	r3, .L269
 431:Src/pb_decode.c ****                 {
 2788              		.loc 1 431 52 discriminator 1 view .LVU742
 2789 00b4 B8F80030 		ldrh	r3, [r8]
 431:Src/pb_decode.c ****                 {
 2790              		.loc 1 431 64 discriminator 1 view .LVU743
 2791 00b8 6168     		ldr	r1, [r4, #4]
 431:Src/pb_decode.c ****                 {
 2792              		.loc 1 431 69 discriminator 1 view .LVU744
 2793 00ba B1F80920 		ldrh	r2, [r1, #9]	@ unaligned
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 86


 431:Src/pb_decode.c ****                 {
 2794              		.loc 1 431 49 discriminator 1 view .LVU745
 2795 00be 9342     		cmp	r3, r2
 2796 00c0 0ED2     		bcs	.L269
 2797              	.LBB12:
 433:Src/pb_decode.c ****                     if (!func(&substream, iter->pos, pItem))
 2798              		.loc 1 433 21 is_stmt 1 view .LVU746
 433:Src/pb_decode.c ****                     if (!func(&substream, iter->pos, pItem))
 2799              		.loc 1 433 46 is_stmt 0 view .LVU747
 2800 00c2 2269     		ldr	r2, [r4, #16]
 433:Src/pb_decode.c ****                     if (!func(&substream, iter->pos, pItem))
 2801              		.loc 1 433 65 view .LVU748
 2802 00c4 B1F80700 		ldrh	r0, [r1, #7]	@ unaligned
 2803              	.LVL246:
 434:Src/pb_decode.c ****                     {
 2804              		.loc 1 434 21 is_stmt 1 view .LVU749
 434:Src/pb_decode.c ****                     {
 2805              		.loc 1 434 26 is_stmt 0 view .LVU750
 2806 00c8 03FB0022 		mla	r2, r3, r0, r2
 2807              	.LVL247:
 434:Src/pb_decode.c ****                     {
 2808              		.loc 1 434 26 view .LVU751
 2809 00cc 6846     		mov	r0, sp
 2810 00ce B847     		blx	r7
 2811              	.LVL248:
 434:Src/pb_decode.c ****                     {
 2812              		.loc 1 434 24 view .LVU752
 2813 00d0 28B1     		cbz	r0, .L277
 439:Src/pb_decode.c ****                 }
 2814              		.loc 1 439 21 is_stmt 1 view .LVU753
 439:Src/pb_decode.c ****                 }
 2815              		.loc 1 439 22 is_stmt 0 view .LVU754
 2816 00d2 B8F80030 		ldrh	r3, [r8]
 439:Src/pb_decode.c ****                 }
 2817              		.loc 1 439 28 view .LVU755
 2818 00d6 0133     		adds	r3, r3, #1
 2819 00d8 A8F80030 		strh	r3, [r8]	@ movhi
 2820 00dc E8E7     		b	.L267
 2821              	.L277:
 436:Src/pb_decode.c ****                         break;
 2822              		.loc 1 436 32 view .LVU756
 2823 00de 0646     		mov	r6, r0
 2824              	.L269:
 2825              	.LVL249:
 436:Src/pb_decode.c ****                         break;
 2826              		.loc 1 436 32 view .LVU757
 2827              	.LBE12:
 442:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2828              		.loc 1 442 17 is_stmt 1 view .LVU758
 442:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2829              		.loc 1 442 30 is_stmt 0 view .LVU759
 2830 00e0 029B     		ldr	r3, [sp, #8]
 442:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "array overflow");
 2831              		.loc 1 442 20 view .LVU760
 2832 00e2 33B1     		cbz	r3, .L271
 443:Src/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 2833              		.loc 1 443 21 is_stmt 1 view .LVU761
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 87


 2834 00e4 EB68     		ldr	r3, [r5, #12]
 2835 00e6 13B1     		cbz	r3, .L283
 2836              	.L272:
 443:Src/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 2837              		.loc 1 443 21 is_stmt 0 discriminator 4 view .LVU762
 2838 00e8 EB60     		str	r3, [r5, #12]
 2839 00ea 0026     		movs	r6, #0
 2840              	.LVL250:
 443:Src/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 2841              		.loc 1 443 21 discriminator 4 view .LVU763
 2842 00ec AFE7     		b	.L264
 2843              	.LVL251:
 2844              	.L283:
 443:Src/pb_decode.c ****                 if (!pb_close_string_substream(stream, &substream))
 2845              		.loc 1 443 21 view .LVU764
 2846 00ee 134B     		ldr	r3, .L285+4
 2847 00f0 FAE7     		b	.L272
 2848              	.L271:
 444:Src/pb_decode.c ****                     return false;
 2849              		.loc 1 444 17 is_stmt 1 view .LVU765
 444:Src/pb_decode.c ****                     return false;
 2850              		.loc 1 444 22 is_stmt 0 view .LVU766
 2851 00f2 6946     		mov	r1, sp
 2852 00f4 2846     		mov	r0, r5
 2853 00f6 FFF7FEFF 		bl	pb_close_string_substream
 2854              	.LVL252:
 444:Src/pb_decode.c ****                     return false;
 2855              		.loc 1 444 20 view .LVU767
 2856 00fa 0028     		cmp	r0, #0
 2857 00fc A7D1     		bne	.L264
 445:Src/pb_decode.c **** 
 2858              		.loc 1 445 28 view .LVU768
 2859 00fe 0646     		mov	r6, r0
 2860              	.LVL253:
 445:Src/pb_decode.c **** 
 2861              		.loc 1 445 28 view .LVU769
 2862 0100 A5E7     		b	.L264
 2863              	.LVL254:
 2864              	.L282:
 445:Src/pb_decode.c **** 
 2865              		.loc 1 445 28 view .LVU770
 2866              	.LBE11:
 2867              	.LBB13:
 456:Src/pb_decode.c **** 
 2868              		.loc 1 456 21 view .LVU771
 2869 0102 0E4B     		ldr	r3, .L285+4
 2870 0104 C6E7     		b	.L274
 2871              	.L273:
 458:Src/pb_decode.c ****             }
 2872              		.loc 1 458 17 is_stmt 1 view .LVU772
 458:Src/pb_decode.c ****             }
 2873              		.loc 1 458 24 is_stmt 0 view .LVU773
 2874 0106 2846     		mov	r0, r5
 2875 0108 B847     		blx	r7
 2876              	.LVL255:
 458:Src/pb_decode.c ****             }
 2877              		.loc 1 458 24 view .LVU774
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 88


 2878 010a 0646     		mov	r6, r0
 2879 010c 9FE7     		b	.L264
 2880              	.L280:
 458:Src/pb_decode.c ****             }
 2881              		.loc 1 458 24 view .LVU775
 2882              	.LBE13:
 467:Src/pb_decode.c ****                 pb_message_set_to_defaults((const pb_field_t*)iter->pos->ptr, iter->pData);
 2883              		.loc 1 467 17 is_stmt 1 view .LVU776
 467:Src/pb_decode.c ****                 pb_message_set_to_defaults((const pb_field_t*)iter->pos->ptr, iter->pData);
 2884              		.loc 1 467 44 is_stmt 0 view .LVU777
 2885 010e 6368     		ldr	r3, [r4, #4]
 467:Src/pb_decode.c ****                 pb_message_set_to_defaults((const pb_field_t*)iter->pos->ptr, iter->pData);
 2886              		.loc 1 467 17 view .LVU778
 2887 0110 B3F80720 		ldrh	r2, [r3, #7]	@ unaligned
 2888 0114 0021     		movs	r1, #0
 2889 0116 2069     		ldr	r0, [r4, #16]
 2890 0118 FFF7FEFF 		bl	memset
 2891              	.LVL256:
 468:Src/pb_decode.c ****             }
 2892              		.loc 1 468 17 is_stmt 1 view .LVU779
 468:Src/pb_decode.c ****             }
 2893              		.loc 1 468 67 is_stmt 0 view .LVU780
 2894 011c 6368     		ldr	r3, [r4, #4]
 468:Src/pb_decode.c ****             }
 2895              		.loc 1 468 17 view .LVU781
 2896 011e 2169     		ldr	r1, [r4, #16]
 2897 0120 D3F80B00 		ldr	r0, [r3, #11]	@ unaligned
 2898 0124 FFF7FEFF 		bl	pb_message_set_to_defaults
 2899              	.LVL257:
 2900 0128 84E7     		b	.L275
 2901              	.LVL258:
 2902              	.L261:
 473:Src/pb_decode.c ****     }
 2903              		.loc 1 473 13 is_stmt 1 view .LVU782
 2904 012a EB68     		ldr	r3, [r5, #12]
 2905 012c 13B1     		cbz	r3, .L284
 2906              	.L276:
 473:Src/pb_decode.c ****     }
 2907              		.loc 1 473 13 is_stmt 0 discriminator 4 view .LVU783
 2908 012e EB60     		str	r3, [r5, #12]
 2909              	.LVL259:
 473:Src/pb_decode.c ****     }
 2910              		.loc 1 473 13 discriminator 4 view .LVU784
 2911 0130 0026     		movs	r6, #0
 2912 0132 8CE7     		b	.L264
 2913              	.LVL260:
 2914              	.L284:
 473:Src/pb_decode.c ****     }
 2915              		.loc 1 473 13 view .LVU785
 2916 0134 024B     		ldr	r3, .L285+8
 2917 0136 FAE7     		b	.L276
 2918              	.L286:
 2919              		.align	2
 2920              	.L285:
 2921 0138 00000000 		.word	.LANCHOR0
 2922 013c 00000000 		.word	.LC12
 2923 0140 10000000 		.word	.LC13
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 89


 2924              		.cfi_endproc
 2925              	.LFE14:
 2927              		.section	.text.decode_callback_field,"ax",%progbits
 2928              		.align	1
 2929              		.syntax unified
 2930              		.thumb
 2931              		.thumb_func
 2932              		.fpu fpv4-sp-d16
 2934              	decode_callback_field:
 2935              	.LVL261:
 2936              	.LFB16:
 659:Src/pb_decode.c ****     pb_callback_t *pCallback = (pb_callback_t*)iter->pData;
 2937              		.loc 1 659 1 is_stmt 1 view -0
 2938              		.cfi_startproc
 2939              		@ args = 0, pretend = 0, frame = 48
 2940              		@ frame_needed = 0, uses_anonymous_args = 0
 659:Src/pb_decode.c ****     pb_callback_t *pCallback = (pb_callback_t*)iter->pData;
 2941              		.loc 1 659 1 is_stmt 0 view .LVU787
 2942 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2943              	.LCFI71:
 2944              		.cfi_def_cfa_offset 24
 2945              		.cfi_offset 4, -24
 2946              		.cfi_offset 5, -20
 2947              		.cfi_offset 6, -16
 2948              		.cfi_offset 7, -12
 2949              		.cfi_offset 8, -8
 2950              		.cfi_offset 14, -4
 2951 0004 8CB0     		sub	sp, sp, #48
 2952              	.LCFI72:
 2953              		.cfi_def_cfa_offset 72
 2954 0006 0746     		mov	r7, r0
 660:Src/pb_decode.c ****     
 2955              		.loc 1 660 5 is_stmt 1 view .LVU788
 660:Src/pb_decode.c ****     
 2956              		.loc 1 660 20 is_stmt 0 view .LVU789
 2957 0008 1469     		ldr	r4, [r2, #16]
 2958              	.LVL262:
 665:Src/pb_decode.c **** #endif
 2959              		.loc 1 665 5 is_stmt 1 view .LVU790
 668:Src/pb_decode.c ****         return pb_skip_field(stream, wire_type);
 2960              		.loc 1 668 5 view .LVU791
 668:Src/pb_decode.c ****         return pb_skip_field(stream, wire_type);
 2961              		.loc 1 668 8 is_stmt 0 view .LVU792
 2962 000a FCB1     		cbz	r4, .L288
 2963 000c 1546     		mov	r5, r2
 2964 000e 261D     		adds	r6, r4, #4
 2965              	.LVL263:
 668:Src/pb_decode.c ****         return pb_skip_field(stream, wire_type);
 2966              		.loc 1 668 46 discriminator 1 view .LVU793
 2967 0010 2368     		ldr	r3, [r4]
 668:Src/pb_decode.c ****         return pb_skip_field(stream, wire_type);
 2968              		.loc 1 668 27 discriminator 1 view .LVU794
 2969 0012 DBB1     		cbz	r3, .L288
 671:Src/pb_decode.c ****     {
 2970              		.loc 1 671 5 is_stmt 1 view .LVU795
 671:Src/pb_decode.c ****     {
 2971              		.loc 1 671 8 is_stmt 0 view .LVU796
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 90


 2972 0014 0229     		cmp	r1, #2
 2973 0016 21D0     		beq	.L298
 2974              	.LBB14:
 695:Src/pb_decode.c ****         pb_byte_t buffer[10];
 2975              		.loc 1 695 9 is_stmt 1 view .LVU797
 696:Src/pb_decode.c ****         size_t size = sizeof(buffer);
 2976              		.loc 1 696 9 view .LVU798
 697:Src/pb_decode.c ****         
 2977              		.loc 1 697 9 view .LVU799
 697:Src/pb_decode.c ****         
 2978              		.loc 1 697 16 is_stmt 0 view .LVU800
 2979 0018 0A23     		movs	r3, #10
 2980 001a 0493     		str	r3, [sp, #16]
 699:Src/pb_decode.c ****             return false;
 2981              		.loc 1 699 9 is_stmt 1 view .LVU801
 699:Src/pb_decode.c ****             return false;
 2982              		.loc 1 699 14 is_stmt 0 view .LVU802
 2983 001c 04AB     		add	r3, sp, #16
 2984 001e 05AA     		add	r2, sp, #20
 2985              	.LVL264:
 699:Src/pb_decode.c ****             return false;
 2986              		.loc 1 699 14 view .LVU803
 2987 0020 FFF7FEFF 		bl	read_raw_value
 2988              	.LVL265:
 699:Src/pb_decode.c ****             return false;
 2989              		.loc 1 699 12 view .LVU804
 2990 0024 0346     		mov	r3, r0
 2991 0026 A8B1     		cbz	r0, .L290
 701:Src/pb_decode.c ****         
 2992              		.loc 1 701 9 is_stmt 1 view .LVU805
 701:Src/pb_decode.c ****         
 2993              		.loc 1 701 21 is_stmt 0 view .LVU806
 2994 0028 E846     		mov	r8, sp
 2995 002a 049A     		ldr	r2, [sp, #16]
 2996 002c 05A9     		add	r1, sp, #20
 2997 002e 4046     		mov	r0, r8
 2998 0030 FFF7FEFF 		bl	pb_istream_from_buffer
 2999              	.LVL266:
 3000 0034 08AF     		add	r7, sp, #32
 3001              	.LVL267:
 701:Src/pb_decode.c ****         
 3002              		.loc 1 701 21 view .LVU807
 3003 0036 98E80F00 		ldm	r8, {r0, r1, r2, r3}
 3004 003a 87E80F00 		stm	r7, {r0, r1, r2, r3}
 703:Src/pb_decode.c ****     }
 3005              		.loc 1 703 9 is_stmt 1 view .LVU808
 703:Src/pb_decode.c ****     }
 3006              		.loc 1 703 32 is_stmt 0 view .LVU809
 3007 003e 2368     		ldr	r3, [r4]
 703:Src/pb_decode.c ****     }
 3008              		.loc 1 703 16 view .LVU810
 3009 0040 3246     		mov	r2, r6
 3010 0042 6968     		ldr	r1, [r5, #4]
 3011 0044 3846     		mov	r0, r7
 3012 0046 9847     		blx	r3
 3013              	.LVL268:
 3014 0048 0346     		mov	r3, r0
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 91


 3015 004a 03E0     		b	.L290
 3016              	.LVL269:
 3017              	.L288:
 703:Src/pb_decode.c ****     }
 3018              		.loc 1 703 16 view .LVU811
 3019              	.LBE14:
 669:Src/pb_decode.c ****     
 3020              		.loc 1 669 9 is_stmt 1 view .LVU812
 669:Src/pb_decode.c ****     
 3021              		.loc 1 669 16 is_stmt 0 view .LVU813
 3022 004c 3846     		mov	r0, r7
 3023              	.LVL270:
 669:Src/pb_decode.c ****     
 3024              		.loc 1 669 16 view .LVU814
 3025 004e FFF7FEFF 		bl	pb_skip_field
 3026              	.LVL271:
 669:Src/pb_decode.c ****     
 3027              		.loc 1 669 16 view .LVU815
 3028 0052 0346     		mov	r3, r0
 3029              	.LVL272:
 3030              	.L290:
 705:Src/pb_decode.c **** 
 3031              		.loc 1 705 1 discriminator 1 view .LVU816
 3032 0054 1846     		mov	r0, r3
 3033 0056 0CB0     		add	sp, sp, #48
 3034              	.LCFI73:
 3035              		.cfi_remember_state
 3036              		.cfi_def_cfa_offset 24
 3037              		@ sp needed
 3038 0058 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3039              	.LVL273:
 3040              	.L298:
 3041              	.LCFI74:
 3042              		.cfi_restore_state
 3043              	.LBB15:
 673:Src/pb_decode.c ****         
 3044              		.loc 1 673 9 is_stmt 1 view .LVU817
 675:Src/pb_decode.c ****             return false;
 3045              		.loc 1 675 9 view .LVU818
 675:Src/pb_decode.c ****             return false;
 3046              		.loc 1 675 14 is_stmt 0 view .LVU819
 3047 005c 08A9     		add	r1, sp, #32
 3048              	.LVL274:
 675:Src/pb_decode.c ****             return false;
 3049              		.loc 1 675 14 view .LVU820
 3050 005e FFF7FEFF 		bl	pb_make_string_substream
 3051              	.LVL275:
 675:Src/pb_decode.c ****             return false;
 3052              		.loc 1 675 12 view .LVU821
 3053 0062 0346     		mov	r3, r0
 3054 0064 0028     		cmp	r0, #0
 3055 0066 F5D0     		beq	.L290
 3056              	.L295:
 678:Src/pb_decode.c ****         {
 3057              		.loc 1 678 9 is_stmt 1 view .LVU822
 680:Src/pb_decode.c ****                 PB_RETURN_ERROR(stream, "callback failed");
 3058              		.loc 1 680 13 view .LVU823
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 92


 680:Src/pb_decode.c ****                 PB_RETURN_ERROR(stream, "callback failed");
 3059              		.loc 1 680 34 is_stmt 0 view .LVU824
 3060 0068 2368     		ldr	r3, [r4]
 680:Src/pb_decode.c ****                 PB_RETURN_ERROR(stream, "callback failed");
 3061              		.loc 1 680 18 view .LVU825
 3062 006a 3246     		mov	r2, r6
 3063 006c 6968     		ldr	r1, [r5, #4]
 3064 006e 08A8     		add	r0, sp, #32
 3065 0070 9847     		blx	r3
 3066              	.LVL276:
 680:Src/pb_decode.c ****                 PB_RETURN_ERROR(stream, "callback failed");
 3067              		.loc 1 680 16 view .LVU826
 3068 0072 0346     		mov	r3, r0
 3069 0074 40B1     		cbz	r0, .L299
 682:Src/pb_decode.c ****         
 3070              		.loc 1 682 27 view .LVU827
 3071 0076 0A9B     		ldr	r3, [sp, #40]
 682:Src/pb_decode.c ****         
 3072              		.loc 1 682 9 view .LVU828
 3073 0078 002B     		cmp	r3, #0
 3074 007a F5D1     		bne	.L295
 684:Src/pb_decode.c ****             return false;
 3075              		.loc 1 684 9 is_stmt 1 view .LVU829
 684:Src/pb_decode.c ****             return false;
 3076              		.loc 1 684 14 is_stmt 0 view .LVU830
 3077 007c 08A9     		add	r1, sp, #32
 3078 007e 3846     		mov	r0, r7
 3079 0080 FFF7FEFF 		bl	pb_close_string_substream
 3080              	.LVL277:
 3081 0084 0346     		mov	r3, r0
 3082 0086 E5E7     		b	.L290
 3083              	.L299:
 681:Src/pb_decode.c ****         } while (substream.bytes_left);
 3084              		.loc 1 681 17 is_stmt 1 view .LVU831
 3085 0088 FA68     		ldr	r2, [r7, #12]
 3086 008a 0AB1     		cbz	r2, .L300
 3087              	.L294:
 681:Src/pb_decode.c ****         } while (substream.bytes_left);
 3088              		.loc 1 681 17 is_stmt 0 discriminator 4 view .LVU832
 3089 008c FA60     		str	r2, [r7, #12]
 3090 008e E1E7     		b	.L290
 3091              	.L300:
 681:Src/pb_decode.c ****         } while (substream.bytes_left);
 3092              		.loc 1 681 17 view .LVU833
 3093 0090 004A     		ldr	r2, .L301
 3094 0092 FBE7     		b	.L294
 3095              	.L302:
 3096              		.align	2
 3097              	.L301:
 3098 0094 00000000 		.word	.LC14
 3099              	.LBE15:
 3100              		.cfi_endproc
 3101              	.LFE16:
 3103              		.section	.text.decode_field,"ax",%progbits
 3104              		.align	1
 3105              		.syntax unified
 3106              		.thumb
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 93


 3107              		.thumb_func
 3108              		.fpu fpv4-sp-d16
 3110              	decode_field:
 3111              	.LVL278:
 3112              	.LFB17:
 708:Src/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
 3113              		.loc 1 708 1 is_stmt 1 view -0
 3114              		.cfi_startproc
 3115              		@ args = 0, pretend = 0, frame = 0
 3116              		@ frame_needed = 0, uses_anonymous_args = 0
 708:Src/pb_decode.c **** #ifdef PB_ENABLE_MALLOC
 3117              		.loc 1 708 1 is_stmt 0 view .LVU835
 3118 0000 08B5     		push	{r3, lr}
 3119              	.LCFI75:
 3120              		.cfi_def_cfa_offset 8
 3121              		.cfi_offset 3, -8
 3122              		.cfi_offset 14, -4
 719:Src/pb_decode.c ****     {
 3123              		.loc 1 719 5 is_stmt 1 view .LVU836
 719:Src/pb_decode.c ****     {
 3124              		.loc 1 719 13 is_stmt 0 view .LVU837
 3125 0002 5368     		ldr	r3, [r2, #4]
 3126 0004 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 3127 0006 03F0C003 		and	r3, r3, #192
 719:Src/pb_decode.c ****     {
 3128              		.loc 1 719 5 view .LVU838
 3129 000a 402B     		cmp	r3, #64
 3130 000c 0DD0     		beq	.L304
 3131 000e 802B     		cmp	r3, #128
 3132 0010 08D0     		beq	.L305
 3133 0012 23B1     		cbz	r3, .L310
 731:Src/pb_decode.c ****     }
 3134              		.loc 1 731 13 is_stmt 1 view .LVU839
 3135 0014 C368     		ldr	r3, [r0, #12]
 3136 0016 5BB1     		cbz	r3, .L311
 3137              	.L308:
 731:Src/pb_decode.c ****     }
 3138              		.loc 1 731 13 is_stmt 0 discriminator 4 view .LVU840
 3139 0018 C360     		str	r3, [r0, #12]
 3140 001a 0020     		movs	r0, #0
 3141              	.LVL279:
 731:Src/pb_decode.c ****     }
 3142              		.loc 1 731 13 discriminator 4 view .LVU841
 3143 001c 01E0     		b	.L307
 3144              	.LVL280:
 3145              	.L310:
 722:Src/pb_decode.c ****         
 3146              		.loc 1 722 13 is_stmt 1 view .LVU842
 722:Src/pb_decode.c ****         
 3147              		.loc 1 722 20 is_stmt 0 view .LVU843
 3148 001e FFF7FEFF 		bl	decode_static_field
 3149              	.LVL281:
 3150              	.L307:
 733:Src/pb_decode.c **** 
 3151              		.loc 1 733 1 view .LVU844
 3152 0022 08BD     		pop	{r3, pc}
 3153              	.LVL282:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 94


 3154              	.L305:
 725:Src/pb_decode.c ****         
 3155              		.loc 1 725 13 is_stmt 1 view .LVU845
 725:Src/pb_decode.c ****         
 3156              		.loc 1 725 20 is_stmt 0 view .LVU846
 3157 0024 FFF7FEFF 		bl	decode_pointer_field
 3158              	.LVL283:
 725:Src/pb_decode.c ****         
 3159              		.loc 1 725 20 view .LVU847
 3160 0028 FBE7     		b	.L307
 3161              	.LVL284:
 3162              	.L304:
 728:Src/pb_decode.c ****         
 3163              		.loc 1 728 13 is_stmt 1 view .LVU848
 728:Src/pb_decode.c ****         
 3164              		.loc 1 728 20 is_stmt 0 view .LVU849
 3165 002a FFF7FEFF 		bl	decode_callback_field
 3166              	.LVL285:
 728:Src/pb_decode.c ****         
 3167              		.loc 1 728 20 view .LVU850
 3168 002e F8E7     		b	.L307
 3169              	.LVL286:
 3170              	.L311:
 731:Src/pb_decode.c ****     }
 3171              		.loc 1 731 13 view .LVU851
 3172 0030 004B     		ldr	r3, .L312
 3173 0032 F1E7     		b	.L308
 3174              	.L313:
 3175              		.align	2
 3176              	.L312:
 3177 0034 10000000 		.word	.LC13
 3178              		.cfi_endproc
 3179              	.LFE17:
 3181              		.section	.text.default_extension_decoder,"ax",%progbits
 3182              		.align	1
 3183              		.syntax unified
 3184              		.thumb
 3185              		.thumb_func
 3186              		.fpu fpv4-sp-d16
 3188              	default_extension_decoder:
 3189              	.LVL287:
 3190              	.LFB19:
 758:Src/pb_decode.c ****     const pb_field_t *field = (const pb_field_t*)extension->type->arg;
 3191              		.loc 1 758 1 is_stmt 1 view -0
 3192              		.cfi_startproc
 3193              		@ args = 0, pretend = 0, frame = 24
 3194              		@ frame_needed = 0, uses_anonymous_args = 0
 758:Src/pb_decode.c ****     const pb_field_t *field = (const pb_field_t*)extension->type->arg;
 3195              		.loc 1 758 1 is_stmt 0 view .LVU853
 3196 0000 70B5     		push	{r4, r5, r6, lr}
 3197              	.LCFI76:
 3198              		.cfi_def_cfa_offset 16
 3199              		.cfi_offset 4, -16
 3200              		.cfi_offset 5, -12
 3201              		.cfi_offset 6, -8
 3202              		.cfi_offset 14, -4
 3203 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 95


 3204              	.LCFI77:
 3205              		.cfi_def_cfa_offset 40
 759:Src/pb_decode.c ****     pb_field_iter_t iter;
 3206              		.loc 1 759 5 is_stmt 1 view .LVU854
 759:Src/pb_decode.c ****     pb_field_iter_t iter;
 3207              		.loc 1 759 59 is_stmt 0 view .LVU855
 3208 0004 0C68     		ldr	r4, [r1]
 759:Src/pb_decode.c ****     pb_field_iter_t iter;
 3209              		.loc 1 759 23 view .LVU856
 3210 0006 A468     		ldr	r4, [r4, #8]
 3211              	.LVL288:
 760:Src/pb_decode.c ****     
 3212              		.loc 1 760 5 is_stmt 1 view .LVU857
 762:Src/pb_decode.c ****         return true;
 3213              		.loc 1 762 5 view .LVU858
 762:Src/pb_decode.c ****         return true;
 3214              		.loc 1 762 14 is_stmt 0 view .LVU859
 3215 0008 2488     		ldrh	r4, [r4]	@ unaligned
 3216              	.LVL289:
 762:Src/pb_decode.c ****         return true;
 3217              		.loc 1 762 8 view .LVU860
 3218 000a 9442     		cmp	r4, r2
 3219 000c 02D0     		beq	.L318
 763:Src/pb_decode.c ****     
 3220              		.loc 1 763 16 view .LVU861
 3221 000e 0120     		movs	r0, #1
 3222              	.LVL290:
 3223              	.L315:
 768:Src/pb_decode.c **** 
 3224              		.loc 1 768 1 view .LVU862
 3225 0010 06B0     		add	sp, sp, #24
 3226              	.LCFI78:
 3227              		.cfi_remember_state
 3228              		.cfi_def_cfa_offset 16
 3229              		@ sp needed
 3230 0012 70BD     		pop	{r4, r5, r6, pc}
 3231              	.LVL291:
 3232              	.L318:
 3233              	.LCFI79:
 3234              		.cfi_restore_state
 768:Src/pb_decode.c **** 
 3235              		.loc 1 768 1 view .LVU863
 3236 0014 1E46     		mov	r6, r3
 3237 0016 0C46     		mov	r4, r1
 3238 0018 0546     		mov	r5, r0
 765:Src/pb_decode.c ****     extension->found = true;
 3239              		.loc 1 765 5 is_stmt 1 view .LVU864
 3240 001a 6846     		mov	r0, sp
 3241              	.LVL292:
 765:Src/pb_decode.c ****     extension->found = true;
 3242              		.loc 1 765 5 is_stmt 0 view .LVU865
 3243 001c FFF7FEFF 		bl	iter_from_extension
 3244              	.LVL293:
 766:Src/pb_decode.c ****     return decode_field(stream, wire_type, &iter);
 3245              		.loc 1 766 5 is_stmt 1 view .LVU866
 766:Src/pb_decode.c ****     return decode_field(stream, wire_type, &iter);
 3246              		.loc 1 766 22 is_stmt 0 view .LVU867
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 96


 3247 0020 0123     		movs	r3, #1
 3248 0022 2373     		strb	r3, [r4, #12]
 767:Src/pb_decode.c **** }
 3249              		.loc 1 767 5 is_stmt 1 view .LVU868
 767:Src/pb_decode.c **** }
 3250              		.loc 1 767 12 is_stmt 0 view .LVU869
 3251 0024 6A46     		mov	r2, sp
 3252 0026 3146     		mov	r1, r6
 3253 0028 2846     		mov	r0, r5
 3254 002a FFF7FEFF 		bl	decode_field
 3255              	.LVL294:
 3256 002e EFE7     		b	.L315
 3257              		.cfi_endproc
 3258              	.LFE19:
 3260              		.section	.text.decode_extension,"ax",%progbits
 3261              		.align	1
 3262              		.syntax unified
 3263              		.thumb
 3264              		.thumb_func
 3265              		.fpu fpv4-sp-d16
 3267              	decode_extension:
 3268              	.LVL295:
 3269              	.LFB20:
 774:Src/pb_decode.c ****     pb_extension_t *extension = *(pb_extension_t* const *)iter->pData;
 3270              		.loc 1 774 1 is_stmt 1 view -0
 3271              		.cfi_startproc
 3272              		@ args = 0, pretend = 0, frame = 0
 3273              		@ frame_needed = 0, uses_anonymous_args = 0
 774:Src/pb_decode.c ****     pb_extension_t *extension = *(pb_extension_t* const *)iter->pData;
 3274              		.loc 1 774 1 is_stmt 0 view .LVU871
 3275 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3276              	.LCFI80:
 3277              		.cfi_def_cfa_offset 32
 3278              		.cfi_offset 3, -32
 3279              		.cfi_offset 4, -28
 3280              		.cfi_offset 5, -24
 3281              		.cfi_offset 6, -20
 3282              		.cfi_offset 7, -16
 3283              		.cfi_offset 8, -12
 3284              		.cfi_offset 9, -8
 3285              		.cfi_offset 14, -4
 3286 0004 0646     		mov	r6, r0
 3287 0006 8946     		mov	r9, r1
 3288 0008 9046     		mov	r8, r2
 775:Src/pb_decode.c ****     size_t pos = stream->bytes_left;
 3289              		.loc 1 775 5 is_stmt 1 view .LVU872
 775:Src/pb_decode.c ****     size_t pos = stream->bytes_left;
 3290              		.loc 1 775 63 is_stmt 0 view .LVU873
 3291 000a 1B69     		ldr	r3, [r3, #16]
 3292              	.LVL296:
 775:Src/pb_decode.c ****     size_t pos = stream->bytes_left;
 3293              		.loc 1 775 21 view .LVU874
 3294 000c 1C68     		ldr	r4, [r3]
 3295              	.LVL297:
 776:Src/pb_decode.c ****     
 3296              		.loc 1 776 5 is_stmt 1 view .LVU875
 776:Src/pb_decode.c ****     
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 97


 3297              		.loc 1 776 12 is_stmt 0 view .LVU876
 3298 000e 8768     		ldr	r7, [r0, #8]
 3299              	.LVL298:
 778:Src/pb_decode.c ****     {
 3300              		.loc 1 778 5 is_stmt 1 view .LVU877
 778:Src/pb_decode.c ****     {
 3301              		.loc 1 778 11 is_stmt 0 view .LVU878
 3302 0010 07E0     		b	.L320
 3303              	.LVL299:
 3304              	.L321:
 3305              	.LBB16:
 784:Src/pb_decode.c **** 
 3306              		.loc 1 784 13 is_stmt 1 view .LVU879
 784:Src/pb_decode.c **** 
 3307              		.loc 1 784 22 is_stmt 0 view .LVU880
 3308 0012 4346     		mov	r3, r8
 3309 0014 4A46     		mov	r2, r9
 3310 0016 2146     		mov	r1, r4
 3311 0018 3046     		mov	r0, r6
 3312 001a FFF7FEFF 		bl	default_extension_decoder
 3313              	.LVL300:
 3314              	.L322:
 786:Src/pb_decode.c ****             return false;
 3315              		.loc 1 786 9 is_stmt 1 view .LVU881
 786:Src/pb_decode.c ****             return false;
 3316              		.loc 1 786 12 is_stmt 0 view .LVU882
 3317 001e 88B1     		cbz	r0, .L323
 789:Src/pb_decode.c ****     }
 3318              		.loc 1 789 9 is_stmt 1 view .LVU883
 789:Src/pb_decode.c ****     }
 3319              		.loc 1 789 19 is_stmt 0 view .LVU884
 3320 0020 A468     		ldr	r4, [r4, #8]
 3321              	.LVL301:
 3322              	.L320:
 789:Src/pb_decode.c ****     }
 3323              		.loc 1 789 19 view .LVU885
 3324              	.LBE16:
 778:Src/pb_decode.c ****     {
 3325              		.loc 1 778 11 view .LVU886
 3326 0022 74B1     		cbz	r4, .L325
 778:Src/pb_decode.c ****     {
 3327              		.loc 1 778 46 discriminator 1 view .LVU887
 3328 0024 B368     		ldr	r3, [r6, #8]
 778:Src/pb_decode.c ****     {
 3329              		.loc 1 778 30 discriminator 1 view .LVU888
 3330 0026 BB42     		cmp	r3, r7
 3331 0028 09D1     		bne	.L327
 3332              	.LBB17:
 780:Src/pb_decode.c ****         if (extension->type->decode)
 3333              		.loc 1 780 9 is_stmt 1 view .LVU889
 781:Src/pb_decode.c ****             status = extension->type->decode(stream, extension, tag, wire_type);
 3334              		.loc 1 781 9 view .LVU890
 781:Src/pb_decode.c ****             status = extension->type->decode(stream, extension, tag, wire_type);
 3335              		.loc 1 781 22 is_stmt 0 view .LVU891
 3336 002a 2368     		ldr	r3, [r4]
 781:Src/pb_decode.c ****             status = extension->type->decode(stream, extension, tag, wire_type);
 3337              		.loc 1 781 28 view .LVU892
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 98


 3338 002c 1D68     		ldr	r5, [r3]
 781:Src/pb_decode.c ****             status = extension->type->decode(stream, extension, tag, wire_type);
 3339              		.loc 1 781 12 view .LVU893
 3340 002e 002D     		cmp	r5, #0
 3341 0030 EFD0     		beq	.L321
 782:Src/pb_decode.c ****         else
 3342              		.loc 1 782 13 is_stmt 1 view .LVU894
 782:Src/pb_decode.c ****         else
 3343              		.loc 1 782 22 is_stmt 0 view .LVU895
 3344 0032 4346     		mov	r3, r8
 3345 0034 4A46     		mov	r2, r9
 3346 0036 2146     		mov	r1, r4
 3347 0038 3046     		mov	r0, r6
 3348 003a A847     		blx	r5
 3349              	.LVL302:
 782:Src/pb_decode.c ****         else
 3350              		.loc 1 782 22 view .LVU896
 3351 003c EFE7     		b	.L322
 3352              	.LVL303:
 3353              	.L327:
 782:Src/pb_decode.c ****         else
 3354              		.loc 1 782 22 view .LVU897
 3355              	.LBE17:
 792:Src/pb_decode.c **** }
 3356              		.loc 1 792 12 view .LVU898
 3357 003e 0120     		movs	r0, #1
 3358 0040 00E0     		b	.L323
 3359              	.L325:
 792:Src/pb_decode.c **** }
 3360              		.loc 1 792 12 view .LVU899
 3361 0042 0120     		movs	r0, #1
 3362              	.L323:
 793:Src/pb_decode.c **** 
 3363              		.loc 1 793 1 view .LVU900
 3364 0044 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 793:Src/pb_decode.c **** 
 3365              		.loc 1 793 1 view .LVU901
 3366              		.cfi_endproc
 3367              	.LFE20:
 3369              		.section	.text.pb_decode_noinit,"ax",%progbits
 3370              		.align	1
 3371              		.global	pb_decode_noinit
 3372              		.syntax unified
 3373              		.thumb
 3374              		.thumb_func
 3375              		.fpu fpv4-sp-d16
 3377              	pb_decode_noinit:
 3378              	.LVL304:
 3379              	.LFB24:
 902:Src/pb_decode.c ****     uint32_t fields_seen[(PB_MAX_REQUIRED_FIELDS + 31) / 32] = {0, 0};
 3380              		.loc 1 902 1 is_stmt 1 view -0
 3381              		.cfi_startproc
 3382              		@ args = 0, pretend = 0, frame = 48
 3383              		@ frame_needed = 0, uses_anonymous_args = 0
 902:Src/pb_decode.c ****     uint32_t fields_seen[(PB_MAX_REQUIRED_FIELDS + 31) / 32] = {0, 0};
 3384              		.loc 1 902 1 is_stmt 0 view .LVU903
 3385 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 99


 3386              	.LCFI81:
 3387              		.cfi_def_cfa_offset 20
 3388              		.cfi_offset 4, -20
 3389              		.cfi_offset 5, -16
 3390              		.cfi_offset 6, -12
 3391              		.cfi_offset 7, -8
 3392              		.cfi_offset 14, -4
 3393 0002 8DB0     		sub	sp, sp, #52
 3394              	.LCFI82:
 3395              		.cfi_def_cfa_offset 72
 3396 0004 0446     		mov	r4, r0
 903:Src/pb_decode.c ****     const uint32_t allbits = ~(uint32_t)0;
 3397              		.loc 1 903 5 is_stmt 1 view .LVU904
 903:Src/pb_decode.c ****     const uint32_t allbits = ~(uint32_t)0;
 3398              		.loc 1 903 14 is_stmt 0 view .LVU905
 3399 0006 0025     		movs	r5, #0
 3400 0008 0A95     		str	r5, [sp, #40]
 3401 000a 0B95     		str	r5, [sp, #44]
 904:Src/pb_decode.c ****     uint32_t extension_range_start = 0;
 3402              		.loc 1 904 5 is_stmt 1 view .LVU906
 3403              	.LVL305:
 905:Src/pb_decode.c ****     pb_field_iter_t iter;
 3404              		.loc 1 905 5 view .LVU907
 906:Src/pb_decode.c **** 
 3405              		.loc 1 906 5 view .LVU908
 912:Src/pb_decode.c ****     pb_size_t fixed_count_size = 0;
 3406              		.loc 1 912 5 view .LVU909
 913:Src/pb_decode.c **** 
 3407              		.loc 1 913 5 view .LVU910
 913:Src/pb_decode.c **** 
 3408              		.loc 1 913 15 is_stmt 0 view .LVU911
 3409 000c ADF80E50 		strh	r5, [sp, #14]	@ movhi
 917:Src/pb_decode.c **** 
 3410              		.loc 1 917 5 is_stmt 1 view .LVU912
 917:Src/pb_decode.c **** 
 3411              		.loc 1 917 11 is_stmt 0 view .LVU913
 3412 0010 04A8     		add	r0, sp, #16
 3413              	.LVL306:
 917:Src/pb_decode.c **** 
 3414              		.loc 1 917 11 view .LVU914
 3415 0012 FFF7FEFF 		bl	pb_field_iter_begin
 3416              	.LVL307:
 919:Src/pb_decode.c ****     {
 3417              		.loc 1 919 5 is_stmt 1 view .LVU915
 912:Src/pb_decode.c ****     pb_size_t fixed_count_size = 0;
 3418              		.loc 1 912 23 is_stmt 0 view .LVU916
 3419 0016 2E46     		mov	r6, r5
 919:Src/pb_decode.c ****     {
 3420              		.loc 1 919 11 view .LVU917
 3421 0018 44E0     		b	.L329
 3422              	.LVL308:
 3423              	.L363:
 3424              	.LBB18:
 927:Src/pb_decode.c ****                 break;
 3425              		.loc 1 927 13 is_stmt 1 view .LVU918
 927:Src/pb_decode.c ****                 break;
 3426              		.loc 1 927 17 is_stmt 0 view .LVU919
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 100


 3427 001a 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 927:Src/pb_decode.c ****                 break;
 3428              		.loc 1 927 16 view .LVU920
 3429 001e 002B     		cmp	r3, #0
 3430 0020 67D0     		beq	.L332
 3431              	.L343:
 3432              	.LBE18:
1000:Src/pb_decode.c ****         fixed_count_size != fixed_count_field->array_size)
 3433              		.loc 1 1000 5 is_stmt 1 view .LVU921
1000:Src/pb_decode.c ****         fixed_count_size != fixed_count_field->array_size)
 3434              		.loc 1 1000 8 is_stmt 0 view .LVU922
 3435 0022 002E     		cmp	r6, #0
 3436 0024 00F08680 		beq	.L348
1001:Src/pb_decode.c ****     {
 3437              		.loc 1 1001 46 discriminator 1 view .LVU923
 3438 0028 B6F80920 		ldrh	r2, [r6, #9]	@ unaligned
1001:Src/pb_decode.c ****     {
 3439              		.loc 1 1001 26 discriminator 1 view .LVU924
 3440 002c BDF80E30 		ldrh	r3, [sp, #14]
1000:Src/pb_decode.c ****         fixed_count_size != fixed_count_field->array_size)
 3441              		.loc 1 1000 35 discriminator 1 view .LVU925
 3442 0030 9A42     		cmp	r2, r3
 3443 0032 7FD0     		beq	.L348
1003:Src/pb_decode.c ****     }
 3444              		.loc 1 1003 9 is_stmt 1 view .LVU926
 3445 0034 E368     		ldr	r3, [r4, #12]
 3446 0036 002B     		cmp	r3, #0
 3447 0038 7AD0     		beq	.L361
 3448              	.L347:
1003:Src/pb_decode.c ****     }
 3449              		.loc 1 1003 9 is_stmt 0 discriminator 4 view .LVU927
 3450 003a E360     		str	r3, [r4, #12]
 3451 003c 0023     		movs	r3, #0
 3452 003e 59E0     		b	.L344
 3453              	.L356:
 3454              	.LBB21:
 939:Src/pb_decode.c ****                 else
 3455              		.loc 1 939 43 view .LVU928
 3456 0040 4FF0FF35 		mov	r5, #-1
 3457              	.LVL309:
 939:Src/pb_decode.c ****                 else
 3458              		.loc 1 939 43 view .LVU929
 3459 0044 4BE0     		b	.L335
 3460              	.LVL310:
 3461              	.L364:
 3462              	.LBB19:
 945:Src/pb_decode.c **** 
 3463              		.loc 1 945 21 is_stmt 1 view .LVU930
 945:Src/pb_decode.c **** 
 3464              		.loc 1 945 28 is_stmt 0 view .LVU931
 3465 0046 A768     		ldr	r7, [r4, #8]
 3466              	.LVL311:
 947:Src/pb_decode.c ****                         return false;
 3467              		.loc 1 947 21 is_stmt 1 view .LVU932
 947:Src/pb_decode.c ****                         return false;
 3468              		.loc 1 947 26 is_stmt 0 view .LVU933
 3469 0048 04AB     		add	r3, sp, #16
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 101


 3470 004a 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 3471 004e 2046     		mov	r0, r4
 3472 0050 FFF7FEFF 		bl	decode_extension
 3473              	.LVL312:
 947:Src/pb_decode.c ****                         return false;
 3474              		.loc 1 947 24 view .LVU934
 3475 0054 0028     		cmp	r0, #0
 3476 0056 4CD0     		beq	.L332
 950:Src/pb_decode.c ****                     {
 3477              		.loc 1 950 21 is_stmt 1 view .LVU935
 950:Src/pb_decode.c ****                     {
 3478              		.loc 1 950 38 is_stmt 0 view .LVU936
 3479 0058 A368     		ldr	r3, [r4, #8]
 950:Src/pb_decode.c ****                     {
 3480              		.loc 1 950 24 view .LVU937
 3481 005a BB42     		cmp	r3, r7
 3482 005c 42D0     		beq	.L334
 3483 005e 21E0     		b	.L329
 3484              	.LVL313:
 3485              	.L333:
 950:Src/pb_decode.c ****                     {
 3486              		.loc 1 950 24 view .LVU938
 3487              	.LBE19:
 967:Src/pb_decode.c ****             && iter.pSize == iter.pData)
 3488              		.loc 1 967 9 is_stmt 1 view .LVU939
 967:Src/pb_decode.c ****             && iter.pSize == iter.pData)
 3489              		.loc 1 967 13 is_stmt 0 view .LVU940
 3490 0060 059A     		ldr	r2, [sp, #20]
 3491 0062 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 967:Src/pb_decode.c ****             && iter.pSize == iter.pData)
 3492              		.loc 1 967 12 view .LVU941
 3493 0064 03F03003 		and	r3, r3, #48
 3494 0068 202B     		cmp	r3, #32
 3495 006a 46D0     		beq	.L362
 3496              	.L337:
 988:Src/pb_decode.c ****             && iter.required_field_index < PB_MAX_REQUIRED_FIELDS)
 3497              		.loc 1 988 9 is_stmt 1 view .LVU942
 988:Src/pb_decode.c ****             && iter.required_field_index < PB_MAX_REQUIRED_FIELDS)
 3498              		.loc 1 988 13 is_stmt 0 view .LVU943
 3499 006c 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 988:Src/pb_decode.c ****             && iter.required_field_index < PB_MAX_REQUIRED_FIELDS)
 3500              		.loc 1 988 12 view .LVU944
 3501 006e 13F0300F 		tst	r3, #48
 3502 0072 10D1     		bne	.L341
 989:Src/pb_decode.c ****         {
 3503              		.loc 1 989 20 view .LVU945
 3504 0074 069B     		ldr	r3, [sp, #24]
 989:Src/pb_decode.c ****         {
 3505              		.loc 1 989 13 view .LVU946
 3506 0076 3F2B     		cmp	r3, #63
 3507 0078 0DD8     		bhi	.L341
 3508              	.LBB20:
 991:Src/pb_decode.c ****             fields_seen[iter.required_field_index >> 5] |= tmp;
 3509              		.loc 1 991 13 is_stmt 1 view .LVU947
 991:Src/pb_decode.c ****             fields_seen[iter.required_field_index >> 5] |= tmp;
 3510              		.loc 1 991 71 is_stmt 0 view .LVU948
 3511 007a 03F01F01 		and	r1, r3, #31
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 102


 991:Src/pb_decode.c ****             fields_seen[iter.required_field_index >> 5] |= tmp;
 3512              		.loc 1 991 22 view .LVU949
 3513 007e 0122     		movs	r2, #1
 3514 0080 02FA01F1 		lsl	r1, r2, r1
 3515              	.LVL314:
 992:Src/pb_decode.c ****         }
 3516              		.loc 1 992 13 is_stmt 1 view .LVU950
 992:Src/pb_decode.c ****         }
 3517              		.loc 1 992 57 is_stmt 0 view .LVU951
 3518 0084 5B09     		lsrs	r3, r3, #5
 3519 0086 0CAA     		add	r2, sp, #48
 3520 0088 02EB8303 		add	r3, r2, r3, lsl #2
 3521 008c 53F8082C 		ldr	r2, [r3, #-8]
 3522 0090 0A43     		orrs	r2, r2, r1
 3523 0092 43F8082C 		str	r2, [r3, #-8]
 3524              	.LVL315:
 3525              	.L341:
 992:Src/pb_decode.c ****         }
 3526              		.loc 1 992 57 view .LVU952
 3527              	.LBE20:
 995:Src/pb_decode.c ****             return false;
 3528              		.loc 1 995 9 is_stmt 1 view .LVU953
 995:Src/pb_decode.c ****             return false;
 3529              		.loc 1 995 14 is_stmt 0 view .LVU954
 3530 0096 04AA     		add	r2, sp, #16
 3531 0098 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 3532 009c 2046     		mov	r0, r4
 3533 009e FFF7FEFF 		bl	decode_field
 3534              	.LVL316:
 995:Src/pb_decode.c ****             return false;
 3535              		.loc 1 995 12 view .LVU955
 3536 00a2 30B3     		cbz	r0, .L332
 3537              	.LVL317:
 3538              	.L329:
 995:Src/pb_decode.c ****             return false;
 3539              		.loc 1 995 12 view .LVU956
 3540              	.LBE21:
 919:Src/pb_decode.c ****     {
 3541              		.loc 1 919 18 view .LVU957
 3542 00a4 A368     		ldr	r3, [r4, #8]
 919:Src/pb_decode.c ****     {
 3543              		.loc 1 919 11 view .LVU958
 3544 00a6 002B     		cmp	r3, #0
 3545 00a8 BBD0     		beq	.L343
 3546              	.LBB22:
 921:Src/pb_decode.c ****         pb_wire_type_t wire_type;
 3547              		.loc 1 921 9 is_stmt 1 view .LVU959
 922:Src/pb_decode.c ****         bool eof;
 3548              		.loc 1 922 9 view .LVU960
 923:Src/pb_decode.c **** 
 3549              		.loc 1 923 9 view .LVU961
 925:Src/pb_decode.c ****         {
 3550              		.loc 1 925 9 view .LVU962
 925:Src/pb_decode.c ****         {
 3551              		.loc 1 925 14 is_stmt 0 view .LVU963
 3552 00aa 0DF10703 		add	r3, sp, #7
 3553 00ae 02AA     		add	r2, sp, #8
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 103


 3554 00b0 0DF10601 		add	r1, sp, #6
 3555 00b4 2046     		mov	r0, r4
 3556 00b6 FFF7FEFF 		bl	pb_decode_tag
 3557              	.LVL318:
 925:Src/pb_decode.c ****         {
 3558              		.loc 1 925 12 view .LVU964
 3559 00ba 0028     		cmp	r0, #0
 3560 00bc ADD0     		beq	.L363
 933:Src/pb_decode.c ****         {
 3561              		.loc 1 933 9 is_stmt 1 view .LVU965
 933:Src/pb_decode.c ****         {
 3562              		.loc 1 933 14 is_stmt 0 view .LVU966
 3563 00be 0299     		ldr	r1, [sp, #8]
 3564 00c0 04A8     		add	r0, sp, #16
 3565 00c2 FFF7FEFF 		bl	pb_field_iter_find
 3566              	.LVL319:
 933:Src/pb_decode.c ****         {
 3567              		.loc 1 933 12 view .LVU967
 3568 00c6 0028     		cmp	r0, #0
 3569 00c8 CAD1     		bne	.L333
 936:Src/pb_decode.c ****             {
 3570              		.loc 1 936 13 is_stmt 1 view .LVU968
 936:Src/pb_decode.c ****             {
 3571              		.loc 1 936 21 is_stmt 0 view .LVU969
 3572 00ca 029B     		ldr	r3, [sp, #8]
 936:Src/pb_decode.c ****             {
 3573              		.loc 1 936 16 view .LVU970
 3574 00cc AB42     		cmp	r3, r5
 3575 00ce 09D3     		bcc	.L334
 938:Src/pb_decode.c ****                     extension_range_start = (uint32_t)-1;
 3576              		.loc 1 938 17 is_stmt 1 view .LVU971
 938:Src/pb_decode.c ****                     extension_range_start = (uint32_t)-1;
 3577              		.loc 1 938 22 is_stmt 0 view .LVU972
 3578 00d0 04A8     		add	r0, sp, #16
 3579 00d2 FFF7FEFF 		bl	find_extension_field
 3580              	.LVL320:
 938:Src/pb_decode.c ****                     extension_range_start = (uint32_t)-1;
 3581              		.loc 1 938 20 view .LVU973
 3582 00d6 0028     		cmp	r0, #0
 3583 00d8 B2D0     		beq	.L356
 941:Src/pb_decode.c **** 
 3584              		.loc 1 941 21 is_stmt 1 view .LVU974
 941:Src/pb_decode.c **** 
 3585              		.loc 1 941 53 is_stmt 0 view .LVU975
 3586 00da 059B     		ldr	r3, [sp, #20]
 3587 00dc 1D88     		ldrh	r5, [r3]	@ unaligned
 3588              	.LVL321:
 3589              	.L335:
 943:Src/pb_decode.c ****                 {
 3590              		.loc 1 943 17 is_stmt 1 view .LVU976
 943:Src/pb_decode.c ****                 {
 3591              		.loc 1 943 25 is_stmt 0 view .LVU977
 3592 00de 0299     		ldr	r1, [sp, #8]
 943:Src/pb_decode.c ****                 {
 3593              		.loc 1 943 20 view .LVU978
 3594 00e0 A942     		cmp	r1, r5
 3595 00e2 B0D2     		bcs	.L364
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 104


 3596              	.L334:
 959:Src/pb_decode.c ****                 return false;
 3597              		.loc 1 959 13 is_stmt 1 view .LVU979
 959:Src/pb_decode.c ****                 return false;
 3598              		.loc 1 959 18 is_stmt 0 view .LVU980
 3599 00e4 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
 3600 00e8 2046     		mov	r0, r4
 3601 00ea FFF7FEFF 		bl	pb_skip_field
 3602              	.LVL322:
 959:Src/pb_decode.c ****                 return false;
 3603              		.loc 1 959 16 view .LVU981
 3604 00ee 0028     		cmp	r0, #0
 3605 00f0 D8D1     		bne	.L329
 3606              	.L332:
 930:Src/pb_decode.c ****         }
 3607              		.loc 1 930 24 discriminator 1 view .LVU982
 3608 00f2 0023     		movs	r3, #0
 3609              	.LVL323:
 3610              	.L344:
 930:Src/pb_decode.c ****         }
 3611              		.loc 1 930 24 discriminator 1 view .LVU983
 3612              	.LBE22:
1049:Src/pb_decode.c **** 
 3613              		.loc 1 1049 1 view .LVU984
 3614 00f4 1846     		mov	r0, r3
 3615 00f6 0DB0     		add	sp, sp, #52
 3616              	.LCFI83:
 3617              		.cfi_remember_state
 3618              		.cfi_def_cfa_offset 20
 3619              		@ sp needed
 3620 00f8 F0BD     		pop	{r4, r5, r6, r7, pc}
 3621              	.LVL324:
 3622              	.L362:
 3623              	.LCFI84:
 3624              		.cfi_restore_state
 3625              	.LBB23:
 968:Src/pb_decode.c ****         {
 3626              		.loc 1 968 13 view .LVU985
 3627 00fa 0999     		ldr	r1, [sp, #36]
 3628 00fc 089B     		ldr	r3, [sp, #32]
 3629 00fe 9942     		cmp	r1, r3
 3630 0100 B4D1     		bne	.L337
 970:Src/pb_decode.c ****                 /* If the new fixed count field does not match the previous one,
 3631              		.loc 1 970 13 is_stmt 1 view .LVU986
 970:Src/pb_decode.c ****                 /* If the new fixed count field does not match the previous one,
 3632              		.loc 1 970 16 is_stmt 0 view .LVU987
 3633 0102 B242     		cmp	r2, r6
 3634 0104 0AD0     		beq	.L338
 975:Src/pb_decode.c ****                     fixed_count_size != fixed_count_field->array_size)
 3635              		.loc 1 975 17 is_stmt 1 view .LVU988
 975:Src/pb_decode.c ****                     fixed_count_size != fixed_count_field->array_size)
 3636              		.loc 1 975 20 is_stmt 0 view .LVU989
 3637 0106 2EB1     		cbz	r6, .L339
 976:Src/pb_decode.c ****                 {
 3638              		.loc 1 976 58 discriminator 1 view .LVU990
 3639 0108 B6F80910 		ldrh	r1, [r6, #9]	@ unaligned
 976:Src/pb_decode.c ****                 {
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 105


 3640              		.loc 1 976 38 discriminator 1 view .LVU991
 3641 010c BDF80E30 		ldrh	r3, [sp, #14]
 975:Src/pb_decode.c ****                     fixed_count_size != fixed_count_field->array_size)
 3642              		.loc 1 975 47 discriminator 1 view .LVU992
 3643 0110 9942     		cmp	r1, r3
 3644 0112 07D1     		bne	.L365
 3645              	.L339:
 981:Src/pb_decode.c ****                 fixed_count_size = 0;
 3646              		.loc 1 981 17 is_stmt 1 view .LVU993
 3647              	.LVL325:
 982:Src/pb_decode.c ****             }
 3648              		.loc 1 982 17 view .LVU994
 982:Src/pb_decode.c ****             }
 3649              		.loc 1 982 34 is_stmt 0 view .LVU995
 3650 0114 0023     		movs	r3, #0
 3651 0116 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 981:Src/pb_decode.c ****                 fixed_count_size = 0;
 3652              		.loc 1 981 35 view .LVU996
 3653 011a 1646     		mov	r6, r2
 3654              	.LVL326:
 3655              	.L338:
 985:Src/pb_decode.c ****         }
 3656              		.loc 1 985 13 is_stmt 1 view .LVU997
 985:Src/pb_decode.c ****         }
 3657              		.loc 1 985 24 is_stmt 0 view .LVU998
 3658 011c 0DF10E03 		add	r3, sp, #14
 3659 0120 0993     		str	r3, [sp, #36]
 3660 0122 A3E7     		b	.L337
 3661              	.L365:
 978:Src/pb_decode.c ****                 }
 3662              		.loc 1 978 21 is_stmt 1 view .LVU999
 3663 0124 E368     		ldr	r3, [r4, #12]
 3664 0126 0BB1     		cbz	r3, .L366
 3665              	.L340:
 978:Src/pb_decode.c ****                 }
 3666              		.loc 1 978 21 is_stmt 0 discriminator 4 view .LVU1000
 3667 0128 E360     		str	r3, [r4, #12]
 3668 012a E2E7     		b	.L332
 3669              	.L366:
 978:Src/pb_decode.c ****                 }
 3670              		.loc 1 978 21 view .LVU1001
 3671 012c 244B     		ldr	r3, .L370
 3672 012e FBE7     		b	.L340
 3673              	.L361:
 978:Src/pb_decode.c ****                 }
 3674              		.loc 1 978 21 view .LVU1002
 3675              	.LBE23:
1003:Src/pb_decode.c ****     }
 3676              		.loc 1 1003 9 view .LVU1003
 3677 0130 234B     		ldr	r3, .L370
 3678 0132 82E7     		b	.L347
 3679              	.LVL327:
 3680              	.L348:
 3681              	.LBB24:
1012:Src/pb_decode.c ****         pb_type_t last_type;
 3682              		.loc 1 1012 9 is_stmt 1 discriminator 1 view .LVU1004
1013:Src/pb_decode.c ****         unsigned i;
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 106


 3683              		.loc 1 1013 9 discriminator 1 view .LVU1005
1014:Src/pb_decode.c ****         do {
 3684              		.loc 1 1014 9 discriminator 1 view .LVU1006
1015:Src/pb_decode.c ****             req_field_count = iter.required_field_index;
 3685              		.loc 1 1015 9 discriminator 1 view .LVU1007
1016:Src/pb_decode.c ****             last_type = iter.pos->type;
 3686              		.loc 1 1016 13 discriminator 1 view .LVU1008
1016:Src/pb_decode.c ****             last_type = iter.pos->type;
 3687              		.loc 1 1016 29 is_stmt 0 discriminator 1 view .LVU1009
 3688 0134 069D     		ldr	r5, [sp, #24]
 3689              	.LVL328:
1017:Src/pb_decode.c ****         } while (pb_field_iter_next(&iter));
 3690              		.loc 1 1017 13 is_stmt 1 discriminator 1 view .LVU1010
1017:Src/pb_decode.c ****         } while (pb_field_iter_next(&iter));
 3691              		.loc 1 1017 29 is_stmt 0 discriminator 1 view .LVU1011
 3692 0136 059B     		ldr	r3, [sp, #20]
1017:Src/pb_decode.c ****         } while (pb_field_iter_next(&iter));
 3693              		.loc 1 1017 23 discriminator 1 view .LVU1012
 3694 0138 9E78     		ldrb	r6, [r3, #2]	@ zero_extendqisi2
 3695              	.LVL329:
1018:Src/pb_decode.c ****         
 3696              		.loc 1 1018 18 discriminator 1 view .LVU1013
 3697 013a 04A8     		add	r0, sp, #16
 3698 013c FFF7FEFF 		bl	pb_field_iter_next
 3699              	.LVL330:
1018:Src/pb_decode.c ****         
 3700              		.loc 1 1018 9 discriminator 1 view .LVU1014
 3701 0140 0346     		mov	r3, r0
 3702 0142 0028     		cmp	r0, #0
 3703 0144 F6D1     		bne	.L348
1021:Src/pb_decode.c ****             req_field_count++;
 3704              		.loc 1 1021 9 is_stmt 1 view .LVU1015
1021:Src/pb_decode.c ****             req_field_count++;
 3705              		.loc 1 1021 12 is_stmt 0 view .LVU1016
 3706 0146 16F0300F 		tst	r6, #48
 3707 014a 03D1     		bne	.L349
1021:Src/pb_decode.c ****             req_field_count++;
 3708              		.loc 1 1021 65 discriminator 1 view .LVU1017
 3709 014c 059A     		ldr	r2, [sp, #20]
 3710 014e 1288     		ldrh	r2, [r2]	@ unaligned
1021:Src/pb_decode.c ****             req_field_count++;
 3711              		.loc 1 1021 54 discriminator 1 view .LVU1018
 3712 0150 02B1     		cbz	r2, .L349
1022:Src/pb_decode.c ****         
 3713              		.loc 1 1022 13 is_stmt 1 view .LVU1019
1022:Src/pb_decode.c ****         
 3714              		.loc 1 1022 28 is_stmt 0 view .LVU1020
 3715 0152 0135     		adds	r5, r5, #1
 3716              	.LVL331:
 3717              	.L349:
1024:Src/pb_decode.c ****             req_field_count = PB_MAX_REQUIRED_FIELDS;
 3718              		.loc 1 1024 9 is_stmt 1 view .LVU1021
1024:Src/pb_decode.c ****             req_field_count = PB_MAX_REQUIRED_FIELDS;
 3719              		.loc 1 1024 12 is_stmt 0 view .LVU1022
 3720 0154 402D     		cmp	r5, #64
 3721 0156 15D8     		bhi	.L357
1027:Src/pb_decode.c ****         {
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 107


 3722              		.loc 1 1027 9 is_stmt 1 view .LVU1023
1027:Src/pb_decode.c ****         {
 3723              		.loc 1 1027 12 is_stmt 0 view .LVU1024
 3724 0158 ADB9     		cbnz	r5, .L350
 3725              	.LBE24:
1048:Src/pb_decode.c **** }
 3726              		.loc 1 1048 12 view .LVU1025
 3727 015a 0123     		movs	r3, #1
 3728 015c CAE7     		b	.L344
 3729              	.LVL332:
 3730              	.L368:
 3731              	.LBB25:
1033:Src/pb_decode.c ****             }
 3732              		.loc 1 1033 21 view .LVU1026
 3733 015e 194A     		ldr	r2, .L370+4
 3734 0160 0EE0     		b	.L352
 3735              	.LVL333:
 3736              	.L351:
1030:Src/pb_decode.c ****             {
 3737              		.loc 1 1030 54 discriminator 2 view .LVU1027
 3738 0162 0132     		adds	r2, r2, #1
 3739              	.LVL334:
 3740              	.L353:
1030:Src/pb_decode.c ****             {
 3741              		.loc 1 1030 46 discriminator 1 view .LVU1028
 3742 0164 6909     		lsrs	r1, r5, #5
1030:Src/pb_decode.c ****             {
 3743              		.loc 1 1030 13 discriminator 1 view .LVU1029
 3744 0166 9142     		cmp	r1, r2
 3745 0168 0FD9     		bls	.L367
1032:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "missing required field");
 3746              		.loc 1 1032 17 is_stmt 1 view .LVU1030
1032:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "missing required field");
 3747              		.loc 1 1032 32 is_stmt 0 view .LVU1031
 3748 016a 0CA9     		add	r1, sp, #48
 3749 016c 01EB8201 		add	r1, r1, r2, lsl #2
 3750 0170 51F8081C 		ldr	r1, [r1, #-8]
1032:Src/pb_decode.c ****                     PB_RETURN_ERROR(stream, "missing required field");
 3751              		.loc 1 1032 20 view .LVU1032
 3752 0174 B1F1FF3F 		cmp	r1, #-1
 3753 0178 F3D0     		beq	.L351
1033:Src/pb_decode.c ****             }
 3754              		.loc 1 1033 21 is_stmt 1 view .LVU1033
 3755 017a E268     		ldr	r2, [r4, #12]
 3756              	.LVL335:
1033:Src/pb_decode.c ****             }
 3757              		.loc 1 1033 21 is_stmt 0 view .LVU1034
 3758 017c 002A     		cmp	r2, #0
 3759 017e EED0     		beq	.L368
 3760              	.L352:
1033:Src/pb_decode.c ****             }
 3761              		.loc 1 1033 21 discriminator 4 view .LVU1035
 3762 0180 E260     		str	r2, [r4, #12]
 3763 0182 B7E7     		b	.L344
 3764              	.LVL336:
 3765              	.L357:
1025:Src/pb_decode.c **** 
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 108


 3766              		.loc 1 1025 29 view .LVU1036
 3767 0184 4025     		movs	r5, #64
 3768              	.LVL337:
 3769              	.L350:
1025:Src/pb_decode.c **** 
 3770              		.loc 1 1025 29 discriminator 1 view .LVU1037
 3771 0186 0022     		movs	r2, #0
 3772 0188 ECE7     		b	.L353
 3773              	.LVL338:
 3774              	.L367:
1037:Src/pb_decode.c ****             {
 3775              		.loc 1 1037 13 is_stmt 1 view .LVU1038
1037:Src/pb_decode.c ****             {
 3776              		.loc 1 1037 16 is_stmt 0 view .LVU1039
 3777 018a 15F01F05 		ands	r5, r5, #31
 3778 018e 12D0     		beq	.L358
1039:Src/pb_decode.c ****                     (allbits >> (32 - (req_field_count & 31))))
 3779              		.loc 1 1039 17 is_stmt 1 view .LVU1040
1039:Src/pb_decode.c ****                     (allbits >> (32 - (req_field_count & 31))))
 3780              		.loc 1 1039 32 is_stmt 0 view .LVU1041
 3781 0190 0CAA     		add	r2, sp, #48
 3782              	.LVL339:
1039:Src/pb_decode.c ****                     (allbits >> (32 - (req_field_count & 31))))
 3783              		.loc 1 1039 32 view .LVU1042
 3784 0192 02EB8101 		add	r1, r2, r1, lsl #2
 3785 0196 51F8081C 		ldr	r1, [r1, #-8]
1040:Src/pb_decode.c ****                 {
 3786              		.loc 1 1040 37 view .LVU1043
 3787 019a C5F12005 		rsb	r5, r5, #32
1040:Src/pb_decode.c ****                 {
 3788              		.loc 1 1040 30 view .LVU1044
 3789 019e 4FF0FF32 		mov	r2, #-1
 3790 01a2 22FA05F5 		lsr	r5, r2, r5
1039:Src/pb_decode.c ****                     (allbits >> (32 - (req_field_count & 31))))
 3791              		.loc 1 1039 20 view .LVU1045
 3792 01a6 A942     		cmp	r1, r5
 3793 01a8 07D0     		beq	.L359
1042:Src/pb_decode.c ****                 }
 3794              		.loc 1 1042 21 is_stmt 1 view .LVU1046
 3795 01aa E268     		ldr	r2, [r4, #12]
 3796 01ac 0AB1     		cbz	r2, .L369
 3797              	.L355:
1042:Src/pb_decode.c ****                 }
 3798              		.loc 1 1042 21 is_stmt 0 discriminator 4 view .LVU1047
 3799 01ae E260     		str	r2, [r4, #12]
 3800 01b0 A0E7     		b	.L344
 3801              	.L369:
1042:Src/pb_decode.c ****                 }
 3802              		.loc 1 1042 21 view .LVU1048
 3803 01b2 044A     		ldr	r2, .L370+4
 3804 01b4 FBE7     		b	.L355
 3805              	.LVL340:
 3806              	.L358:
1042:Src/pb_decode.c ****                 }
 3807              		.loc 1 1042 21 view .LVU1049
 3808              	.LBE25:
1048:Src/pb_decode.c **** }
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 109


 3809              		.loc 1 1048 12 view .LVU1050
 3810 01b6 0123     		movs	r3, #1
 3811 01b8 9CE7     		b	.L344
 3812              	.LVL341:
 3813              	.L359:
1048:Src/pb_decode.c **** }
 3814              		.loc 1 1048 12 view .LVU1051
 3815 01ba 0123     		movs	r3, #1
 3816 01bc 9AE7     		b	.L344
 3817              	.L371:
 3818 01be 00BF     		.align	2
 3819              	.L370:
 3820 01c0 00000000 		.word	.LC15
 3821 01c4 24000000 		.word	.LC16
 3822              		.cfi_endproc
 3823              	.LFE24:
 3825              		.section	.text.pb_decode,"ax",%progbits
 3826              		.align	1
 3827              		.global	pb_decode
 3828              		.syntax unified
 3829              		.thumb
 3830              		.thumb_func
 3831              		.fpu fpv4-sp-d16
 3833              	pb_decode:
 3834              	.LVL342:
 3835              	.LFB25:
1052:Src/pb_decode.c ****     bool status;
 3836              		.loc 1 1052 1 is_stmt 1 view -0
 3837              		.cfi_startproc
 3838              		@ args = 0, pretend = 0, frame = 0
 3839              		@ frame_needed = 0, uses_anonymous_args = 0
1052:Src/pb_decode.c ****     bool status;
 3840              		.loc 1 1052 1 is_stmt 0 view .LVU1053
 3841 0000 70B5     		push	{r4, r5, r6, lr}
 3842              	.LCFI85:
 3843              		.cfi_def_cfa_offset 16
 3844              		.cfi_offset 4, -16
 3845              		.cfi_offset 5, -12
 3846              		.cfi_offset 6, -8
 3847              		.cfi_offset 14, -4
 3848 0002 0646     		mov	r6, r0
 3849 0004 0C46     		mov	r4, r1
 3850 0006 1546     		mov	r5, r2
1053:Src/pb_decode.c ****     pb_message_set_to_defaults(fields, dest_struct);
 3851              		.loc 1 1053 5 is_stmt 1 view .LVU1054
1054:Src/pb_decode.c ****     status = pb_decode_noinit(stream, fields, dest_struct);
 3852              		.loc 1 1054 5 view .LVU1055
 3853 0008 1146     		mov	r1, r2
 3854              	.LVL343:
1054:Src/pb_decode.c ****     status = pb_decode_noinit(stream, fields, dest_struct);
 3855              		.loc 1 1054 5 is_stmt 0 view .LVU1056
 3856 000a 2046     		mov	r0, r4
 3857              	.LVL344:
1054:Src/pb_decode.c ****     status = pb_decode_noinit(stream, fields, dest_struct);
 3858              		.loc 1 1054 5 view .LVU1057
 3859 000c FFF7FEFF 		bl	pb_message_set_to_defaults
 3860              	.LVL345:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 110


1055:Src/pb_decode.c ****     
 3861              		.loc 1 1055 5 is_stmt 1 view .LVU1058
1055:Src/pb_decode.c ****     
 3862              		.loc 1 1055 14 is_stmt 0 view .LVU1059
 3863 0010 2A46     		mov	r2, r5
 3864 0012 2146     		mov	r1, r4
 3865 0014 3046     		mov	r0, r6
 3866 0016 FFF7FEFF 		bl	pb_decode_noinit
 3867              	.LVL346:
1062:Src/pb_decode.c **** }
 3868              		.loc 1 1062 5 is_stmt 1 view .LVU1060
1063:Src/pb_decode.c **** 
 3869              		.loc 1 1063 1 is_stmt 0 view .LVU1061
 3870 001a 70BD     		pop	{r4, r5, r6, pc}
1063:Src/pb_decode.c **** 
 3871              		.loc 1 1063 1 view .LVU1062
 3872              		.cfi_endproc
 3873              	.LFE25:
 3875              		.section	.text.pb_dec_submessage,"ax",%progbits
 3876              		.align	1
 3877              		.syntax unified
 3878              		.thumb
 3879              		.thumb_func
 3880              		.fpu fpv4-sp-d16
 3882              	pb_dec_submessage:
 3883              	.LVL347:
 3884              	.LFB39:
1464:Src/pb_decode.c ****     bool status;
 3885              		.loc 1 1464 1 is_stmt 1 view -0
 3886              		.cfi_startproc
 3887              		@ args = 0, pretend = 0, frame = 16
 3888              		@ frame_needed = 0, uses_anonymous_args = 0
1464:Src/pb_decode.c ****     bool status;
 3889              		.loc 1 1464 1 is_stmt 0 view .LVU1064
 3890 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3891              	.LCFI86:
 3892              		.cfi_def_cfa_offset 20
 3893              		.cfi_offset 4, -20
 3894              		.cfi_offset 5, -16
 3895              		.cfi_offset 6, -12
 3896              		.cfi_offset 7, -8
 3897              		.cfi_offset 14, -4
 3898 0002 85B0     		sub	sp, sp, #20
 3899              	.LCFI87:
 3900              		.cfi_def_cfa_offset 40
 3901 0004 0546     		mov	r5, r0
 3902 0006 0C46     		mov	r4, r1
 3903 0008 1746     		mov	r7, r2
1465:Src/pb_decode.c ****     pb_istream_t substream;
 3904              		.loc 1 1465 5 is_stmt 1 view .LVU1065
1466:Src/pb_decode.c ****     const pb_field_t* submsg_fields = (const pb_field_t*)field->ptr;
 3905              		.loc 1 1466 5 view .LVU1066
1467:Src/pb_decode.c ****     
 3906              		.loc 1 1467 5 view .LVU1067
1467:Src/pb_decode.c ****     
 3907              		.loc 1 1467 23 is_stmt 0 view .LVU1068
 3908 000a D1F80B60 		ldr	r6, [r1, #11]	@ unaligned
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 111


 3909              	.LVL348:
1469:Src/pb_decode.c ****         return false;
 3910              		.loc 1 1469 5 is_stmt 1 view .LVU1069
1469:Src/pb_decode.c ****         return false;
 3911              		.loc 1 1469 10 is_stmt 0 view .LVU1070
 3912 000e 6946     		mov	r1, sp
 3913              	.LVL349:
1469:Src/pb_decode.c ****         return false;
 3914              		.loc 1 1469 10 view .LVU1071
 3915 0010 FFF7FEFF 		bl	pb_make_string_substream
 3916              	.LVL350:
1469:Src/pb_decode.c ****         return false;
 3917              		.loc 1 1469 8 view .LVU1072
 3918 0014 0346     		mov	r3, r0
 3919 0016 A0B1     		cbz	r0, .L375
1472:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid field descriptor");
 3920              		.loc 1 1472 5 is_stmt 1 view .LVU1073
1472:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid field descriptor");
 3921              		.loc 1 1472 14 is_stmt 0 view .LVU1074
 3922 0018 D4F80B30 		ldr	r3, [r4, #11]	@ unaligned
1472:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "invalid field descriptor");
 3923              		.loc 1 1472 8 view .LVU1075
 3924 001c A3B1     		cbz	r3, .L381
1477:Src/pb_decode.c ****         status = pb_decode(&substream, submsg_fields, dest);
 3925              		.loc 1 1477 5 is_stmt 1 view .LVU1076
1477:Src/pb_decode.c ****         status = pb_decode(&substream, submsg_fields, dest);
 3926              		.loc 1 1477 9 is_stmt 0 view .LVU1077
 3927 001e A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
1477:Src/pb_decode.c ****         status = pb_decode(&substream, submsg_fields, dest);
 3928              		.loc 1 1477 8 view .LVU1078
 3929 0020 03F03003 		and	r3, r3, #48
 3930 0024 202B     		cmp	r3, #32
 3931 0026 16D0     		beq	.L382
1480:Src/pb_decode.c ****     
 3932              		.loc 1 1480 9 is_stmt 1 view .LVU1079
1480:Src/pb_decode.c ****     
 3933              		.loc 1 1480 18 is_stmt 0 view .LVU1080
 3934 0028 3A46     		mov	r2, r7
 3935 002a 3146     		mov	r1, r6
 3936 002c 6846     		mov	r0, sp
 3937 002e FFF7FEFF 		bl	pb_decode_noinit
 3938              	.LVL351:
 3939 0032 0446     		mov	r4, r0
 3940              	.LVL352:
 3941              	.L379:
1482:Src/pb_decode.c ****         return false;
 3942              		.loc 1 1482 5 is_stmt 1 view .LVU1081
1482:Src/pb_decode.c ****         return false;
 3943              		.loc 1 1482 10 is_stmt 0 view .LVU1082
 3944 0034 6946     		mov	r1, sp
 3945 0036 2846     		mov	r0, r5
 3946 0038 FFF7FEFF 		bl	pb_close_string_substream
 3947              	.LVL353:
1482:Src/pb_decode.c ****         return false;
 3948              		.loc 1 1482 8 view .LVU1083
 3949 003c 0346     		mov	r3, r0
 3950 003e 00B1     		cbz	r0, .L375
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 112


1484:Src/pb_decode.c **** }
 3951              		.loc 1 1484 12 view .LVU1084
 3952 0040 2346     		mov	r3, r4
 3953              	.LVL354:
 3954              	.L375:
1485:Src/pb_decode.c **** 
 3955              		.loc 1 1485 1 view .LVU1085
 3956 0042 1846     		mov	r0, r3
 3957 0044 05B0     		add	sp, sp, #20
 3958              	.LCFI88:
 3959              		.cfi_remember_state
 3960              		.cfi_def_cfa_offset 20
 3961              		@ sp needed
 3962 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 3963              	.LVL355:
 3964              	.L381:
 3965              	.LCFI89:
 3966              		.cfi_restore_state
1473:Src/pb_decode.c ****     
 3967              		.loc 1 1473 9 is_stmt 1 view .LVU1086
 3968 0048 EB68     		ldr	r3, [r5, #12]
 3969 004a 13B1     		cbz	r3, .L383
 3970              	.L377:
1473:Src/pb_decode.c ****     
 3971              		.loc 1 1473 9 is_stmt 0 discriminator 4 view .LVU1087
 3972 004c EB60     		str	r3, [r5, #12]
 3973 004e 0023     		movs	r3, #0
 3974 0050 F7E7     		b	.L375
 3975              	.L383:
1473:Src/pb_decode.c ****     
 3976              		.loc 1 1473 9 view .LVU1088
 3977 0052 044B     		ldr	r3, .L384
 3978 0054 FAE7     		b	.L377
 3979              	.L382:
1478:Src/pb_decode.c ****     else
 3980              		.loc 1 1478 9 is_stmt 1 view .LVU1089
1478:Src/pb_decode.c ****     else
 3981              		.loc 1 1478 18 is_stmt 0 view .LVU1090
 3982 0056 3A46     		mov	r2, r7
 3983 0058 3146     		mov	r1, r6
 3984 005a 6846     		mov	r0, sp
 3985 005c FFF7FEFF 		bl	pb_decode
 3986              	.LVL356:
 3987 0060 0446     		mov	r4, r0
 3988              	.LVL357:
1478:Src/pb_decode.c ****     else
 3989              		.loc 1 1478 18 view .LVU1091
 3990 0062 E7E7     		b	.L379
 3991              	.L385:
 3992              		.align	2
 3993              	.L384:
 3994 0064 00000000 		.word	.LC17
 3995              		.cfi_endproc
 3996              	.LFE39:
 3998              		.section	.text.pb_decode_delimited_noinit,"ax",%progbits
 3999              		.align	1
 4000              		.global	pb_decode_delimited_noinit
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 113


 4001              		.syntax unified
 4002              		.thumb
 4003              		.thumb_func
 4004              		.fpu fpv4-sp-d16
 4006              	pb_decode_delimited_noinit:
 4007              	.LVL358:
 4008              	.LFB26:
1066:Src/pb_decode.c ****     pb_istream_t substream;
 4009              		.loc 1 1066 1 is_stmt 1 view -0
 4010              		.cfi_startproc
 4011              		@ args = 0, pretend = 0, frame = 16
 4012              		@ frame_needed = 0, uses_anonymous_args = 0
1066:Src/pb_decode.c ****     pb_istream_t substream;
 4013              		.loc 1 1066 1 is_stmt 0 view .LVU1093
 4014 0000 70B5     		push	{r4, r5, r6, lr}
 4015              	.LCFI90:
 4016              		.cfi_def_cfa_offset 16
 4017              		.cfi_offset 4, -16
 4018              		.cfi_offset 5, -12
 4019              		.cfi_offset 6, -8
 4020              		.cfi_offset 14, -4
 4021 0002 84B0     		sub	sp, sp, #16
 4022              	.LCFI91:
 4023              		.cfi_def_cfa_offset 32
 4024 0004 0446     		mov	r4, r0
 4025 0006 0D46     		mov	r5, r1
 4026 0008 1646     		mov	r6, r2
1067:Src/pb_decode.c ****     bool status;
 4027              		.loc 1 1067 5 is_stmt 1 view .LVU1094
1068:Src/pb_decode.c **** 
 4028              		.loc 1 1068 5 view .LVU1095
1070:Src/pb_decode.c ****         return false;
 4029              		.loc 1 1070 5 view .LVU1096
1070:Src/pb_decode.c ****         return false;
 4030              		.loc 1 1070 10 is_stmt 0 view .LVU1097
 4031 000a 6946     		mov	r1, sp
 4032              	.LVL359:
1070:Src/pb_decode.c ****         return false;
 4033              		.loc 1 1070 10 view .LVU1098
 4034 000c FFF7FEFF 		bl	pb_make_string_substream
 4035              	.LVL360:
1070:Src/pb_decode.c ****         return false;
 4036              		.loc 1 1070 8 view .LVU1099
 4037 0010 0346     		mov	r3, r0
 4038 0012 10B9     		cbnz	r0, .L389
 4039              	.LVL361:
 4040              	.L387:
1078:Src/pb_decode.c **** 
 4041              		.loc 1 1078 1 view .LVU1100
 4042 0014 1846     		mov	r0, r3
 4043 0016 04B0     		add	sp, sp, #16
 4044              	.LCFI92:
 4045              		.cfi_remember_state
 4046              		.cfi_def_cfa_offset 16
 4047              		@ sp needed
 4048 0018 70BD     		pop	{r4, r5, r6, pc}
 4049              	.LVL362:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 114


 4050              	.L389:
 4051              	.LCFI93:
 4052              		.cfi_restore_state
1073:Src/pb_decode.c **** 
 4053              		.loc 1 1073 5 is_stmt 1 view .LVU1101
1073:Src/pb_decode.c **** 
 4054              		.loc 1 1073 14 is_stmt 0 view .LVU1102
 4055 001a 3246     		mov	r2, r6
 4056 001c 2946     		mov	r1, r5
 4057 001e 6846     		mov	r0, sp
 4058 0020 FFF7FEFF 		bl	pb_decode_noinit
 4059              	.LVL363:
 4060 0024 0546     		mov	r5, r0
 4061              	.LVL364:
1075:Src/pb_decode.c ****         return false;
 4062              		.loc 1 1075 5 is_stmt 1 view .LVU1103
1075:Src/pb_decode.c ****         return false;
 4063              		.loc 1 1075 10 is_stmt 0 view .LVU1104
 4064 0026 6946     		mov	r1, sp
 4065 0028 2046     		mov	r0, r4
 4066 002a FFF7FEFF 		bl	pb_close_string_substream
 4067              	.LVL365:
1075:Src/pb_decode.c ****         return false;
 4068              		.loc 1 1075 8 view .LVU1105
 4069 002e 0346     		mov	r3, r0
 4070 0030 0028     		cmp	r0, #0
 4071 0032 EFD0     		beq	.L387
1077:Src/pb_decode.c **** }
 4072              		.loc 1 1077 12 view .LVU1106
 4073 0034 2B46     		mov	r3, r5
 4074 0036 EDE7     		b	.L387
 4075              		.cfi_endproc
 4076              	.LFE26:
 4078              		.section	.text.pb_decode_delimited,"ax",%progbits
 4079              		.align	1
 4080              		.global	pb_decode_delimited
 4081              		.syntax unified
 4082              		.thumb
 4083              		.thumb_func
 4084              		.fpu fpv4-sp-d16
 4086              	pb_decode_delimited:
 4087              	.LVL366:
 4088              	.LFB27:
1081:Src/pb_decode.c ****     pb_istream_t substream;
 4089              		.loc 1 1081 1 is_stmt 1 view -0
 4090              		.cfi_startproc
 4091              		@ args = 0, pretend = 0, frame = 16
 4092              		@ frame_needed = 0, uses_anonymous_args = 0
1081:Src/pb_decode.c ****     pb_istream_t substream;
 4093              		.loc 1 1081 1 is_stmt 0 view .LVU1108
 4094 0000 70B5     		push	{r4, r5, r6, lr}
 4095              	.LCFI94:
 4096              		.cfi_def_cfa_offset 16
 4097              		.cfi_offset 4, -16
 4098              		.cfi_offset 5, -12
 4099              		.cfi_offset 6, -8
 4100              		.cfi_offset 14, -4
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 115


 4101 0002 84B0     		sub	sp, sp, #16
 4102              	.LCFI95:
 4103              		.cfi_def_cfa_offset 32
 4104 0004 0446     		mov	r4, r0
 4105 0006 0D46     		mov	r5, r1
 4106 0008 1646     		mov	r6, r2
1082:Src/pb_decode.c ****     bool status;
 4107              		.loc 1 1082 5 is_stmt 1 view .LVU1109
1083:Src/pb_decode.c ****     
 4108              		.loc 1 1083 5 view .LVU1110
1085:Src/pb_decode.c ****         return false;
 4109              		.loc 1 1085 5 view .LVU1111
1085:Src/pb_decode.c ****         return false;
 4110              		.loc 1 1085 10 is_stmt 0 view .LVU1112
 4111 000a 6946     		mov	r1, sp
 4112              	.LVL367:
1085:Src/pb_decode.c ****         return false;
 4113              		.loc 1 1085 10 view .LVU1113
 4114 000c FFF7FEFF 		bl	pb_make_string_substream
 4115              	.LVL368:
1085:Src/pb_decode.c ****         return false;
 4116              		.loc 1 1085 8 view .LVU1114
 4117 0010 0346     		mov	r3, r0
 4118 0012 10B9     		cbnz	r0, .L393
 4119              	.LVL369:
 4120              	.L391:
1093:Src/pb_decode.c **** 
 4121              		.loc 1 1093 1 view .LVU1115
 4122 0014 1846     		mov	r0, r3
 4123 0016 04B0     		add	sp, sp, #16
 4124              	.LCFI96:
 4125              		.cfi_remember_state
 4126              		.cfi_def_cfa_offset 16
 4127              		@ sp needed
 4128 0018 70BD     		pop	{r4, r5, r6, pc}
 4129              	.LVL370:
 4130              	.L393:
 4131              	.LCFI97:
 4132              		.cfi_restore_state
1088:Src/pb_decode.c **** 
 4133              		.loc 1 1088 5 is_stmt 1 view .LVU1116
1088:Src/pb_decode.c **** 
 4134              		.loc 1 1088 14 is_stmt 0 view .LVU1117
 4135 001a 3246     		mov	r2, r6
 4136 001c 2946     		mov	r1, r5
 4137 001e 6846     		mov	r0, sp
 4138 0020 FFF7FEFF 		bl	pb_decode
 4139              	.LVL371:
 4140 0024 0546     		mov	r5, r0
 4141              	.LVL372:
1090:Src/pb_decode.c ****         return false;
 4142              		.loc 1 1090 5 is_stmt 1 view .LVU1118
1090:Src/pb_decode.c ****         return false;
 4143              		.loc 1 1090 10 is_stmt 0 view .LVU1119
 4144 0026 6946     		mov	r1, sp
 4145 0028 2046     		mov	r0, r4
 4146 002a FFF7FEFF 		bl	pb_close_string_substream
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 116


 4147              	.LVL373:
1090:Src/pb_decode.c ****         return false;
 4148              		.loc 1 1090 8 view .LVU1120
 4149 002e 0346     		mov	r3, r0
 4150 0030 0028     		cmp	r0, #0
 4151 0032 EFD0     		beq	.L391
1092:Src/pb_decode.c **** }
 4152              		.loc 1 1092 12 view .LVU1121
 4153 0034 2B46     		mov	r3, r5
 4154 0036 EDE7     		b	.L391
 4155              		.cfi_endproc
 4156              	.LFE27:
 4158              		.section	.text.pb_decode_nullterminated,"ax",%progbits
 4159              		.align	1
 4160              		.global	pb_decode_nullterminated
 4161              		.syntax unified
 4162              		.thumb
 4163              		.thumb_func
 4164              		.fpu fpv4-sp-d16
 4166              	pb_decode_nullterminated:
 4167              	.LVL374:
 4168              	.LFB28:
1096:Src/pb_decode.c ****     /* This behaviour will be separated in nanopb-0.4.0, see issue #278. */
 4169              		.loc 1 1096 1 is_stmt 1 view -0
 4170              		.cfi_startproc
 4171              		@ args = 0, pretend = 0, frame = 0
 4172              		@ frame_needed = 0, uses_anonymous_args = 0
1096:Src/pb_decode.c ****     /* This behaviour will be separated in nanopb-0.4.0, see issue #278. */
 4173              		.loc 1 1096 1 is_stmt 0 view .LVU1123
 4174 0000 08B5     		push	{r3, lr}
 4175              	.LCFI98:
 4176              		.cfi_def_cfa_offset 8
 4177              		.cfi_offset 3, -8
 4178              		.cfi_offset 14, -4
1098:Src/pb_decode.c **** }
 4179              		.loc 1 1098 5 is_stmt 1 view .LVU1124
1098:Src/pb_decode.c **** }
 4180              		.loc 1 1098 12 is_stmt 0 view .LVU1125
 4181 0002 FFF7FEFF 		bl	pb_decode
 4182              	.LVL375:
1099:Src/pb_decode.c **** 
 4183              		.loc 1 1099 1 view .LVU1126
 4184 0006 08BD     		pop	{r3, pc}
 4185              		.cfi_endproc
 4186              	.LFE28:
 4188              		.section	.text.pb_decode_svarint,"ax",%progbits
 4189              		.align	1
 4190              		.global	pb_decode_svarint
 4191              		.syntax unified
 4192              		.thumb
 4193              		.thumb_func
 4194              		.fpu fpv4-sp-d16
 4196              	pb_decode_svarint:
 4197              	.LVL376:
 4198              	.LFB29:
1241:Src/pb_decode.c ****     pb_uint64_t value;
 4199              		.loc 1 1241 1 is_stmt 1 view -0
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 117


 4200              		.cfi_startproc
 4201              		@ args = 0, pretend = 0, frame = 8
 4202              		@ frame_needed = 0, uses_anonymous_args = 0
1241:Src/pb_decode.c ****     pb_uint64_t value;
 4203              		.loc 1 1241 1 is_stmt 0 view .LVU1128
 4204 0000 30B5     		push	{r4, r5, lr}
 4205              	.LCFI99:
 4206              		.cfi_def_cfa_offset 12
 4207              		.cfi_offset 4, -12
 4208              		.cfi_offset 5, -8
 4209              		.cfi_offset 14, -4
 4210 0002 83B0     		sub	sp, sp, #12
 4211              	.LCFI100:
 4212              		.cfi_def_cfa_offset 24
 4213 0004 0C46     		mov	r4, r1
1242:Src/pb_decode.c ****     if (!pb_decode_varint(stream, &value))
 4214              		.loc 1 1242 5 is_stmt 1 view .LVU1129
1243:Src/pb_decode.c ****         return false;
 4215              		.loc 1 1243 5 view .LVU1130
1243:Src/pb_decode.c ****         return false;
 4216              		.loc 1 1243 10 is_stmt 0 view .LVU1131
 4217 0006 6946     		mov	r1, sp
 4218              	.LVL377:
1243:Src/pb_decode.c ****         return false;
 4219              		.loc 1 1243 10 view .LVU1132
 4220 0008 FFF7FEFF 		bl	pb_decode_varint
 4221              	.LVL378:
1243:Src/pb_decode.c ****         return false;
 4222              		.loc 1 1243 8 view .LVU1133
 4223 000c 0546     		mov	r5, r0
 4224 000e 70B1     		cbz	r0, .L397
1246:Src/pb_decode.c ****         *dest = (pb_int64_t)(~(value >> 1));
 4225              		.loc 1 1246 5 is_stmt 1 view .LVU1134
1246:Src/pb_decode.c ****         *dest = (pb_int64_t)(~(value >> 1));
 4226              		.loc 1 1246 15 is_stmt 0 view .LVU1135
 4227 0010 009B     		ldr	r3, [sp]
 4228 0012 019A     		ldr	r2, [sp, #4]
 4229 0014 03F00100 		and	r0, r3, #1
 4230 0018 0021     		movs	r1, #0
1246:Src/pb_decode.c ****         *dest = (pb_int64_t)(~(value >> 1));
 4231              		.loc 1 1246 8 view .LVU1136
 4232 001a 0143     		orrs	r1, r0, r1
 4233 001c 0AD0     		beq	.L398
1247:Src/pb_decode.c ****     else
 4234              		.loc 1 1247 9 is_stmt 1 view .LVU1137
1247:Src/pb_decode.c ****     else
 4235              		.loc 1 1247 38 is_stmt 0 view .LVU1138
 4236 001e 5B08     		lsrs	r3, r3, #1
 4237 0020 43EAC273 		orr	r3, r3, r2, lsl #31
1247:Src/pb_decode.c ****     else
 4238              		.loc 1 1247 30 view .LVU1139
 4239 0024 DB43     		mvns	r3, r3
 4240 0026 6FEA5202 		mvn	r2, r2, lsr #1
1247:Src/pb_decode.c ****     else
 4241              		.loc 1 1247 15 view .LVU1140
 4242 002a 2360     		str	r3, [r4]
 4243 002c 6260     		str	r2, [r4, #4]
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 118


 4244              	.L397:
1252:Src/pb_decode.c **** 
 4245              		.loc 1 1252 1 view .LVU1141
 4246 002e 2846     		mov	r0, r5
 4247 0030 03B0     		add	sp, sp, #12
 4248              	.LCFI101:
 4249              		.cfi_remember_state
 4250              		.cfi_def_cfa_offset 12
 4251              		@ sp needed
 4252 0032 30BD     		pop	{r4, r5, pc}
 4253              	.LVL379:
 4254              	.L398:
 4255              	.LCFI102:
 4256              		.cfi_restore_state
1249:Src/pb_decode.c ****     
 4257              		.loc 1 1249 9 is_stmt 1 view .LVU1142
1249:Src/pb_decode.c ****     
 4258              		.loc 1 1249 36 is_stmt 0 view .LVU1143
 4259 0034 5B08     		lsrs	r3, r3, #1
 4260 0036 43EAC273 		orr	r3, r3, r2, lsl #31
 4261 003a 5208     		lsrs	r2, r2, #1
1249:Src/pb_decode.c ****     
 4262              		.loc 1 1249 15 view .LVU1144
 4263 003c 2360     		str	r3, [r4]
 4264 003e 6260     		str	r2, [r4, #4]
 4265 0040 F5E7     		b	.L397
 4266              		.cfi_endproc
 4267              	.LFE29:
 4269              		.section	.text.pb_dec_svarint,"ax",%progbits
 4270              		.align	1
 4271              		.syntax unified
 4272              		.thumb
 4273              		.thumb_func
 4274              		.fpu fpv4-sp-d16
 4276              	pb_dec_svarint:
 4277              	.LVL380:
 4278              	.LFB34:
1351:Src/pb_decode.c ****     pb_int64_t value, clamped;
 4279              		.loc 1 1351 1 is_stmt 1 view -0
 4280              		.cfi_startproc
 4281              		@ args = 0, pretend = 0, frame = 8
 4282              		@ frame_needed = 0, uses_anonymous_args = 0
1351:Src/pb_decode.c ****     pb_int64_t value, clamped;
 4283              		.loc 1 1351 1 is_stmt 0 view .LVU1146
 4284 0000 70B5     		push	{r4, r5, r6, lr}
 4285              	.LCFI103:
 4286              		.cfi_def_cfa_offset 16
 4287              		.cfi_offset 4, -16
 4288              		.cfi_offset 5, -12
 4289              		.cfi_offset 6, -8
 4290              		.cfi_offset 14, -4
 4291 0002 82B0     		sub	sp, sp, #8
 4292              	.LCFI104:
 4293              		.cfi_def_cfa_offset 24
 4294 0004 0646     		mov	r6, r0
 4295 0006 0D46     		mov	r5, r1
 4296 0008 1446     		mov	r4, r2
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 119


1352:Src/pb_decode.c ****     if (!pb_decode_svarint(stream, &value))
 4297              		.loc 1 1352 5 is_stmt 1 view .LVU1147
1353:Src/pb_decode.c ****         return false;
 4298              		.loc 1 1353 5 view .LVU1148
1353:Src/pb_decode.c ****         return false;
 4299              		.loc 1 1353 10 is_stmt 0 view .LVU1149
 4300 000a 6946     		mov	r1, sp
 4301              	.LVL381:
1353:Src/pb_decode.c ****         return false;
 4302              		.loc 1 1353 10 view .LVU1150
 4303 000c FFF7FEFF 		bl	pb_decode_svarint
 4304              	.LVL382:
1353:Src/pb_decode.c ****         return false;
 4305              		.loc 1 1353 8 view .LVU1151
 4306 0010 0346     		mov	r3, r0
 4307 0012 E8B1     		cbz	r0, .L401
1357:Src/pb_decode.c ****         clamped = *(pb_int64_t*)dest = value;
 4308              		.loc 1 1357 5 is_stmt 1 view .LVU1152
1357:Src/pb_decode.c ****         clamped = *(pb_int64_t*)dest = value;
 4309              		.loc 1 1357 14 is_stmt 0 view .LVU1153
 4310 0014 B5F80720 		ldrh	r2, [r5, #7]	@ unaligned
1357:Src/pb_decode.c ****         clamped = *(pb_int64_t*)dest = value;
 4311              		.loc 1 1357 8 view .LVU1154
 4312 0018 082A     		cmp	r2, #8
 4313 001a 0BD0     		beq	.L410
1359:Src/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)value;
 4314              		.loc 1 1359 10 is_stmt 1 view .LVU1155
1359:Src/pb_decode.c ****         clamped = *(int32_t*)dest = (int32_t)value;
 4315              		.loc 1 1359 13 is_stmt 0 view .LVU1156
 4316 001c 042A     		cmp	r2, #4
 4317 001e 1AD0     		beq	.L411
1361:Src/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)value;
 4318              		.loc 1 1361 10 is_stmt 1 view .LVU1157
1361:Src/pb_decode.c ****         clamped = *(int_least16_t*)dest = (int_least16_t)value;
 4319              		.loc 1 1361 13 is_stmt 0 view .LVU1158
 4320 0020 022A     		cmp	r2, #2
 4321 0022 1CD0     		beq	.L412
1363:Src/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)value;
 4322              		.loc 1 1363 10 is_stmt 1 view .LVU1159
1363:Src/pb_decode.c ****         clamped = *(int_least8_t*)dest = (int_least8_t)value;
 4323              		.loc 1 1363 13 is_stmt 0 view .LVU1160
 4324 0024 012A     		cmp	r2, #1
 4325 0026 20D1     		bne	.L406
1364:Src/pb_decode.c ****     else
 4326              		.loc 1 1364 9 is_stmt 1 view .LVU1161
1364:Src/pb_decode.c ****     else
 4327              		.loc 1 1364 42 is_stmt 0 view .LVU1162
 4328 0028 9DF90000 		ldrsb	r0, [sp]
1364:Src/pb_decode.c ****     else
 4329              		.loc 1 1364 40 view .LVU1163
 4330 002c 2070     		strb	r0, [r4]
1364:Src/pb_decode.c ****     else
 4331              		.loc 1 1364 17 view .LVU1164
 4332 002e 40B2     		sxtb	r0, r0
 4333 0030 C117     		asrs	r1, r0, #31
 4334              	.LVL383:
1364:Src/pb_decode.c ****     else
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 120


 4335              		.loc 1 1364 17 view .LVU1165
 4336 0032 03E0     		b	.L403
 4337              	.LVL384:
 4338              	.L410:
1358:Src/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
 4339              		.loc 1 1358 9 is_stmt 1 view .LVU1166
1358:Src/pb_decode.c ****     else if (field->data_size == sizeof(int32_t))
 4340              		.loc 1 1358 38 is_stmt 0 view .LVU1167
 4341 0034 DDE90001 		ldrd	r0, [sp]
 4342 0038 C4E90001 		strd	r0, [r4]
 4343              	.LVL385:
 4344              	.L403:
1368:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 4345              		.loc 1 1368 5 is_stmt 1 view .LVU1168
1368:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 4346              		.loc 1 1368 17 is_stmt 0 view .LVU1169
 4347 003c DDE90045 		ldrd	r4, [sp]
 4348              	.LVL386:
1368:Src/pb_decode.c ****         PB_RETURN_ERROR(stream, "integer too large");
 4349              		.loc 1 1368 8 view .LVU1170
 4350 0040 8D42     		cmp	r5, r1
 4351 0042 08BF     		it	eq
 4352 0044 8442     		cmpeq	r4, r0
 4353 0046 03D0     		beq	.L401
1369:Src/pb_decode.c ****     
 4354              		.loc 1 1369 9 is_stmt 1 view .LVU1171
 4355 0048 F368     		ldr	r3, [r6, #12]
 4356 004a ABB1     		cbz	r3, .L413
 4357              	.L408:
1369:Src/pb_decode.c ****     
 4358              		.loc 1 1369 9 is_stmt 0 discriminator 4 view .LVU1172
 4359 004c F360     		str	r3, [r6, #12]
 4360 004e 0023     		movs	r3, #0
 4361              	.LVL387:
 4362              	.L401:
1372:Src/pb_decode.c **** 
 4363              		.loc 1 1372 1 view .LVU1173
 4364 0050 1846     		mov	r0, r3
 4365 0052 02B0     		add	sp, sp, #8
 4366              	.LCFI105:
 4367              		.cfi_remember_state
 4368              		.cfi_def_cfa_offset 16
 4369              		@ sp needed
 4370 0054 70BD     		pop	{r4, r5, r6, pc}
 4371              	.LVL388:
 4372              	.L411:
 4373              	.LCFI106:
 4374              		.cfi_restore_state
1360:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 4375              		.loc 1 1360 9 is_stmt 1 view .LVU1174
1360:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 4376              		.loc 1 1360 37 is_stmt 0 view .LVU1175
 4377 0056 0098     		ldr	r0, [sp]
1360:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 4378              		.loc 1 1360 35 view .LVU1176
 4379 0058 2060     		str	r0, [r4]
1360:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 121


 4380              		.loc 1 1360 17 view .LVU1177
 4381 005a C117     		asrs	r1, r0, #31
 4382              	.LVL389:
1360:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least16_t))
 4383              		.loc 1 1360 17 view .LVU1178
 4384 005c EEE7     		b	.L403
 4385              	.LVL390:
 4386              	.L412:
1362:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 4387              		.loc 1 1362 9 is_stmt 1 view .LVU1179
1362:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 4388              		.loc 1 1362 43 is_stmt 0 view .LVU1180
 4389 005e BDF90000 		ldrsh	r0, [sp]
1362:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 4390              		.loc 1 1362 41 view .LVU1181
 4391 0062 2080     		strh	r0, [r4]	@ movhi
1362:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 4392              		.loc 1 1362 17 view .LVU1182
 4393 0064 00B2     		sxth	r0, r0
 4394 0066 C117     		asrs	r1, r0, #31
 4395              	.LVL391:
1362:Src/pb_decode.c ****     else if (field->data_size == sizeof(int_least8_t))
 4396              		.loc 1 1362 17 view .LVU1183
 4397 0068 E8E7     		b	.L403
 4398              	.LVL392:
 4399              	.L406:
1366:Src/pb_decode.c **** 
 4400              		.loc 1 1366 9 is_stmt 1 view .LVU1184
 4401 006a F368     		ldr	r3, [r6, #12]
 4402 006c 13B1     		cbz	r3, .L414
 4403              	.L407:
1366:Src/pb_decode.c **** 
 4404              		.loc 1 1366 9 is_stmt 0 discriminator 4 view .LVU1185
 4405 006e F360     		str	r3, [r6, #12]
 4406 0070 0023     		movs	r3, #0
 4407 0072 EDE7     		b	.L401
 4408              	.L414:
1366:Src/pb_decode.c **** 
 4409              		.loc 1 1366 9 view .LVU1186
 4410 0074 014B     		ldr	r3, .L415
 4411 0076 FAE7     		b	.L407
 4412              	.LVL393:
 4413              	.L413:
1369:Src/pb_decode.c ****     
 4414              		.loc 1 1369 9 view .LVU1187
 4415 0078 014B     		ldr	r3, .L415+4
 4416 007a E7E7     		b	.L408
 4417              	.L416:
 4418              		.align	2
 4419              	.L415:
 4420 007c 00000000 		.word	.LC9
 4421 0080 14000000 		.word	.LC10
 4422              		.cfi_endproc
 4423              	.LFE34:
 4425              		.section	.text.pb_decode_fixed32,"ax",%progbits
 4426              		.align	1
 4427              		.global	pb_decode_fixed32
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 122


 4428              		.syntax unified
 4429              		.thumb
 4430              		.thumb_func
 4431              		.fpu fpv4-sp-d16
 4433              	pb_decode_fixed32:
 4434              	.LVL394:
 4435              	.LFB30:
1255:Src/pb_decode.c ****     pb_byte_t bytes[4];
 4436              		.loc 1 1255 1 is_stmt 1 view -0
 4437              		.cfi_startproc
 4438              		@ args = 0, pretend = 0, frame = 8
 4439              		@ frame_needed = 0, uses_anonymous_args = 0
1255:Src/pb_decode.c ****     pb_byte_t bytes[4];
 4440              		.loc 1 1255 1 is_stmt 0 view .LVU1189
 4441 0000 10B5     		push	{r4, lr}
 4442              	.LCFI107:
 4443              		.cfi_def_cfa_offset 8
 4444              		.cfi_offset 4, -8
 4445              		.cfi_offset 14, -4
 4446 0002 82B0     		sub	sp, sp, #8
 4447              	.LCFI108:
 4448              		.cfi_def_cfa_offset 16
 4449 0004 0C46     		mov	r4, r1
1256:Src/pb_decode.c **** 
 4450              		.loc 1 1256 5 is_stmt 1 view .LVU1190
1258:Src/pb_decode.c ****         return false;
 4451              		.loc 1 1258 5 view .LVU1191
1258:Src/pb_decode.c ****         return false;
 4452              		.loc 1 1258 10 is_stmt 0 view .LVU1192
 4453 0006 0422     		movs	r2, #4
 4454 0008 0DEB0201 		add	r1, sp, r2
 4455              	.LVL395:
1258:Src/pb_decode.c ****         return false;
 4456              		.loc 1 1258 10 view .LVU1193
 4457 000c FFF7FEFF 		bl	pb_read
 4458              	.LVL396:
1258:Src/pb_decode.c ****         return false;
 4459              		.loc 1 1258 8 view .LVU1194
 4460 0010 0246     		mov	r2, r0
 4461 0012 70B1     		cbz	r0, .L418
1261:Src/pb_decode.c ****                        ((uint32_t)bytes[1] << 8) |
 4462              		.loc 1 1261 5 is_stmt 1 view .LVU1195
1261:Src/pb_decode.c ****                        ((uint32_t)bytes[1] << 8) |
 4463              		.loc 1 1261 40 is_stmt 0 view .LVU1196
 4464 0014 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1262:Src/pb_decode.c ****                        ((uint32_t)bytes[2] << 16) |
 4465              		.loc 1 1262 40 view .LVU1197
 4466 0018 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
1261:Src/pb_decode.c ****                        ((uint32_t)bytes[1] << 8) |
 4467              		.loc 1 1261 50 view .LVU1198
 4468 001c 43EA0123 		orr	r3, r3, r1, lsl #8
1263:Src/pb_decode.c ****                        ((uint32_t)bytes[3] << 24);
 4469              		.loc 1 1263 40 view .LVU1199
 4470 0020 9DF80610 		ldrb	r1, [sp, #6]	@ zero_extendqisi2
1262:Src/pb_decode.c ****                        ((uint32_t)bytes[2] << 16) |
 4471              		.loc 1 1262 50 view .LVU1200
 4472 0024 43EA0143 		orr	r3, r3, r1, lsl #16
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 123


1264:Src/pb_decode.c ****     return true;
 4473              		.loc 1 1264 40 view .LVU1201
 4474 0028 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
1263:Src/pb_decode.c ****                        ((uint32_t)bytes[3] << 24);
 4475              		.loc 1 1263 51 view .LVU1202
 4476 002c 43EA0163 		orr	r3, r3, r1, lsl #24
1261:Src/pb_decode.c ****                        ((uint32_t)bytes[1] << 8) |
 4477              		.loc 1 1261 22 view .LVU1203
 4478 0030 2360     		str	r3, [r4]
1265:Src/pb_decode.c **** }
 4479              		.loc 1 1265 5 is_stmt 1 view .LVU1204
 4480              	.L418:
1266:Src/pb_decode.c **** 
 4481              		.loc 1 1266 1 is_stmt 0 view .LVU1205
 4482 0032 1046     		mov	r0, r2
 4483 0034 02B0     		add	sp, sp, #8
 4484              	.LCFI109:
 4485              		.cfi_def_cfa_offset 8
 4486              		@ sp needed
 4487 0036 10BD     		pop	{r4, pc}
1266:Src/pb_decode.c **** 
 4488              		.loc 1 1266 1 view .LVU1206
 4489              		.cfi_endproc
 4490              	.LFE30:
 4492              		.section	.text.pb_dec_fixed32,"ax",%progbits
 4493              		.align	1
 4494              		.syntax unified
 4495              		.thumb
 4496              		.thumb_func
 4497              		.fpu fpv4-sp-d16
 4499              	pb_dec_fixed32:
 4500              	.LVL397:
 4501              	.LFB35:
1375:Src/pb_decode.c ****     PB_UNUSED(field);
 4502              		.loc 1 1375 1 is_stmt 1 view -0
 4503              		.cfi_startproc
 4504              		@ args = 0, pretend = 0, frame = 0
 4505              		@ frame_needed = 0, uses_anonymous_args = 0
1375:Src/pb_decode.c ****     PB_UNUSED(field);
 4506              		.loc 1 1375 1 is_stmt 0 view .LVU1208
 4507 0000 08B5     		push	{r3, lr}
 4508              	.LCFI110:
 4509              		.cfi_def_cfa_offset 8
 4510              		.cfi_offset 3, -8
 4511              		.cfi_offset 14, -4
1376:Src/pb_decode.c ****     return pb_decode_fixed32(stream, dest);
 4512              		.loc 1 1376 5 is_stmt 1 view .LVU1209
1377:Src/pb_decode.c **** }
 4513              		.loc 1 1377 5 view .LVU1210
1377:Src/pb_decode.c **** }
 4514              		.loc 1 1377 12 is_stmt 0 view .LVU1211
 4515 0002 1146     		mov	r1, r2
 4516              	.LVL398:
1377:Src/pb_decode.c **** }
 4517              		.loc 1 1377 12 view .LVU1212
 4518 0004 FFF7FEFF 		bl	pb_decode_fixed32
 4519              	.LVL399:
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 124


1378:Src/pb_decode.c **** 
 4520              		.loc 1 1378 1 view .LVU1213
 4521 0008 08BD     		pop	{r3, pc}
 4522              		.cfi_endproc
 4523              	.LFE35:
 4525              		.section	.text.pb_decode_fixed64,"ax",%progbits
 4526              		.align	1
 4527              		.global	pb_decode_fixed64
 4528              		.syntax unified
 4529              		.thumb
 4530              		.thumb_func
 4531              		.fpu fpv4-sp-d16
 4533              	pb_decode_fixed64:
 4534              	.LVL400:
 4535              	.LFB31:
1270:Src/pb_decode.c ****     pb_byte_t bytes[8];
 4536              		.loc 1 1270 1 is_stmt 1 view -0
 4537              		.cfi_startproc
 4538              		@ args = 0, pretend = 0, frame = 8
 4539              		@ frame_needed = 0, uses_anonymous_args = 0
1270:Src/pb_decode.c ****     pb_byte_t bytes[8];
 4540              		.loc 1 1270 1 is_stmt 0 view .LVU1215
 4541 0000 D0B5     		push	{r4, r6, r7, lr}
 4542              	.LCFI111:
 4543              		.cfi_def_cfa_offset 16
 4544              		.cfi_offset 4, -16
 4545              		.cfi_offset 6, -12
 4546              		.cfi_offset 7, -8
 4547              		.cfi_offset 14, -4
 4548 0002 82B0     		sub	sp, sp, #8
 4549              	.LCFI112:
 4550              		.cfi_def_cfa_offset 24
 4551 0004 0C46     		mov	r4, r1
1271:Src/pb_decode.c **** 
 4552              		.loc 1 1271 5 is_stmt 1 view .LVU1216
1273:Src/pb_decode.c ****         return false;
 4553              		.loc 1 1273 5 view .LVU1217
1273:Src/pb_decode.c ****         return false;
 4554              		.loc 1 1273 10 is_stmt 0 view .LVU1218
 4555 0006 0822     		movs	r2, #8
 4556 0008 6946     		mov	r1, sp
 4557              	.LVL401:
1273:Src/pb_decode.c ****         return false;
 4558              		.loc 1 1273 10 view .LVU1219
 4559 000a FFF7FEFF 		bl	pb_read
 4560              	.LVL402:
1273:Src/pb_decode.c ****         return false;
 4561              		.loc 1 1273 8 view .LVU1220
 4562 000e 0146     		mov	r1, r0
 4563 0010 E8B1     		cbz	r0, .L423
1276:Src/pb_decode.c ****                        ((uint64_t)bytes[1] << 8) |
 4564              		.loc 1 1276 5 is_stmt 1 view .LVU1221
1276:Src/pb_decode.c ****                        ((uint64_t)bytes[1] << 8) |
 4565              		.loc 1 1276 44 is_stmt 0 view .LVU1222
 4566 0012 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
1277:Src/pb_decode.c ****                        ((uint64_t)bytes[2] << 16) |
 4567              		.loc 1 1277 25 view .LVU1223
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 125


 4568 0016 9DF80160 		ldrb	r6, [sp, #1]	@ zero_extendqisi2
1276:Src/pb_decode.c ****                        ((uint64_t)bytes[1] << 8) |
 4569              		.loc 1 1276 50 view .LVU1224
 4570 001a 42EA0622 		orr	r2, r2, r6, lsl #8
1278:Src/pb_decode.c ****                        ((uint64_t)bytes[3] << 24) |
 4571              		.loc 1 1278 25 view .LVU1225
 4572 001e 9DF80260 		ldrb	r6, [sp, #2]	@ zero_extendqisi2
1277:Src/pb_decode.c ****                        ((uint64_t)bytes[2] << 16) |
 4573              		.loc 1 1277 50 view .LVU1226
 4574 0022 42EA0642 		orr	r2, r2, r6, lsl #16
1279:Src/pb_decode.c ****                        ((uint64_t)bytes[4] << 32) |
 4575              		.loc 1 1279 25 view .LVU1227
 4576 0026 9DF80360 		ldrb	r6, [sp, #3]	@ zero_extendqisi2
1278:Src/pb_decode.c ****                        ((uint64_t)bytes[3] << 24) |
 4577              		.loc 1 1278 51 view .LVU1228
 4578 002a 42EA0662 		orr	r2, r2, r6, lsl #24
1279:Src/pb_decode.c ****                        ((uint64_t)bytes[4] << 32) |
 4579              		.loc 1 1279 51 view .LVU1229
 4580 002e 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
1281:Src/pb_decode.c ****                        ((uint64_t)bytes[6] << 48) |
 4581              		.loc 1 1281 25 view .LVU1230
 4582 0032 9DF80560 		ldrb	r6, [sp, #5]	@ zero_extendqisi2
1280:Src/pb_decode.c ****                        ((uint64_t)bytes[5] << 40) |
 4583              		.loc 1 1280 51 view .LVU1231
 4584 0036 43EA0623 		orr	r3, r3, r6, lsl #8
1282:Src/pb_decode.c ****                        ((uint64_t)bytes[7] << 56);
 4585              		.loc 1 1282 25 view .LVU1232
 4586 003a 9DF80660 		ldrb	r6, [sp, #6]	@ zero_extendqisi2
1281:Src/pb_decode.c ****                        ((uint64_t)bytes[6] << 48) |
 4587              		.loc 1 1281 51 view .LVU1233
 4588 003e 43EA0643 		orr	r3, r3, r6, lsl #16
1283:Src/pb_decode.c ****     
 4589              		.loc 1 1283 25 view .LVU1234
 4590 0042 9DF80760 		ldrb	r6, [sp, #7]	@ zero_extendqisi2
1282:Src/pb_decode.c ****                        ((uint64_t)bytes[7] << 56);
 4591              		.loc 1 1282 51 view .LVU1235
 4592 0046 43EA0663 		orr	r3, r3, r6, lsl #24
1276:Src/pb_decode.c ****                        ((uint64_t)bytes[1] << 8) |
 4593              		.loc 1 1276 22 view .LVU1236
 4594 004a 2260     		str	r2, [r4]
 4595 004c 6360     		str	r3, [r4, #4]
1285:Src/pb_decode.c **** }
 4596              		.loc 1 1285 5 is_stmt 1 view .LVU1237
 4597              	.L423:
1286:Src/pb_decode.c **** #endif
 4598              		.loc 1 1286 1 is_stmt 0 view .LVU1238
 4599 004e 0846     		mov	r0, r1
 4600 0050 02B0     		add	sp, sp, #8
 4601              	.LCFI113:
 4602              		.cfi_def_cfa_offset 16
 4603              		@ sp needed
 4604 0052 D0BD     		pop	{r4, r6, r7, pc}
1286:Src/pb_decode.c **** #endif
 4605              		.loc 1 1286 1 view .LVU1239
 4606              		.cfi_endproc
 4607              	.LFE31:
 4609              		.section	.text.pb_dec_fixed64,"ax",%progbits
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 126


 4610              		.align	1
 4611              		.syntax unified
 4612              		.thumb
 4613              		.thumb_func
 4614              		.fpu fpv4-sp-d16
 4616              	pb_dec_fixed64:
 4617              	.LVL403:
 4618              	.LFB36:
1381:Src/pb_decode.c ****     PB_UNUSED(field);
 4619              		.loc 1 1381 1 is_stmt 1 view -0
 4620              		.cfi_startproc
 4621              		@ args = 0, pretend = 0, frame = 0
 4622              		@ frame_needed = 0, uses_anonymous_args = 0
1381:Src/pb_decode.c ****     PB_UNUSED(field);
 4623              		.loc 1 1381 1 is_stmt 0 view .LVU1241
 4624 0000 08B5     		push	{r3, lr}
 4625              	.LCFI114:
 4626              		.cfi_def_cfa_offset 8
 4627              		.cfi_offset 3, -8
 4628              		.cfi_offset 14, -4
1382:Src/pb_decode.c **** #ifndef PB_WITHOUT_64BIT
 4629              		.loc 1 1382 5 is_stmt 1 view .LVU1242
1384:Src/pb_decode.c **** #else
 4630              		.loc 1 1384 5 view .LVU1243
1384:Src/pb_decode.c **** #else
 4631              		.loc 1 1384 12 is_stmt 0 view .LVU1244
 4632 0002 1146     		mov	r1, r2
 4633              	.LVL404:
1384:Src/pb_decode.c **** #else
 4634              		.loc 1 1384 12 view .LVU1245
 4635 0004 FFF7FEFF 		bl	pb_decode_fixed64
 4636              	.LVL405:
1389:Src/pb_decode.c **** 
 4637              		.loc 1 1389 1 view .LVU1246
 4638 0008 08BD     		pop	{r3, pc}
 4639              		.cfi_endproc
 4640              	.LFE36:
 4642              		.section	.rodata.PB_DECODERS,"a"
 4643              		.align	2
 4644              		.set	.LANCHOR0,. + 0
 4647              	PB_DECODERS:
 4648 0000 00000000 		.word	pb_dec_varint
 4649 0004 00000000 		.word	pb_dec_uvarint
 4650 0008 00000000 		.word	pb_dec_svarint
 4651 000c 00000000 		.word	pb_dec_fixed32
 4652 0010 00000000 		.word	pb_dec_fixed64
 4653 0014 00000000 		.word	pb_dec_bytes
 4654 0018 00000000 		.word	pb_dec_string
 4655 001c 00000000 		.word	pb_dec_submessage
 4656 0020 00000000 		.word	0
 4657 0024 00000000 		.word	pb_dec_fixed_length_bytes
 4658              		.section	.rodata.decode_callback_field.str1.4,"aMS",%progbits,1
 4659              		.align	2
 4660              	.LC14:
 4661 0000 63616C6C 		.ascii	"callback failed\000"
 4661      6261636B 
 4661      20666169 
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 127


 4661      6C656400 
 4662              		.section	.rodata.decode_pointer_field.str1.4,"aMS",%progbits,1
 4663              		.align	2
 4664              	.LC3:
 4665 0000 6E6F206D 		.ascii	"no malloc support\000"
 4665      616C6C6F 
 4665      63207375 
 4665      70706F72 
 4665      7400
 4666              		.section	.rodata.decode_static_field.str1.4,"aMS",%progbits,1
 4667              		.align	2
 4668              	.LC12:
 4669 0000 61727261 		.ascii	"array overflow\000"
 4669      79206F76 
 4669      6572666C 
 4669      6F7700
 4670 000f 00       		.space	1
 4671              	.LC13:
 4672 0010 696E7661 		.ascii	"invalid field type\000"
 4672      6C696420 
 4672      6669656C 
 4672      64207479 
 4672      706500
 4673              		.section	.rodata.pb_dec_fixed_length_bytes.str1.4,"aMS",%progbits,1
 4674              		.align	2
 4675              	.LC5:
 4676 0000 62797465 		.ascii	"bytes overflow\000"
 4676      73206F76 
 4676      6572666C 
 4676      6F7700
 4677 000f 00       		.space	1
 4678              	.LC6:
 4679 0010 696E636F 		.ascii	"incorrect fixed length bytes size\000"
 4679      72726563 
 4679      74206669 
 4679      78656420 
 4679      6C656E67 
 4680              		.section	.rodata.pb_dec_string.str1.4,"aMS",%progbits,1
 4681              		.align	2
 4682              	.LC7:
 4683 0000 73697A65 		.ascii	"size too large\000"
 4683      20746F6F 
 4683      206C6172 
 4683      676500
 4684 000f 00       		.space	1
 4685              	.LC8:
 4686 0010 73747269 		.ascii	"string overflow\000"
 4686      6E67206F 
 4686      76657266 
 4686      6C6F7700 
 4687              		.section	.rodata.pb_dec_submessage.str1.4,"aMS",%progbits,1
 4688              		.align	2
 4689              	.LC17:
 4690 0000 696E7661 		.ascii	"invalid field descriptor\000"
 4690      6C696420 
 4690      6669656C 
 4690      64206465 
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 128


 4690      73637269 
 4691              		.section	.rodata.pb_dec_uvarint.str1.4,"aMS",%progbits,1
 4692              		.align	2
 4693              	.LC9:
 4694 0000 696E7661 		.ascii	"invalid data_size\000"
 4694      6C696420 
 4694      64617461 
 4694      5F73697A 
 4694      6500
 4695 0012 0000     		.space	2
 4696              	.LC10:
 4697 0014 696E7465 		.ascii	"integer too large\000"
 4697      67657220 
 4697      746F6F20 
 4697      6C617267 
 4697      6500
 4698              		.section	.rodata.pb_decode_noinit.str1.4,"aMS",%progbits,1
 4699              		.align	2
 4700              	.LC15:
 4701 0000 77726F6E 		.ascii	"wrong size for fixed count field\000"
 4701      67207369 
 4701      7A652066 
 4701      6F722066 
 4701      69786564 
 4702 0021 000000   		.space	3
 4703              	.LC16:
 4704 0024 6D697373 		.ascii	"missing required field\000"
 4704      696E6720 
 4704      72657175 
 4704      69726564 
 4704      20666965 
 4705              		.section	.rodata.pb_decode_varint32_eof.str1.4,"aMS",%progbits,1
 4706              		.align	2
 4707              	.LC2:
 4708 0000 76617269 		.ascii	"varint overflow\000"
 4708      6E74206F 
 4708      76657266 
 4708      6C6F7700 
 4709              		.section	.rodata.pb_make_string_substream.str1.4,"aMS",%progbits,1
 4710              		.align	2
 4711              	.LC11:
 4712 0000 70617265 		.ascii	"parent stream too short\000"
 4712      6E742073 
 4712      74726561 
 4712      6D20746F 
 4712      6F207368 
 4713              		.section	.rodata.pb_readbyte.str1.4,"aMS",%progbits,1
 4714              		.align	2
 4715              	.LC0:
 4716 0000 656E642D 		.ascii	"end-of-stream\000"
 4716      6F662D73 
 4716      74726561 
 4716      6D00
 4717 000e 0000     		.space	2
 4718              	.LC1:
 4719 0010 696F2065 		.ascii	"io error\000"
 4719      72726F72 
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 129


 4719      00
 4720              		.section	.rodata.read_raw_value.str1.4,"aMS",%progbits,1
 4721              		.align	2
 4722              	.LC4:
 4723 0000 696E7661 		.ascii	"invalid wire_type\000"
 4723      6C696420 
 4723      77697265 
 4723      5F747970 
 4723      6500
 4724              		.text
 4725              	.Letext0:
 4726              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 4727              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 4728              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 4729              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\lib\\gcc\\arm-none-eab
 4730              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 4731              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 4732              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 4733              		.file 9 "Inc/pb.h"
 4734              		.file 10 "Inc/pb_decode.h"
 4735              		.file 11 "Inc/pb_common.h"
 4736              		.file 12 "<built-in>"
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 130


DEFINED SYMBOLS
                            *ABS*:00000000 pb_decode.c
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:18     .text.buf_read:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:25     .text.buf_read:00000000 buf_read
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:87     .text.pb_readbyte:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:93     .text.pb_readbyte:00000000 pb_readbyte
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:176    .text.pb_readbyte:00000038 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:182    .text.pb_decode_varint32_eof:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:188    .text.pb_decode_varint32_eof:00000000 pb_decode_varint32_eof
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:389    .text.pb_decode_varint32_eof:000000b8 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:395    .text.decode_pointer_field:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:401    .text.decode_pointer_field:00000000 decode_pointer_field
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:430    .text.decode_pointer_field:00000010 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:435    .text.iter_from_extension:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:441    .text.iter_from_extension:00000000 iter_from_extension
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:507    .text.find_extension_field:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:513    .text.find_extension_field:00000000 find_extension_field
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:567    .text.pb_field_set_to_default:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:573    .text.pb_field_set_to_default:00000000 pb_field_set_to_default
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:791    .text.pb_message_set_to_defaults:00000000 pb_message_set_to_defaults
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:785    .text.pb_message_set_to_defaults:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:844    .text.pb_read:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:851    .text.pb_read:00000000 pb_read
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:994    .text.pb_read:00000074 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1001   .text.pb_skip_varint:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1007   .text.pb_skip_varint:00000000 pb_skip_varint
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1056   .text.read_raw_value:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1062   .text.read_raw_value:00000000 read_raw_value
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1199   .text.read_raw_value:00000074 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1204   .text.pb_istream_from_buffer:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1211   .text.pb_istream_from_buffer:00000000 pb_istream_from_buffer
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1253   .text.pb_istream_from_buffer:00000014 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1258   .text.pb_decode_varint32:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1265   .text.pb_decode_varint32:00000000 pb_decode_varint32
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1289   .text.pb_skip_string:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1295   .text.pb_skip_string:00000000 pb_skip_string
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1347   .text.pb_dec_fixed_length_bytes:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1353   .text.pb_dec_fixed_length_bytes:00000000 pb_dec_fixed_length_bytes
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1459   .text.pb_dec_fixed_length_bytes:00000060 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1465   .text.pb_dec_string:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1471   .text.pb_dec_string:00000000 pb_dec_string
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1601   .text.pb_dec_string:0000006c $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1608   .text.pb_dec_bytes:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1614   .text.pb_dec_bytes:00000000 pb_dec_bytes
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1760   .text.pb_dec_bytes:00000080 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1767   .text.pb_decode_varint:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1774   .text.pb_decode_varint:00000000 pb_decode_varint
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1884   .text.pb_decode_varint:00000070 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1889   .text.pb_dec_uvarint:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:1895   .text.pb_dec_uvarint:00000000 pb_dec_uvarint
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2039   .text.pb_dec_uvarint:0000007c $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2045   .text.pb_dec_varint:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2051   .text.pb_dec_varint:00000000 pb_dec_varint
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2215   .text.pb_dec_varint:00000084 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2221   .text.pb_decode_tag:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2228   .text.pb_decode_tag:00000000 pb_decode_tag
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2318   .text.pb_skip_field:00000000 $t
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 131


C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2325   .text.pb_skip_field:00000000 pb_skip_field
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2343   .text.pb_skip_field:0000000a $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2349   .text.pb_skip_field:00000010 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2410   .text.pb_skip_field:00000040 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2415   .text.pb_make_string_substream:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2422   .text.pb_make_string_substream:00000000 pb_make_string_substream
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2500   .text.pb_make_string_substream:0000003c $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2505   .text.pb_close_string_substream:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2512   .text.pb_close_string_substream:00000000 pb_close_string_substream
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2574   .text.decode_static_field:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2580   .text.decode_static_field:00000000 decode_static_field
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2921   .text.decode_static_field:00000138 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2928   .text.decode_callback_field:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:2934   .text.decode_callback_field:00000000 decode_callback_field
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3098   .text.decode_callback_field:00000094 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3104   .text.decode_field:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3110   .text.decode_field:00000000 decode_field
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3177   .text.decode_field:00000034 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3182   .text.default_extension_decoder:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3188   .text.default_extension_decoder:00000000 default_extension_decoder
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3261   .text.decode_extension:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3267   .text.decode_extension:00000000 decode_extension
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3370   .text.pb_decode_noinit:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3377   .text.pb_decode_noinit:00000000 pb_decode_noinit
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3820   .text.pb_decode_noinit:000001c0 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3826   .text.pb_decode:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3833   .text.pb_decode:00000000 pb_decode
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3876   .text.pb_dec_submessage:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3882   .text.pb_dec_submessage:00000000 pb_dec_submessage
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3994   .text.pb_dec_submessage:00000064 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:3999   .text.pb_decode_delimited_noinit:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4006   .text.pb_decode_delimited_noinit:00000000 pb_decode_delimited_noinit
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4079   .text.pb_decode_delimited:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4086   .text.pb_decode_delimited:00000000 pb_decode_delimited
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4159   .text.pb_decode_nullterminated:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4166   .text.pb_decode_nullterminated:00000000 pb_decode_nullterminated
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4189   .text.pb_decode_svarint:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4196   .text.pb_decode_svarint:00000000 pb_decode_svarint
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4270   .text.pb_dec_svarint:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4276   .text.pb_dec_svarint:00000000 pb_dec_svarint
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4420   .text.pb_dec_svarint:0000007c $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4426   .text.pb_decode_fixed32:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4433   .text.pb_decode_fixed32:00000000 pb_decode_fixed32
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4493   .text.pb_dec_fixed32:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4499   .text.pb_dec_fixed32:00000000 pb_dec_fixed32
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4526   .text.pb_decode_fixed64:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4533   .text.pb_decode_fixed64:00000000 pb_decode_fixed64
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4610   .text.pb_dec_fixed64:00000000 $t
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4616   .text.pb_dec_fixed64:00000000 pb_dec_fixed64
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4643   .rodata.PB_DECODERS:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4647   .rodata.PB_DECODERS:00000000 PB_DECODERS
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4659   .rodata.decode_callback_field.str1.4:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4663   .rodata.decode_pointer_field.str1.4:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4667   .rodata.decode_static_field.str1.4:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4674   .rodata.pb_dec_fixed_length_bytes.str1.4:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4681   .rodata.pb_dec_string.str1.4:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4688   .rodata.pb_dec_submessage.str1.4:00000000 $d
ARM GAS  C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s 			page 132


C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4692   .rodata.pb_dec_uvarint.str1.4:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4699   .rodata.pb_decode_noinit.str1.4:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4706   .rodata.pb_decode_varint32_eof.str1.4:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4710   .rodata.pb_make_string_substream.str1.4:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4714   .rodata.pb_readbyte.str1.4:00000000 $d
C:\Users\grgcz\AppData\Local\Temp\ccvNlRs9.s:4721   .rodata.read_raw_value.str1.4:00000000 $d

UNDEFINED SYMBOLS
pb_field_iter_begin
pb_field_iter_next
memcpy
memset
pb_field_iter_find
